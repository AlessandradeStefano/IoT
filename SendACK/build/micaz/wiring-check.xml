<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="25:sendAckAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x404e3e88"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x403f5434"/></to>
    </wire>
    <wire loc="72:/home/user/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x403f5434"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x403f6bfc"/></to>
    </wire>
    <wire loc="28:sendAckAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40544560"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40cb3650"/></to>
    </wire>
    <wire loc="54:/home/user/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40cb3650"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x405c0010"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x405187bc"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="29:sendAckAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x4053ddd0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4057c698"/></to>
    </wire>
    <wire loc="31:sendAckAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x4053ddd0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40ccc528"/>
      <arguments>
        <value cst="I:137">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/user/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x4057c698"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41089784"/></to>
    </wire>
    <wire loc="30:sendAckAppC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40539644"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40ccfc34"/></to>
    </wire>
    <wire loc="38:sendAckAppC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40539644"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x405c4d68"/></to>
    </wire>
    <wire loc="76:/home/user/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x405c4d68"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x405dc670"/></to>
    </wire>
    <wire loc="61:/home/user/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40ccfc34"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40d1aaa4"/></to>
    </wire>
    <wire loc="34:sendAckAppC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x405475f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x404e1a20"/></to>
    </wire>
    <wire loc="56:/home/user/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x404e1a20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x404eb45c"/></to>
    </wire>
    <wire loc="23:FakeSensorC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403ef010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x403f1428"/></to>
    </wire>
    <wire loc="72:/home/user/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403ef010"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x40e0c010"/></to>
    </wire>
    <wire loc="73:/home/user/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403ef010"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x40e0ba10"/></to>
    </wire>
    <wire loc="61:/home/user/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403ef010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40de92fc"/></to>
    </wire>
    <wire loc="59:/home/user/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403ef010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40d1a72c"/></to>
    </wire>
    <wire loc="104:/home/user/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403ef010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40c2ee10"/></to>
    </wire>
    <wire loc="60:/home/user/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403ef010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40bf8840"/></to>
    </wire>
    <wire loc="58:/home/user/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403ef010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40be14e8"/></to>
    </wire>
    <wire loc="53:/home/user/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403ef010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40b25880"/></to>
    </wire>
    <wire loc="66:/home/user/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403ef010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40a8e408"/></to>
    </wire>
    <wire loc="62:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403ef010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40a1e34c"/></to>
    </wire>
    <wire loc="63:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403ef010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x406b219c"/></to>
    </wire>
    <wire loc="96:/home/user/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403ef010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x411417fc"/></to>
    </wire>
    <wire loc="74:/home/user/tinyos-main/tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403ef010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x408cd980"/></to>
    </wire>
    <wire loc="60:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403ef010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40659ae4"/></to>
    </wire>
    <wire loc="52:/home/user/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403ef010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404e4658"/></to>
    </wire>
    <wire loc="35:sendAckAppC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403ef010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x403f1428"/></to>
    </wire>
    <wire loc="54:/home/user/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x403f1428"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404e4658"/></to>
    </wire>
    <wire loc="41:sendAckAppC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4052fa34"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4057b3e0"/></to>
    </wire>
    <wire loc="66:/home/user/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4057b3e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x410874bc"/></to>
    </wire>
    <wire loc="42:sendAckAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40529098"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4057cd04"/></to>
    </wire>
    <wire loc="65:/home/user/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4057cd04"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41089df0"/></to>
    </wire>
    <wire loc="43:sendAckAppC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40533b34"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405bfd28"/></to>
    </wire>
    <wire loc="83:/home/user/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405bfd28"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405e3d04"/></to>
    </wire>
    <wire loc="46:sendAckAppC.nc">
      <from><interface-ref name="MilliTimer" scoped="" ref="0x40534010"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40cd99d0"/></to>
    </wire>
    <wire loc="52:/home/user/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40cd99d0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40bc2b8c"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:sendAckAppC.nc">
      <from><interface-ref name="MissingTimer" scoped="" ref="0x4053e2c8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40cd557c"/></to>
    </wire>
    <wire loc="52:/home/user/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40cd557c"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40bc2b8c"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:sendAckAppC.nc">
      <from><interface-ref name="SendTimer" scoped="" ref="0x405494e8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40cd21bc"/></to>
    </wire>
    <wire loc="52:/home/user/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40cd21bc"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40bc2b8c"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:sendAckAppC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40551d64"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40eeeb4c"/></to>
    </wire>
    <wire loc="19:FakeSensorC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40eeeb4c"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x41271480"/></to>
    </wire>
    <wire loc="67:/home/user/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x404de010"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x40347df8"/></to>
    </wire>
    <wire loc="53:/home/user/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x40347df8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x403ced20"/></to>
    </wire>
    <wire loc="68:/home/user/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x404de5ac"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x403ef8ac"/></to>
    </wire>
    <wire loc="58:/home/user/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x403ef8ac"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x403fd208"/></to>
    </wire>
    <wire loc="71:/home/user/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404de990"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x403ef010"/></to>
    </wire>
    <wire loc="26:/home/user/tinyos-main/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x403fe7c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40ed0ac0"/></to>
    </wire>
    <wire loc="26:/home/user/tinyos-main/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x403fe7c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4078f72c"/></to>
    </wire>
    <wire loc="59:/home/user/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x403fe098"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x404cb0f8"/></to>
    </wire>
    <wire loc="61:/home/user/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x403fd9a8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404cccc8"/></to>
    </wire>
    <wire loc="54:/home/user/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x403fd5c4"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x409acdf4"/></to>
    </wire>
    <wire loc="62:/home/user/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x403fd5c4"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x403f3850"/></to>
    </wire>
    <wire loc="46:/home/user/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x403f3850"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x40405724"/></to>
    </wire>
    <wire loc="63:/home/user/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x403f3c00"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x403fe7c8"/></to>
    </wire>
    <wire loc="48:/home/user/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x40408b5c"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x4040dad8"/></to>
    </wire>
    <wire loc="141:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x4040dad8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4045a010"/></to>
    </wire>
    <wire loc="49:/home/user/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x40402570"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x403f3c00"/></to>
    </wire>
    <wire loc="191:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x4042c654"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404a5984"/></to>
    </wire>
    <wire loc="165:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x4041ee7c"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4046c010"/></to>
    </wire>
    <wire loc="67:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x4046c010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f99710"/></to>
    </wire>
    <wire loc="176:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x404213c0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40477694"/></to>
    </wire>
    <wire loc="69:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x40477694"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fd08b8"/></to>
    </wire>
    <wire loc="185:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x404253c0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4047a930"/></to>
    </wire>
    <wire loc="69:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x4047a930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4100a8b8"/></to>
    </wire>
    <wire loc="143:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x4040b010"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40459324"/></to>
    </wire>
    <wire loc="72:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x40459324"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f24514"/></to>
    </wire>
    <wire loc="183:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x40426030"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4047b694"/></to>
    </wire>
    <wire loc="67:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x4047b694"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4100d710"/></to>
    </wire>
    <wire loc="146:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x404143c0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40456e8c"/></to>
    </wire>
    <wire loc="66:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x40456e8c"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f32e38"/></to>
    </wire>
    <wire loc="157:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x4041880c"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404604dc"/></to>
    </wire>
    <wire loc="68:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x404604dc"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f60010"/></to>
    </wire>
    <wire loc="168:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x4041cca0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4046bc44"/></to>
    </wire>
    <wire loc="70:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x4046bc44"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fcc21c"/></to>
    </wire>
    <wire loc="179:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x4041f208"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40475324"/></to>
    </wire>
    <wire loc="72:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x40475324"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41002514"/></to>
    </wire>
    <wire loc="138:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x40404d58"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40452400"/></to>
    </wire>
    <wire loc="67:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x40452400"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ef27b8"/></to>
    </wire>
    <wire loc="149:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x40412208"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4045da8c"/></to>
    </wire>
    <wire loc="69:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x4045da8c"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f298b8"/></to>
    </wire>
    <wire loc="160:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x40416654"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4046816c"/></to>
    </wire>
    <wire loc="71:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x4046816c"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f92aec"/></to>
    </wire>
    <wire loc="171:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x4041aad8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40473818"/></to>
    </wire>
    <wire loc="73:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x40473818"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fc8e8c"/></to>
    </wire>
    <wire loc="188:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x4042d208"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404825b8"/></to>
    </wire>
    <wire loc="72:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x404825b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41005514"/></to>
    </wire>
    <wire loc="194:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x4042a730"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404a9518"/></to>
    </wire>
    <wire loc="174:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x40422010"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40478400"/></to>
    </wire>
    <wire loc="67:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x40478400"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fd3710"/></to>
    </wire>
    <wire loc="70:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x4045a010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f272bc"/></to>
    </wire>
    <wire loc="152:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x40410030"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4045b694"/></to>
    </wire>
    <wire loc="72:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x4045b694"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f5a514"/></to>
    </wire>
    <wire loc="192:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x4042b2e4"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404a3d50"/></to>
    </wire>
    <wire loc="155:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x404193c0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4046121c"/></to>
    </wire>
    <wire loc="66:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x4046121c"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f67e38"/></to>
    </wire>
    <wire loc="166:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x4041d84c"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4046c930"/></to>
    </wire>
    <wire loc="68:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x4046c930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f97010"/></to>
    </wire>
    <wire loc="177:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x40421d7c"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40476010"/></to>
    </wire>
    <wire loc="70:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x40476010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fce21c"/></to>
    </wire>
    <wire loc="186:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x40425d7c"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40483324"/></to>
    </wire>
    <wire loc="70:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x40483324"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4100821c"/></to>
    </wire>
    <wire loc="144:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x4040b9cc"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40459c44"/></to>
    </wire>
    <wire loc="73:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x40459c44"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f23e8c"/></to>
    </wire>
    <wire loc="147:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x40414d7c"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4045f7cc"/></to>
    </wire>
    <wire loc="67:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x4045f7cc"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f2c710"/></to>
    </wire>
    <wire loc="158:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x40417208"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40460dfc"/></to>
    </wire>
    <wire loc="69:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x40460dfc"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f5f8b8"/></to>
    </wire>
    <wire loc="169:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x4041b730"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4046a5b8"/></to>
    </wire>
    <wire loc="71:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x4046a5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fcbaec"/></to>
    </wire>
    <wire loc="180:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x4041fbc4"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40475c44"/></to>
    </wire>
    <wire loc="73:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x40475c44"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41001e8c"/></to>
    </wire>
    <wire loc="139:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x4040e730"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40452d20"/></to>
    </wire>
    <wire loc="68:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x40452d20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ef00f4"/></to>
    </wire>
    <wire loc="150:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x40412bc4"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4045c400"/></to>
    </wire>
    <wire loc="70:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x4045c400"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f5d21c"/></to>
    </wire>
    <wire loc="161:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x40415030"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40468a8c"/></to>
    </wire>
    <wire loc="72:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x40468a8c"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f90514"/></to>
    </wire>
    <wire loc="189:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x4042dbc4"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40482ed8"/></to>
    </wire>
    <wire loc="73:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x40482ed8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4103ee8c"/></to>
    </wire>
    <wire loc="164:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x4041e3c0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4046d61c"/></to>
    </wire>
    <wire loc="66:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x4046d61c"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f9ee38"/></to>
    </wire>
    <wire loc="175:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x404229cc"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40478d20"/></to>
    </wire>
    <wire loc="68:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x40478d20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fd1010"/></to>
    </wire>
    <wire loc="184:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x404269ec"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4047a010"/></to>
    </wire>
    <wire loc="68:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x4047a010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4100b010"/></to>
    </wire>
    <wire loc="195:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x4042911c"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404b3944"/></to>
    </wire>
    <wire loc="142:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x4040c578"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4045a930"/></to>
    </wire>
    <wire loc="71:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x4045a930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f26b8c"/></to>
    </wire>
    <wire loc="153:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x404109ec"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40464010"/></to>
    </wire>
    <wire loc="73:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x40464010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f59e8c"/></to>
    </wire>
    <wire loc="182:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x40427654"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4047ccb4"/></to>
    </wire>
    <wire loc="66:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x4047ccb4"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41013e38"/></to>
    </wire>
    <wire loc="156:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x40419d7c"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40461b3c"/></to>
    </wire>
    <wire loc="67:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x40461b3c"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f62710"/></to>
    </wire>
    <wire loc="167:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x4041c2e4"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4046b324"/></to>
    </wire>
    <wire loc="69:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x4046b324"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f968b8"/></to>
    </wire>
    <wire loc="178:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x4042080c"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40476930"/></to>
    </wire>
    <wire loc="71:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x40476930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41004aec"/></to>
    </wire>
    <wire loc="187:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x4042480c"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40483c44"/></to>
    </wire>
    <wire loc="71:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x40483c44"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41007aec"/></to>
    </wire>
    <wire loc="137:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x4040439c"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40453a44"/></to>
    </wire>
    <wire loc="66:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x40453a44"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ef8ea8"/></to>
    </wire>
    <wire loc="148:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x4041380c"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4045d16c"/></to>
    </wire>
    <wire loc="68:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x4045d16c"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f2a010"/></to>
    </wire>
    <wire loc="159:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x40417bc4"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40469770"/></to>
    </wire>
    <wire loc="70:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x40469770"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f9321c"/></to>
    </wire>
    <wire loc="170:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x4041a11c"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4046aed8"/></to>
    </wire>
    <wire loc="72:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x4046aed8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fc9514"/></to>
    </wire>
    <wire loc="193:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x4042bca0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404ac0f4"/></to>
    </wire>
    <wire loc="173:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x40423578"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4046fa40"/></to>
    </wire>
    <wire loc="66:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x4046fa40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fd8e38"/></to>
    </wire>
    <wire loc="162:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x404159ec"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40466400"/></to>
    </wire>
    <wire loc="73:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x40466400"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f8fe8c"/></to>
    </wire>
    <wire loc="140:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x4040d11c"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40451694"/></to>
    </wire>
    <wire loc="69:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x40451694"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40eef99c"/></to>
    </wire>
    <wire loc="151:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x40411654"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4045cd20"/></to>
    </wire>
    <wire loc="71:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x4045cd20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f5caec"/></to>
    </wire>
    <wire loc="54:/home/user/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x4034d368"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403cd564"/></to>
    </wire>
    <wire loc="55:/home/user/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x403d21dc"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x403dc414"/></to>
    </wire>
    <wire loc="58:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x403e0688"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x406fd9cc"/></to>
    </wire>
    <wire loc="55:/home/user/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x404e25bc"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x404e4b48"/></to>
    </wire>
    <wire loc="39:sendAckC.nc">
      <from><interface-ref name="sendDataResp" scoped="" ref="0x4054f6b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4034d368"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="36:sendAckC.nc">
      <from><interface-ref name="sendReq" scoped="" ref="0x405525dc"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4034d368"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/user/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x41089784"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41083a24"/></to>
    </wire>
    <wire loc="64:/home/user/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x41089df0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x405c09a4"/></to>
    </wire>
    <wire loc="65:/home/user/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x410874bc"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x405bf0b4"/></to>
    </wire>
    <wire loc="67:/home/user/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x40cb4010"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x41085090"/></to>
    </wire>
    <wire loc="66:/home/user/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x41085090"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405bfd28"/></to>
    </wire>
    <wire loc="81:/home/user/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x405c09a4"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x405dae1c"/></to>
    </wire>
    <wire loc="82:/home/user/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x405bf0b4"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x405da248"/></to>
    </wire>
    <wire loc="60:/home/user/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x4108017c"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x405927bc"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/user/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x410807e8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x405bf0b4"/></to>
    </wire>
    <wire loc="53:/home/user/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x405927bc"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x405b75f4"/></to>
    </wire>
    <wire loc="54:/home/user/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x405b7d30"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x405c160c"/></to>
    </wire>
    <wire loc="78:/home/user/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x405c160c"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x405dcf00"/></to>
    </wire>
    <wire loc="55:/home/user/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x405b63e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x405bf0b4"/></to>
    </wire>
    <wire loc="56:/home/user/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x405b5010"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x405c09a4"/></to>
    </wire>
    <wire loc="169:/home/user/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x405b56bc"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4034d368"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/user/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x405b5ad4"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4034d368"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/user/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x405dc670"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x405ec6ac"/></to>
    </wire>
    <wire loc="85:/home/user/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x405dcf00"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40c5e188"/></to>
    </wire>
    <wire loc="80:/home/user/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x405c0668"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x405dbee0"/></to>
    </wire>
    <wire loc="88:/home/user/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x405dbee0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40c5d170"/></to>
    </wire>
    <wire loc="84:/home/user/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x405dae1c"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40c5c0b0"/></to>
    </wire>
    <wire loc="91:/home/user/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x405c9698"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40ad5634"/></to>
    </wire>
    <wire loc="59:/home/user/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40ad5634"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40af1c94"/></to>
    </wire>
    <wire loc="84:/home/user/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x405d0cbc"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x405e748c"/></to>
    </wire>
    <wire loc="91:/home/user/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x405e748c"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x405fc5ac"/></to>
    </wire>
    <wire loc="79:/home/user/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x405c0010"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x405db888"/></to>
    </wire>
    <wire loc="87:/home/user/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x405db888"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40c5eafc"/></to>
    </wire>
    <wire loc="93:/home/user/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405e3d04"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405fdc84"/></to>
    </wire>
    <wire loc="89:/home/user/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x405da248"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40c5d4c0"/></to>
    </wire>
    <wire loc="92:/home/user/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x405c7010"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40ad4ee4"/></to>
    </wire>
    <wire loc="60:/home/user/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40ad4ee4"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40aee584"/></to>
    </wire>
    <wire loc="97:/home/user/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x405ec6ac"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40c4e49c"/></to>
    </wire>
    <wire loc="83:/home/user/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x405edbec"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x40c5b0fc"/></to>
    </wire>
    <wire loc="86:/home/user/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x405f4590"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x40c5ca58"/></to>
    </wire>
    <wire loc="92:/home/user/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x405e34dc"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x405fd45c"/></to>
    </wire>
    <wire loc="84:/home/user/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x405fd45c"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40ad9c08"/></to>
    </wire>
    <wire loc="83:/home/user/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x405fc5ac"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40c51e5c"/></to>
    </wire>
    <wire loc="85:/home/user/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405fdc84"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x40ad650c"/></to>
    </wire>
    <wire loc="90:/home/user/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x405f7b90"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x405fcba4"/></to>
    </wire>
    <wire loc="82:/home/user/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x405fcba4"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x40c6d8c8"/></to>
    </wire>
    <wire loc="94:/home/user/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x405e02cc"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x405fc204"/></to>
    </wire>
    <wire loc="86:/home/user/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x405fc204"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40ad5010"/></to>
    </wire>
    <wire loc="97:/home/user/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x40c80320"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x405f2010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:/home/user/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40c5b918"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x405f1974"/></to>
    </wire>
    <wire loc="93:/home/user/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x405f1974"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x40c09240"/></to>
    </wire>
    <wire loc="99:/home/user/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40c83098"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x405fd0e4"/></to>
    </wire>
    <wire loc="94:/home/user/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x405fd0e4"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x40c09998"/></to>
    </wire>
    <wire loc="101:/home/user/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40c812f4"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40a01010"/></to>
    </wire>
    <wire loc="102:/home/user/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x40c83410"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40ad9c08"/></to>
    </wire>
    <wire loc="55:/home/user/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x40ad9c08"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40af22f4"/></to>
    </wire>
    <wire loc="103:/home/user/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40c83bfc"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40ad6a64"/></to>
    </wire>
    <wire loc="57:/home/user/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40ad6a64"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40af1104"/></to>
    </wire>
    <wire loc="104:/home/user/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x40c821c8"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x40649c14"/></to>
    </wire>
    <wire loc="55:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x40649c14"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x40656598"/></to>
    </wire>
    <wire loc="106:/home/user/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x40c81a08"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x405f88fc"/></to>
    </wire>
    <wire loc="54:/home/user/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x405f88fc"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x40605558"/></to>
    </wire>
    <wire loc="109:/home/user/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40c809b8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40983060"/></to>
    </wire>
    <wire loc="51:/home/user/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40983060"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x409a0650"/></to>
    </wire>
    <wire loc="63:/home/user/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40c4e49c"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x40c4df14"/></to>
    </wire>
    <wire loc="58:/home/user/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40ad5010"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40af1670"/></to>
    </wire>
    <wire loc="53:/home/user/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x40c6d8c8"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x40c6cc70"/></to>
    </wire>
    <wire loc="97:/home/user/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x40c09240"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x40c2c5d4"/></to>
    </wire>
    <wire loc="64:/home/user/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40c51e5c"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40c4cae4"/></to>
    </wire>
    <wire loc="90:/home/user/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x405f2e60"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40c0ae48"/></to>
    </wire>
    <wire loc="92:/home/user/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40c0ae48"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x40c2c224"/></to>
    </wire>
    <wire loc="56:/home/user/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x40ad650c"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x40af2b68"/></to>
    </wire>
    <wire loc="88:/home/user/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x405f2010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40c0a0fc"/></to>
    </wire>
    <wire loc="96:/home/user/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40c0a0fc"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40c2d328"/></to>
    </wire>
    <wire loc="89:/home/user/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x405f271c"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40c0a794"/></to>
    </wire>
    <wire loc="91:/home/user/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40c0a794"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x40c2da34"/></to>
    </wire>
    <wire loc="91:/home/user/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x405f1254"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x40c09d5c"/></to>
    </wire>
    <wire loc="93:/home/user/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x40c09d5c"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x40c2b128"/></to>
    </wire>
    <wire loc="98:/home/user/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x40c09998"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x40c2cd2c"/></to>
    </wire>
    <wire loc="98:/home/user/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x40c4df14"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x405fb898"/></to>
    </wire>
    <wire loc="55:/home/user/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x405fb898"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40608808"/></to>
    </wire>
    <wire loc="101:/home/user/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40c08880"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40be7820"/></to>
    </wire>
    <wire loc="55:/home/user/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40be7820"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40be4e14"/></to>
    </wire>
    <wire loc="102:/home/user/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40be4010"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40c6d1f4"/></to>
    </wire>
    <wire loc="54:/home/user/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40c6d1f4"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40c6c030"/></to>
    </wire>
    <wire loc="103:/home/user/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40c6c030"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40c51400"/></to>
    </wire>
    <wire loc="61:/home/user/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40c51400"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40c4d3d8"/></to>
    </wire>
    <wire loc="104:/home/user/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40c4d3d8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x405fbe74"/></to>
    </wire>
    <wire loc="56:/home/user/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x405fbe74"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40608de4"/></to>
    </wire>
    <wire loc="107:/home/user/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40c084f0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40c51ab4"/></to>
    </wire>
    <wire loc="62:/home/user/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40c51ab4"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40c4db14"/></to>
    </wire>
    <wire loc="108:/home/user/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40c4db14"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40be6c8c"/></to>
    </wire>
    <wire loc="56:/home/user/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40be6c8c"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40bf8110"/></to>
    </wire>
    <wire loc="109:/home/user/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40bfb4e0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x405f8564"/></to>
    </wire>
    <wire loc="68:/home/user/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x405f8564"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40a9136c"/></to>
    </wire>
    <wire loc="63:/home/user/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40a9136c"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40a8d1b4"/></to>
    </wire>
    <wire loc="59:/home/user/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40605d14"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40642eb4"/></to>
    </wire>
    <wire loc="54:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40642eb4"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40659e54"/></to>
    </wire>
    <wire loc="60:/home/user/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x40600cb0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x40650cac"/></to>
    </wire>
    <wire loc="56:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x40650cac"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x406555cc"/></to>
    </wire>
    <wire loc="63:/home/user/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x4060f704"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40a10190"/></to>
    </wire>
    <wire loc="69:/home/user/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x4060f704"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40a94914"/></to>
    </wire>
    <wire loc="61:/home/user/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40a94914"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40a8e78c"/></to>
    </wire>
    <wire loc="55:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40a10190"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40a1e6d0"/></to>
    </wire>
    <wire loc="64:/home/user/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x4060cacc"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x40a105f8"/></to>
    </wire>
    <wire loc="56:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x40a105f8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40a1eba4"/></to>
    </wire>
    <wire loc="65:/home/user/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x40602270"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x40a10ce0"/></to>
    </wire>
    <wire loc="57:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x40a10ce0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x40a1c2c4"/></to>
    </wire>
    <wire loc="72:/home/user/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x40610710"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40ad9c08"/></to>
    </wire>
    <wire loc="73:/home/user/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40613d74"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40ad6a64"/></to>
    </wire>
    <wire loc="76:/home/user/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40602a18"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x404e1a20"/></to>
    </wire>
    <wire loc="79:/home/user/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x40621504"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40be90e4"/></to>
    </wire>
    <wire loc="74:/home/user/tinyos-main/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x40be90e4"/></from>
      <to><interface-ref name="State" scoped="" ref="0x408d09c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/user/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40617ab0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40983060"/></to>
    </wire>
    <wire loc="76:/home/user/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x40620534"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4034d368"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/user/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x40612d60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4034d368"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/user/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x40612570"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4034d368"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x4064f810"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x40654084"/></to>
    </wire>
    <wire loc="63:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x4065f91c"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x406b272c"/></to>
    </wire>
    <wire loc="55:/home/user/tinyos-main/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x406b272c"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x407f4e44"/></to>
    </wire>
    <wire loc="66:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x406522d0"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x407f01e8"/></to>
    </wire>
    <wire loc="100:/home/user/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x407f01e8"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x404143c0"/></to>
    </wire>
    <wire loc="67:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x40652c98"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x40808f14"/></to>
    </wire>
    <wire loc="103:/home/user/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x40808f14"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x4040b010"/></to>
    </wire>
    <wire loc="68:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x4065e73c"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x408062d0"/></to>
    </wire>
    <wire loc="105:/home/user/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x408062d0"/></from>
      <to><interface-ref name="PortA5" scoped="" ref="0x4040c578"/></to>
    </wire>
    <wire loc="71:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x4066b6dc"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x407fdd2c"/></to>
    </wire>
    <wire loc="59:/home/user/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x407fdd2c"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x40860080"/></to>
    </wire>
    <wire loc="74:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40674984"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x409bc834"/></to>
    </wire>
    <wire loc="112:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x409bc834"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40871980"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x40672840"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x409bbda0"/></to>
    </wire>
    <wire loc="118:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x409bbda0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x40672c38"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x409ba804"/></to>
    </wire>
    <wire loc="121:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x409ba804"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x40674584"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x409bb728"/></to>
    </wire>
    <wire loc="116:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x409bb728"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x40674084"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x409bab40"/></to>
    </wire>
    <wire loc="122:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x409bab40"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x406636f8"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x409b5940"/></to>
    </wire>
    <wire loc="140:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x409b5940"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x40663be0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x409b49bc"/></to>
    </wire>
    <wire loc="144:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x409b49bc"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x4065b150"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x409b4dd4"/></to>
    </wire>
    <wire loc="145:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x409b4dd4"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x4065b64c"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x409b8aa0"/></to>
    </wire>
    <wire loc="133:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x409b8aa0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x4065bb48"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x409b8eb8"/></to>
    </wire>
    <wire loc="134:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x409b8eb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x4065c064"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x409d1428"/></to>
    </wire>
    <wire loc="156:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x409d1428"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4088834c"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x40666b04"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x409d1010"/></to>
    </wire>
    <wire loc="155:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x409d1010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4088834c"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x40664078"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x409b5428"/></to>
    </wire>
    <wire loc="139:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x409b5428"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x4066454c"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x409b6310"/></to>
    </wire>
    <wire loc="135:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x409b6310"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x40664a34"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x409b6b40"/></to>
    </wire>
    <wire loc="137:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x409b6b40"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x406738cc"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x409c8894"/></to>
    </wire>
    <wire loc="112:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x409c8894"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40871980"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x40673150"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x409d5400"/></to>
    </wire>
    <wire loc="112:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x409d5400"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40871980"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x406695b4"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40a01010"/></to>
    </wire>
    <wire loc="100:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x406513a0"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x409e33d8"/></to>
    </wire>
    <wire loc="126:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x4066ceac"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4034d368"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x4066c720"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4034d368"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/user/tinyos-main/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x406b219c"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x406c26b8"/></to>
    </wire>
    <wire loc="93:/home/user/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x406c26b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x407f6d20"/></to>
    </wire>
    <wire loc="94:/home/user/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x407f4e44"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x410c9010"/></to>
    </wire>
    <wire loc="36:/home/user/tinyos-main/tos/platforms/mica/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x410c9010"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x410c3304"/></to>
    </wire>
    <wire loc="37:/home/user/tinyos-main/tos/platforms/mica/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x410c0de4"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x410c7ab8"/></to>
    </wire>
    <wire loc="41:/home/user/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x410c7ab8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x410ba010"/></to>
    </wire>
    <wire loc="38:/home/user/tinyos-main/tos/platforms/mica/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x410c2c60"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x407a96a0"/></to>
    </wire>
    <wire loc="33:/home/user/tinyos-main/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x407a96a0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x407a86d8"/></to>
    </wire>
    <wire loc="43:/home/user/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x410b98ec"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406d59e0"/></to>
    </wire>
    <wire loc="55:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x406d59e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406e9768"/></to>
    </wire>
    <wire loc="44:/home/user/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x410f59f8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x406eb8a4"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x406e1588"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x40736928"/></to>
    </wire>
    <wire loc="57:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x406d20f0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x407356a4"/></to>
    </wire>
    <wire loc="59:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x406eb8a4"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x40732430"/></to>
    </wire>
    <wire loc="60:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x406eb8a4"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x40731ef0"/></to>
    </wire>
    <wire loc="61:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x406eb8a4"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x4072e9e8"/></to>
    </wire>
    <wire loc="63:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer0Ctrl" scoped="" ref="0x4072c478"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x406e5010"/></to>
    </wire>
    <wire loc="61:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x406e5010"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x406ec6dc"/></to>
    </wire>
    <wire loc="63:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x406ef2fc"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x406fde10"/></to>
    </wire>
    <wire loc="62:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x406e5934"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x406ff030"/></to>
    </wire>
    <wire loc="60:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x406dbabc"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406ee584"/></to>
    </wire>
    <wire loc="27:/home/user/tinyos-main/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4078faf0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406d59e0"/></to>
    </wire>
    <wire loc="34:/home/user/tinyos-main/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x407c6850"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x407bf010"/></to>
    </wire>
    <wire loc="31:/home/user/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x407bf010"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x407bc010"/></to>
    </wire>
    <wire loc="32:/home/user/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x407bb108"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406d59e0"/></to>
    </wire>
    <wire loc="101:/home/user/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x407f0b90"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x404109ec"/></to>
    </wire>
    <wire loc="102:/home/user/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x4080856c"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x4041f208"/></to>
    </wire>
    <wire loc="99:/home/user/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x406b47dc"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x4041a11c"/></to>
    </wire>
    <wire loc="104:/home/user/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x408078d0"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x4041cca0"/></to>
    </wire>
    <wire loc="49:/home/user/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x407fd65c"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x407fe200"/></to>
    </wire>
    <wire loc="54:/home/user/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x407ff458"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x4080a6ac"/></to>
    </wire>
    <wire loc="50:/home/user/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Capture" scoped="" ref="0x407fe858"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x406d20f0"/></to>
    </wire>
    <wire loc="55:/home/user/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x4080ac7c"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0x4082e250"/></to>
    </wire>
    <wire loc="77:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x4082e250"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x4084f710"/></to>
    </wire>
    <wire loc="60:/home/user/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CC_CCA" scoped="" ref="0x4086070c"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x406b47dc"/></to>
    </wire>
    <wire loc="72:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x40817780"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x408413e8"/></to>
    </wire>
    <wire loc="75:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x4082f164"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x40854514"/></to>
    </wire>
    <wire loc="78:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x4082ea9c"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x4084d76c"/></to>
    </wire>
    <wire loc="73:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x40816010"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x4083e3e8"/></to>
    </wire>
    <wire loc="76:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x4082f9b0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x40852690"/></to>
    </wire>
    <wire loc="71:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x40809f18"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x4082a398"/></to>
    </wire>
    <wire loc="74:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x4081685c"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x408563e8"/></to>
    </wire>
    <wire loc="80:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x4082ab20"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x408275b4"/></to>
    </wire>
    <wire loc="81:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40841b70"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x40827a0c"/></to>
    </wire>
    <wire loc="82:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x4083eb70"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x40827e64"/></to>
    </wire>
    <wire loc="83:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40856b70"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x408292e8"/></to>
    </wire>
    <wire loc="84:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40854c9c"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x40829740"/></to>
    </wire>
    <wire loc="85:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40852e18"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x40829b98"/></to>
    </wire>
    <wire loc="86:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x4084fe98"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x40828010"/></to>
    </wire>
    <wire loc="87:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x4084def4"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x40828468"/></to>
    </wire>
    <wire loc="69:/home/user/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <from><interface-ref name="CCATask" scoped="" ref="0x4085fe50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4034d368"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x409bba64"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x409b418c"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x409b45a4"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x409ce5a4"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4088834c"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x409cf4a8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4088834c"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x409ba4c8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x409d1c58"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4088834c"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x409b3eb0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x409bcec0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x408890f8"/></to>
    </wire>
    <wire loc="56:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x408890f8"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40887d90"/></to>
    </wire>
    <wire loc="124:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x409b91cc"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x409b9508"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x409b98c4"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x409cf090"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4088834c"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x409b6728"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x409ce18c"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4088834c"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x409cf8c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4088834c"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x409d2310"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x409d1840"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4088834c"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x409b3268"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x409ce9bc"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40889940"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x409bb3ec"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x409b8688"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x409b5010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x409b5d58"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x409b9c00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x409b834c"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x409bae7c"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x409d2b40"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x409cfcd8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4088834c"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x409d2728"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x409ba18c"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x409b3a98"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x409b3680"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x409b8010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x409cd344"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40889940"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x40889940"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40882010"/></to>
    </wire>
    <wire loc="53:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x4088834c"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x408829e4"/></to>
    </wire>
    <wire loc="54:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x40888ad4"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40880170"/></to>
    </wire>
    <wire loc="51:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40871980"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40883618"/></to>
    </wire>
    <wire loc="55:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x40887294"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408808e4"/></to>
    </wire>
    <wire loc="59:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x408994e8"/></from>
      <to><interface-ref name="State" scoped="" ref="0x408b6010"/></to>
    </wire>
    <wire loc="74:/home/user/tinyos-main/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x408b6010"/></from>
      <to><interface-ref name="State" scoped="" ref="0x408d09c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40880d04"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x408ce32c"/></to>
    </wire>
    <wire loc="52:/home/user/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x408ce32c"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4098e3f8"/></to>
    </wire>
    <wire loc="63:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x4087fcc0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x408ce9b8"/></to>
    </wire>
    <wire loc="55:/home/user/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x408ce9b8"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x408d9d28"/></to>
    </wire>
    <wire loc="64:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x40899040"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x408cecd4"/></to>
    </wire>
    <wire loc="56:/home/user/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x408cecd4"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x408d549c"/></to>
    </wire>
    <wire loc="67:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40899c5c"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40983060"/></to>
    </wire>
    <wire loc="88:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x4089391c"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4034d368"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/user/tinyos-main/tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x408d09c0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x408ca010"/></to>
    </wire>
    <wire loc="96:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x408d549c"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x408eb968"/></to>
    </wire>
    <wire loc="94:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x408d9d28"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x408eb010"/></to>
    </wire>
    <wire loc="51:/home/user/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x408ce010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x408d99c4"/></to>
    </wire>
    <wire loc="92:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x408d99c4"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x408d2c38"/></to>
    </wire>
    <wire loc="53:/home/user/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SubResource" scoped="" ref="0x4098eb88"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x408d5ba8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/user/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x4098d2bc"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x404143c0"/></to>
    </wire>
    <wire loc="95:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x408d3e74"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x408eb37c"/></to>
    </wire>
    <wire loc="97:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x408d5ba8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x408ea0fc"/></to>
    </wire>
    <wire loc="99:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x408e87ac"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x409742a8"/></to>
    </wire>
    <wire loc="98:/home/user/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x409742a8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4113fad0"/></to>
    </wire>
    <wire loc="100:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x408f3d3c"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40974d9c"/></to>
    </wire>
    <wire loc="100:/home/user/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40974d9c"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x4113d6a0"/></to>
    </wire>
    <wire loc="101:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x408f6b54"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x408ec6c0"/></to>
    </wire>
    <wire loc="83:/home/user/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x408ec6c0"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x409219b8"/></to>
    </wire>
    <wire loc="102:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x408f51d0"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x403e1068"/></to>
    </wire>
    <wire loc="296:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x408ff58c"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4034d368"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/user/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x4091bf28"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x403e1068"/></to>
    </wire>
    <wire loc="86:/home/user/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x40937788"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x404143c0"/></to>
    </wire>
    <wire loc="87:/home/user/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x4091c1e8"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x40414d7c"/></to>
    </wire>
    <wire loc="88:/home/user/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x4091cb90"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x4041380c"/></to>
    </wire>
    <wire loc="89:/home/user/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x4091b564"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x40412208"/></to>
    </wire>
    <wire loc="99:/home/user/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x409749b4"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x4113d2b8"/></to>
    </wire>
    <wire loc="101:/home/user/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x4113db38"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x409922d8"/></to>
    </wire>
    <wire loc="103:/home/user/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x4113c010"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x41141b18"/></to>
    </wire>
    <wire loc="69:/home/user/tinyos-main/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x4113c5e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4034d368"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/home/user/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x409acdf4"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x409a0328"/></to>
    </wire>
    <wire loc="54:/home/user/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x4099f310"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x409ad05c"/></to>
    </wire>
    <wire loc="56:/home/user/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x409ad05c"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x4040e730"/></to>
    </wire>
    <wire loc="55:/home/user/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x4099fcb8"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x409ada24"/></to>
    </wire>
    <wire loc="57:/home/user/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x409ada24"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x40404d58"/></to>
    </wire>
    <wire loc="56:/home/user/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x4099e71c"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x409ac4a8"/></to>
    </wire>
    <wire loc="58:/home/user/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x409ac4a8"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x4040439c"/></to>
    </wire>
    <wire loc="139:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x409e1428"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x409c7aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x409c3aa0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x409e018c"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x409e05a4"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x409da5a4"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4088834c"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x409db4a8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4088834c"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x409c64c8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x409dcc58"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4088834c"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x409e2310"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x409e2b40"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x409deeb0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x409e09bc"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x409c8f20"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x408890f8"/></to>
    </wire>
    <wire loc="124:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x409c41cc"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x409c4508"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x409c48c4"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x409db090"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4088834c"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x409c6b40"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x409e2728"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x409c3eb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x409c7764"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x409da18c"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4088834c"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x409db8c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4088834c"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x409dd310"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x409dc840"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4088834c"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x409de268"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x409da9bc"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40889940"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x409c7428"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x409c3688"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x409e1010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x409e0dd4"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x409e1940"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x409c7ddc"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x409e1d58"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x409c4c00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x409c334c"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x409dc428"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4088834c"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x409dc010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4088834c"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x409c6e7c"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x409ddb40"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x409dbcd8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4088834c"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x409dd728"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x409c618c"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x409dea98"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x409c6804"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x409de680"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x409c3010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x409d8344"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40889940"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x409efeb0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x409d4688"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x409f15a4"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x409eec7c"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x409ed0b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x409e7090"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4088834c"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x409e8010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4088834c"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x409d3050"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x409e9728"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4088834c"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x409f1dd4"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x409ef680"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x409ec9bc"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x409ed4c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x409d5a8c"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x408890f8"/></to>
    </wire>
    <wire loc="124:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x409d3d40"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x409f2090"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x409f244c"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x409e9b40"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4088834c"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x409d36c8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x409ef268"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x409f19bc"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x409d434c"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x409e8c58"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4088834c"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x409e8428"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4088834c"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x409ecdd4"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x409e9310"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4088834c"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x409edcf8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x409e74a8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40889940"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x409d4010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x409f118c"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x409efa98"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x409ed8e0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x409ee44c"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x409d49c4"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x409ee864"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x409f2788"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x409f2e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x409ebeb0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4088834c"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x409eba98"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4088834c"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x409d3a04"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x409eb680"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x409e8840"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4088834c"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x409eb268"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x409d4d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x409ec5a4"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x409d338c"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x409ec18c"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x409f2ac4"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x409e7d54"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40889940"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x40a0fdb0"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x40a1cb88"/></to>
    </wire>
    <wire loc="59:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x40a0e294"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x40a1b010"/></to>
    </wire>
    <wire loc="66:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x40a1b5a0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x406b272c"/></to>
    </wire>
    <wire loc="69:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x40a157a4"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x406b47dc"/></to>
    </wire>
    <wire loc="70:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x40a14208"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x407f01e8"/></to>
    </wire>
    <wire loc="71:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x40a14bc4"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x408078d0"/></to>
    </wire>
    <wire loc="74:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x40a15158"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x407fd65c"/></to>
    </wire>
    <wire loc="77:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40a3469c"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40a86784"/></to>
    </wire>
    <wire loc="112:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40a86784"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40871980"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40a34dc0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40a86e10"/></to>
    </wire>
    <wire loc="111:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40a86e10"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x408890f8"/></to>
    </wire>
    <wire loc="79:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x40a30530"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x40a85344"/></to>
    </wire>
    <wire loc="115:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x40a85344"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x40a3091c"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x40a83050"/></to>
    </wire>
    <wire loc="119:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x40a83050"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x40a30d28"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x40a8338c"/></to>
    </wire>
    <wire loc="120:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x40a8338c"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x40a2f150"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x40a82090"/></to>
    </wire>
    <wire loc="124:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x40a82090"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x40a30070"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x40a809bc"/></to>
    </wire>
    <wire loc="137:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x40a809bc"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x40a313ec"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x40a9918c"/></to>
    </wire>
    <wire loc="168:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x40a9918c"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40889940"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40a31b5c"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40a7aa98"/></to>
    </wire>
    <wire loc="158:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40a7aa98"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4088834c"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x40a2f570"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x40a81cf8"/></to>
    </wire>
    <wire loc="134:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x40a81cf8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x40a2e010"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x40a7fb98"/></to>
    </wire>
    <wire loc="141:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x40a7fb98"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x40a2e50c"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x40a7d010"/></to>
    </wire>
    <wire loc="142:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x40a7d010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x40a2fb44"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x40a82e00"/></to>
    </wire>
    <wire loc="128:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x40a82e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x40a2d34c"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x40a9a010"/></to>
    </wire>
    <wire loc="163:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x40a9a010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4088834c"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x40a2e9ac"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x40a9c310"/></to>
    </wire>
    <wire loc="160:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x40a9c310"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4088834c"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x40a2ee4c"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x40a9c728"/></to>
    </wire>
    <wire loc="161:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x40a9c728"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4088834c"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x40a2c010"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x40a94d90"/></to>
    </wire>
    <wire loc="62:/home/user/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x40a94d90"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x40a8ec08"/></to>
    </wire>
    <wire loc="98:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x40a1ae58"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40ad9c08"/></to>
    </wire>
    <wire loc="99:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40a1969c"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40ad6a64"/></to>
    </wire>
    <wire loc="100:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40a19dac"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40ad5634"/></to>
    </wire>
    <wire loc="101:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40a33a30"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40af55a0"/></to>
    </wire>
    <wire loc="61:/home/user/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40af55a0"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40aedc04"/></to>
    </wire>
    <wire loc="104:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40a2c510"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40983060"/></to>
    </wire>
    <wire loc="139:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x40a7f268"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x40a859bc"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x40a818e0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x40a7d428"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x40a9a428"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4088834c"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x40a8018c"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x40a7ccd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x40a7d840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x40a823cc"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x40a82788"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40a7aeb0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4088834c"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x40a83a04"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x40a805a4"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x40a85680"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x40a7b18c"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x40a7a680"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4088834c"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x40a7c090"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x40a9a840"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40889940"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x40a814c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x40a80dd4"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x40a7dc58"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x40a7f780"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x40a85cf8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x40a82ac4"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x40a8118c"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x40a7a268"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4088834c"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x40a7bdd4"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4088834c"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40a83d40"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x40a7b9bc"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x40a9cb40"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4088834c"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x40a7b5a4"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x40a7c8c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x40a836c8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x40a7c4a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/user/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x40a917e4"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x40a8d62c"/></to>
    </wire>
    <wire loc="59:/home/user/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40aa637c"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40983060"/></to>
    </wire>
    <wire loc="68:/home/user/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x40a8d9e4"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x407f01e8"/></to>
    </wire>
    <wire loc="69:/home/user/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x40a8c3cc"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x407f0b90"/></to>
    </wire>
    <wire loc="70:/home/user/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x40a8cd9c"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x4080856c"/></to>
    </wire>
    <wire loc="71:/home/user/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x40a8b8a4"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x407ff458"/></to>
    </wire>
    <wire loc="72:/home/user/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40aae010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40ad7d68"/></to>
    </wire>
    <wire loc="112:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40ad7d68"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40871980"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/user/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x40aae764"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x40bd5eb0"/></to>
    </wire>
    <wire loc="167:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x40bd5eb0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40889940"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/user/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40aad304"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x40bb738c"/></to>
    </wire>
    <wire loc="123:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40bb738c"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/user/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x40aaeeb8"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x40bb7a04"/></to>
    </wire>
    <wire loc="125:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x40bb7a04"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/home/user/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x40aad71c"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40ad9c08"/></to>
    </wire>
    <wire loc="77:/home/user/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40aadf28"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40ad6a64"/></to>
    </wire>
    <wire loc="78:/home/user/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40aab6bc"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40ad5634"/></to>
    </wire>
    <wire loc="79:/home/user/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x40aac48c"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x40649c14"/></to>
    </wire>
    <wire loc="81:/home/user/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x40aa8194"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x40bdb268"/></to>
    </wire>
    <wire loc="141:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x40bdb268"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/user/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x40aa8690"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x40bdb680"/></to>
    </wire>
    <wire loc="142:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x40bdb680"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/user/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x40aa9d50"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x40bb618c"/></to>
    </wire>
    <wire loc="127:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x40bb618c"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/user/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x40aa74cc"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x40bd5a98"/></to>
    </wire>
    <wire loc="164:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x40bd5a98"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4088834c"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/user/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x40aa8b30"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x40bd69bc"/></to>
    </wire>
    <wire loc="160:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x40bd69bc"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4088834c"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/user/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x40aa7010"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x40bd6dd4"/></to>
    </wire>
    <wire loc="161:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x40bd6dd4"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4088834c"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/user/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40aa79a8"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40bd65a4"/></to>
    </wire>
    <wire loc="159:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40bd65a4"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4088834c"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/user/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x40aa7e68"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x40bba8fc"/></to>
    </wire>
    <wire loc="115:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x40bba8fc"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/user/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x40a9f21c"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4034d368"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/user/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40b2d9bc"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x407a96a0"/></to>
    </wire>
    <wire loc="65:/home/user/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x40ae9750"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40b2d098"/></to>
    </wire>
    <wire loc="69:/home/user/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x40aeb15c"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40b1f274"/></to>
    </wire>
    <wire loc="65:/home/user/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40b1f274"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40ba24f4"/></to>
    </wire>
    <wire loc="61:/home/user/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x40b21010"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b7eea4"/></to>
    </wire>
    <wire loc="59:/home/user/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40b25880"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40b1d860"/></to>
    </wire>
    <wire loc="35:/home/user/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40b1d860"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40b76088"/></to>
    </wire>
    <wire loc="62:/home/user/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x40ba60b8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b71488"/></to>
    </wire>
    <wire loc="63:/home/user/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40b826e0"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x40b1ddf0"/></to>
    </wire>
    <wire loc="36:/home/user/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x40b1ddf0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40b76494"/></to>
    </wire>
    <wire loc="66:/home/user/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40ba2e18"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x40b3f924"/></to>
    </wire>
    <wire loc="37:/home/user/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x40b3f924"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40b75dc0"/></to>
    </wire>
    <wire loc="37:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40b75dc0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x411a16e8"/></to>
    </wire>
    <wire loc="35:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40b76088"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x411a4990"/></to>
    </wire>
    <wire loc="36:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40b76494"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x411a4d9c"/></to>
    </wire>
    <wire loc="39:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x411a07f4"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406dbabc"/></to>
    </wire>
    <wire loc="40:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x4119d83c"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x406e5010"/></to>
    </wire>
    <wire loc="41:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x411dc04c"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x406e5934"/></to>
    </wire>
    <wire loc="42:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x411db948"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x406ef2fc"/></to>
    </wire>
    <wire loc="74:/home/user/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x40b7f010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4034d368"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/user/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x40ba3170"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4034d368"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/user/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40b235d8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40bc2b8c"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/user/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x40bc2b8c"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40b21010"/></to>
    </wire>
    <wire loc="139:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x40bdc8c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x40bb9010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x40bdd010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x40bdba98"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x40bb99c4"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40bd618c"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4088834c"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x40bdd840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x40bdc090"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x40bd8428"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x40bdbeb0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40bba408"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x408890f8"/></to>
    </wire>
    <wire loc="124:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x40bb76c8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x40bb7dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x40bb7050"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x40bddc58"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x40bdd428"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x40bbac38"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x40bd5680"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4088834c"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x40bd8840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x40bd7cd8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4088834c"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x40bd9728"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x40bb6b40"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x40bdc4a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x40bd9310"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x40bdcdd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x40bb934c"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x40bb6804"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x40bd78c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4088834c"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x40bd74a8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4088834c"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x40bd7090"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x40bd5268"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4088834c"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x40bd8c58"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x40bb9688"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x40bd8010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x40bb9d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x40bd9b40"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40888ad4"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x40bb64c8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40887294"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x40bd37e0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40889940"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/user/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40be18b8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40be4010"/></to>
    </wire>
    <wire loc="60:/home/user/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x40be0010"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40be3838"/></to>
    </wire>
    <wire loc="74:/home/user/tinyos-main/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x40be3838"/></from>
      <to><interface-ref name="State" scoped="" ref="0x408d09c0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/user/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40be0798"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x404e1a20"/></to>
    </wire>
    <wire loc="62:/home/user/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40be0c14"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40ad6a64"/></to>
    </wire>
    <wire loc="57:/home/user/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x40bfb0d4"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x40bf8518"/></to>
    </wire>
    <wire loc="58:/home/user/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40bf8c4c"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40bfb4e0"/></to>
    </wire>
    <wire loc="62:/home/user/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40bf7010"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40ad6a64"/></to>
    </wire>
    <wire loc="94:/home/user/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40c2b868"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40c08880"/></to>
    </wire>
    <wire loc="95:/home/user/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40c2a010"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40c084f0"/></to>
    </wire>
    <wire loc="100:/home/user/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x40c2a388"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40ad9c08"/></to>
    </wire>
    <wire loc="101:/home/user/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40c2ab74"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40ad6a64"/></to>
    </wire>
    <wire loc="102:/home/user/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x40c29138"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x40c5416c"/></to>
    </wire>
    <wire loc="180:/home/user/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x40c3a120"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4034d368"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/user/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x40c4eadc"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40c4b984"/></to>
    </wire>
    <wire loc="74:/home/user/tinyos-main/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x40c4b984"/></from>
      <to><interface-ref name="State" scoped="" ref="0x408d09c0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/user/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40c69424"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405fdc84"/></to>
    </wire>
    <wire loc="55:/home/user/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40cb394c"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x405c09a4"/></to>
    </wire>
    <wire loc="56:/home/user/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40cb1010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x405bf0b4"/></to>
    </wire>
    <wire loc="67:/home/user/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40d1aaa4"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40d147a0"/></to>
    </wire>
    <wire loc="63:/home/user/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40ccc528"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40cc8b38"/></to>
    </wire>
    <wire loc="65:/home/user/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40ccb1f4"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40d1d228"/></to>
    </wire>
    <wire loc="64:/home/user/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40ccce9c"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40cc72b8"/></to>
    </wire>
    <wire loc="67:/home/user/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40cca59c"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40d1d894"/></to>
    </wire>
    <wire loc="66:/home/user/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40ccb8b4"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40cc75c4"/></to>
    </wire>
    <wire loc="69:/home/user/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40d1a72c"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40d14428"/></to>
    </wire>
    <wire loc="60:/home/user/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40d15400"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40ccaaac"/></to>
    </wire>
    <wire loc="69:/home/user/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40d1dd98"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40d17908"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/user/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40d1b4dc"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40d17344"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/home/user/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x40d13f0c"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x40e6baf0"/></to>
    </wire>
    <wire loc="64:/home/user/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40d17908"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40d86d28"/></to>
    </wire>
    <wire loc="65:/home/user/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40d17344"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40d8698c"/></to>
    </wire>
    <wire loc="66:/home/user/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x40dad4c0"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x40d13f0c"/></to>
    </wire>
    <wire loc="70:/home/user/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40d0b6e0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40d15400"/></to>
    </wire>
    <wire loc="71:/home/user/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40dac3e0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40d15400"/></to>
    </wire>
    <wire loc="72:/home/user/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40dd0e60"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40d15400"/></to>
    </wire>
    <wire loc="74:/home/user/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x40dad984"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x40d0ae50"/></to>
    </wire>
    <wire loc="75:/home/user/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x40dade38"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x40d0ce7c"/></to>
    </wire>
    <wire loc="77:/home/user/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x40d35e70"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x40daa688"/></to>
    </wire>
    <wire loc="78:/home/user/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x40d09410"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40dd95f0"/></to>
    </wire>
    <wire loc="48:/home/user/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40dd95f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40ded188"/></to>
    </wire>
    <wire loc="80:/home/user/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40dd0610"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40dd9a50"/></to>
    </wire>
    <wire loc="49:/home/user/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40dd9a50"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40deda34"/></to>
    </wire>
    <wire loc="332:/home/user/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x40d610d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4034d368"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/user/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x40d24010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4034d368"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/user/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x40d3698c"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4034d368"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/home/user/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x40d60c00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4034d368"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/home/user/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x40dab010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4034d368"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/user/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x40dab428"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4034d368"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/home/user/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x40dee7d4"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x40ded5d4"/></to>
    </wire>
    <wire loc="51:/home/user/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x40ded5d4"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x40de9a10"/></to>
    </wire>
    <wire loc="52:/home/user/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40deda34"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40de9e08"/></to>
    </wire>
    <wire loc="50:/home/user/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40ded188"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40de9618"/></to>
    </wire>
    <wire loc="53:/home/user/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40dec510"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40def830"/></to>
    </wire>
    <wire loc="33:/home/user/tinyos-main/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40def830"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40ec78c4"/></to>
    </wire>
    <wire loc="53:/home/user/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40df3ae0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40dec510"/></to>
    </wire>
    <wire loc="56:/home/user/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x40de86b4"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x40e12df4"/></to>
    </wire>
    <wire loc="60:/home/user/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x40e12df4"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x40e0c444"/></to>
    </wire>
    <wire loc="57:/home/user/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x40de8acc"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x40e11340"/></to>
    </wire>
    <wire loc="61:/home/user/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x40e11340"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x40e0c954"/></to>
    </wire>
    <wire loc="58:/home/user/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x40de8ee4"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x40e11810"/></to>
    </wire>
    <wire loc="62:/home/user/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x40e11810"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x40e0ce44"/></to>
    </wire>
    <wire loc="66:/home/user/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x40e10ddc"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x40e0a890"/></to>
    </wire>
    <wire loc="64:/home/user/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x40e1041c"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x40e0be44"/></to>
    </wire>
    <wire loc="65:/home/user/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x40e1090c"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x40e0a3a0"/></to>
    </wire>
    <wire loc="68:/home/user/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x40e3b498"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x403fe098"/></to>
    </wire>
    <wire loc="69:/home/user/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40e3bba8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x403e1068"/></to>
    </wire>
    <wire loc="34:/home/user/tinyos-main/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x40ec6a78"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40e66164"/></to>
    </wire>
    <wire loc="31:/home/user/tinyos-main/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40e66164"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40ed2d40"/></to>
    </wire>
    <wire loc="32:/home/user/tinyos-main/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40ed1e24"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40e64a04"/></to>
    </wire>
    <wire loc="55:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40e64a04"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40e5aac4"/></to>
    </wire>
    <wire loc="56:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x40e60b84"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x40e55c10"/></to>
    </wire>
    <wire loc="57:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x40e5f85c"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x40e86938"/></to>
    </wire>
    <wire loc="59:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40e5c940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x40e836c0"/></to>
    </wire>
    <wire loc="60:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40e5c940"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x40e81190"/></to>
    </wire>
    <wire loc="61:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40e5c940"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x40e7fc44"/></to>
    </wire>
    <wire loc="27:/home/user/tinyos-main/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40ed0e84"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40e64a04"/></to>
    </wire>
    <wire loc="22:FakeSensorC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x4126f010"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x404e1a20"/></to>
    </wire>
    <wire loc="26:FakeSensorC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x4126f4b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4126c02c"/></to>
    </wire>
    <wire loc="52:/home/user/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4126c02c"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40bc2b8c"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/home/user/tinyos-main/tos/system/MainC.nc">
      <documentation loc="1:/home/user/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/home/user/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/home/user/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/home/user/tinyos-main/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/home/user/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/home/user/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/home/user/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/home/user/tinyos-main/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/home/user/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/home/user/tinyos-main/tos/platforms/mica/MeasureClockC.nc" safe="">
      <documentation loc="14:/home/user/tinyos-main/tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/user/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/user/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/user/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/user/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="48:/home/user/tinyos-main/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.11 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/home/user/tinyos-main/tos/system/RandomC.nc">
      <documentation loc="33:/home/user/tinyos-main/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/user/tinyos-main/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/user/tinyos-main/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="sendAckC" loc="11:sendAckC.nc">
      <documentation loc="1:sendAck.h">
        <short>&#10;  </short>
        <long>&#10;  @author Luca Pietro Borsani&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="sendAckAppC.AMSenderC" loc="47(sendAckAppC.AMSenderC):/home/user/tinyos-main/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/user/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="sendAckAppC.AMSenderC.SenderC" loc="47(sendAckAppC.AMSenderC.SenderC):/home/user/tinyos-main/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/user/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x405187bc"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="sendAckAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(sendAckAppC.AMSenderC.SenderC.AMQueueEntryP):/home/user/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/user/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x405187bc"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/home/user/tinyos-main/tos/system/AMQueueP.nc">
      <documentation loc="33:/home/user/tinyos-main/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/home/user/tinyos-main/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/user/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="53:/home/user/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <documentation loc="43:/home/user/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:/home/user/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:/home/user/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:/home/user/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/home/user/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:/home/user/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/home/user/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:/home/user/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/home/user/tinyos-main/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:/home/user/tinyos-main/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="85(AlarmMultiplexC.Alarm):/home/user/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="70:/home/user/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="26(AlarmMultiplexC.Alarm.Alarm32khz32C):/home/user/tinyos-main/tos/platforms/mica/Alarm32khz32C.nc">
      <documentation loc="11:/home/user/tinyos-main/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16" loc="28(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16):/home/user/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/home/user/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="41:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega128 timer 1.</short>
        <long>&#10; HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="43:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <documentation loc="33:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="46:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc" safe="">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128Timer1P" loc="42:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc" safe="">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega128 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/home/user/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
          </type-int>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm):/home/user/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a7328"/>
            <typename><typedef-ref name="TOne" ref="0x403c82e0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="22:/home/user/tinyos-main/tos/platforms/mica/Counter32khz32C.nc">
      <documentation loc="11:/home/user/tinyos-main/tos/platforms/mica/Counter32khz32C.nc">
        <short>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/home/user/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/home/user/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/home/user/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a7328"/>
            <typename><typedef-ref name="TOne" ref="0x403c82e0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform32" loc="54(Counter32khz32C.Transform32):/home/user/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a7328"/>
            <typename><typedef-ref name="T32khz" ref="0x403a74e4"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212494"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a7328"/>
            <typename><typedef-ref name="TOne" ref="0x403c82e0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_one_overflow_t" ref="0x403c87c4"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32):/home/user/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a7328"/>
            <typename><typedef-ref name="T32khz" ref="0x403a74e4"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212494"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a7328"/>
            <typename><typedef-ref name="TOne" ref="0x403c82e0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NoInitC" loc="16:/home/user/tinyos-main/tos/system/NoInitC.nc" safe="">
      <documentation loc="10:/home/user/tinyos-main/tos/system/NoInitC.nc">
        <short>&#10; A do-nothing Init implementation.</short>
        <long>&#10; A do-nothing Init implementation. Useful for implementing components whose&#10; specification has an Init, but whose implementation doesn't need one.&#10;&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="83:/home/user/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="70:/home/user/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.</short>
        <long>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.&#10; Information on the function of these pins can be found on pages&#10; 14-15 of the CC2420 datasheet (rev 1.2).&#10;&#10; &#60;pre>&#10; $Id: HplCC2420PinsC.nc,v 1.6 2010-06-29 22:07:54 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="37:/home/user/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:/home/user/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-30 17:31:08 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="40(HplCC2420InterruptsC.CaptureSFDC):/home/user/tinyos-main/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <documentation loc="35:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="6(HplCC2420InterruptsC.InterruptFIFOPC):/home/user/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/home/user/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="41:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="36:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="41:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc" safe="">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="39(HplAtm128InterruptC.IntPin0):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="39(HplAtm128InterruptC.IntPin1):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="39(HplAtm128InterruptC.IntPin2):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="39(HplAtm128InterruptC.IntPin3):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="39(HplAtm128InterruptC.IntPin4):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="39(HplAtm128InterruptC.IntPin5):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="39(HplAtm128InterruptC.IntPin6):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="39(HplAtm128InterruptC.IntPin7):/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsP" loc="45:/home/user/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc" safe="">
      <documentation loc="32:/home/user/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
        <short>&#10; MicaZ implementation of the CC2420 interrupts.</short>
        <long>&#10; MicaZ implementation of the CC2420 interrupts. FIFOP is a real&#10; interrupt, while CCA and FIFO are emulated through timer polling.&#10; &#60;pre>&#10;  $Id: HplCC2420InterruptsP.nc,v 1.6 2008-06-26 04:39:12 regehr Exp $&#10; &#60;pre>&#10;&#10; @author Philip Levis&#10; @author Matt Miller&#10; @author David Moss&#10; @version @version $Revision: 1.6 $ $Date: 2008-06-26 04:39:12 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/home/user/tinyos-main/tos/system/StateC.nc">
      <documentation loc="32:/home/user/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/home/user/tinyos-main/tos/system/StateImplC.nc">
      <documentation loc="32:/home/user/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/home/user/tinyos-main/tos/system/StateImplP.nc" safe="">
      <documentation loc="32:/home/user/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="37(CC2420SpiWireC.HplCC2420SpiC):/home/user/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:/home/user/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-04-24 22:31:25 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC" loc="80:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/home/user/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/home/user/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/home/user/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/home/user/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/home/user/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/home/user/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/home/user/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/home/user/tinyos-main/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/user/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420SpiP" loc="38:/home/user/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc" safe="">
      <documentation loc="32:/home/user/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
        <short>&#10; Automatic slave select update for the SpiResource&#10;&#10; </short>
        <long>&#10; Automatic slave select update for the SpiResource&#10;&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/user/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/user/tinyos-main/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/user/tinyos-main/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/home/user/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/home/user/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/home/user/tinyos-main/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/home/user/tinyos-main/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="39:/home/user/tinyos-main/tos/platforms/micaz/LocalIeeeEui64C.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/home/user/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:/home/user/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:/home/user/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:/home/user/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:/home/user/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:/home/user/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:/home/user/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:/home/user/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):/home/user/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/user/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a7328"/>
            <typename><typedef-ref name="T32khz" ref="0x403a74e4"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/home/user/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/home/user/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/home/user/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/home/user/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aaec8"/>
            <typename><typedef-ref name="TMilli" ref="0x403a70c4"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/home/user/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40b3a344"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/user/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/user/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aaec8"/>
            <typename><typedef-ref name="TMilli" ref="0x403a70c4"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/user/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aaec8"/>
            <typename><typedef-ref name="TMilli" ref="0x403a70c4"/></typename>
          </type-tag>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/user/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/user/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aaec8"/>
            <typename><typedef-ref name="TMilli" ref="0x403a70c4"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):/home/user/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/user/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/user/tinyos-main/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/home/user/tinyos-main/tos/system/StateC.nc">
      <documentation loc="32:/home/user/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:/home/user/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:/home/user/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:/home/user/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:/home/user/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):/home/user/tinyos-main/tos/system/StateC.nc">
      <documentation loc="32:/home/user/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:/home/user/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:/home/user/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:/home/user/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:/home/user/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:/home/user/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:/home/user/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:/home/user/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:/home/user/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):/home/user/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:/home/user/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:/home/user/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:/home/user/tinyos-main/tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:/home/user/tinyos-main/tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):/home/user/tinyos-main/tos/system/StateC.nc">
      <documentation loc="32:/home/user/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:/home/user/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:/home/user/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:/home/user/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:/home/user/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:/home/user/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:/home/user/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="sendAckAppC.AMReceiverC" loc="43(sendAckAppC.AMReceiverC):/home/user/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/user/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="sendAckAppC.Timer0" loc="44(sendAckAppC.Timer0):/home/user/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/user/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="sendAckAppC.Timer1" loc="44(sendAckAppC.Timer1):/home/user/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/user/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="sendAckAppC.Timer2" loc="44(sendAckAppC.Timer2):/home/user/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/user/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/home/user/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/home/user/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/home/user/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/home/user/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/home/user/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/home/user/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/home/user/tinyos-main/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/home/user/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/home/user/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/home/user/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/home/user/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/home/user/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <documentation loc="32:/home/user/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:42 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/home/user/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/home/user/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/home/user/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/home/user/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="44:/home/user/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="38:/home/user/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="78:/home/user/tinyos-main/tos/chips/atm128/HplAtm128UartP.nc">
      <documentation loc="69:/home/user/tinyos-main/tos/chips/atm128/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega128 serial port HPL.</short>
        <long> &#10; Private component of the Atmega128 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="22:/home/user/tinyos-main/tos/platforms/mica/CounterMicro32C.nc">
      <documentation loc="11:/home/user/tinyos-main/tos/platforms/mica/CounterMicro32C.nc">
        <short>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterThree16C" loc="22:/home/user/tinyos-main/tos/platforms/mica/CounterThree16C.nc">
      <documentation loc="11:/home/user/tinyos-main/tos/platforms/mica/CounterThree16C.nc">
        <short>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3C" loc="41:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
        <short>&#10; HPL interface to Atmega128 timer 2.</short>
        <long>&#10; HPL interface to Atmega128 timer 2.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3P" loc="42:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
        <short>&#10; Internal componentr of the HPL interface to Atmega128 timer 3.</short>
        <long>&#10; Internal componentr of the HPL interface to Atmega128 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitThreeP.InitThree" loc="44(InitThreeP.InitThree):/home/user/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterThree16C.NCounter" loc="42(CounterThree16C.NCounter):/home/user/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a7748"/>
            <typename><typedef-ref name="TThree" ref="0x403c84f8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform32" loc="54(CounterMicro32C.Transform32):/home/user/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a7748"/>
            <typename><typedef-ref name="TMicro" ref="0x403a7904"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212494"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a7748"/>
            <typename><typedef-ref name="TThree" ref="0x403c84f8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_three_overflow_t" ref="0x403c8aa4"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/home/user/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/home/user/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="sendAckAppC.FakeSensorC" loc="8(sendAckAppC.FakeSensorC):FakeSensorC.nc">
      <documentation loc="1:FakeSensorC.nc">
        <short>&#10;  Configuration file for wiring of FakeSensorP module to other common &#10;  components to simulate the behavior of a real sensor&#10;&#10;  </short>
        <long>&#10;  Configuration file for wiring of FakeSensorP module to other common &#10;  components to simulate the behavior of a real sensor&#10;&#10;  @author Luca Pietro Borsani&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FakeSensorC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="sendAckAppC.FakeSensorC.FakeSensorP" loc="8(sendAckAppC.FakeSensorC.FakeSensorP):FakeSensorP.nc">
      <documentation loc="1:FakeSensorP.nc">
        <short>&#10;  Source file for implementation of module Middleware&#10;  which provides the main logic for middleware message management&#10;&#10;  </short>
        <long>&#10;  Source file for implementation of module Middleware&#10;  which provides the main logic for middleware message management&#10;&#10;  @author Luca Pietro Borsani&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FakeSensorP"/>
      </instance>
      <module/>
    </component>
    <component qname="sendAckAppC.FakeSensorC.TimerMilliC" loc="44(sendAckAppC.FakeSensorC.TimerMilliC):/home/user/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/user/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x40432db4" loc="40:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x4042f010" loc="40:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x4042f218" loc="40:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x40434dd0" loc="41:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x4043b010" loc="42:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x4043b228" loc="43:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x4043b40c" loc="44:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x4047fbd4" loc="42:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x4047fdec" loc="43:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x40488030" loc="44:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x40488214" loc="45:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/home/user/tinyos-main/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/home/user/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x4056fa28" loc="47:/home/user/tinyos-main/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x405187bc"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/home/user/tinyos-main/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/home/user/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x405785b4" loc="47:/home/user/tinyos-main/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x405187bc"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/home/user/tinyos-main/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/home/user/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40580010" loc="43:/home/user/tinyos-main/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x405187bc"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/home/user/tinyos-main/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/home/user/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x4058fbc8" loc="45:/home/user/tinyos-main/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="85:/home/user/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="70:/home/user/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="26:/home/user/tinyos-main/tos/platforms/mica/Alarm32khz32C.nc" abstract="">
      <documentation loc="11:/home/user/tinyos-main/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmOne16C" loc="28:/home/user/tinyos-main/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/home/user/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x4078c324" loc="44:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x4078c324"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x4078c534" loc="44:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x4077a8f4" loc="51:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x4077a8f4"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x4077ad10" loc="52:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x4077ad10"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x4077aec0" loc="53:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x407bdcac" loc="42:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x407bdcac"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x407ba100" loc="43:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x407ba100"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/user/tinyos-main/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/user/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x407c54d8" loc="55:/home/user/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x407c54d8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x407c5908" loc="56:/home/user/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x407c5908"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x407c5b60" loc="57:/home/user/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x407c5b60"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x407c4010" loc="58:/home/user/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x407c4010"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x407c426c" loc="59:/home/user/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x407c46c4" loc="60:/home/user/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x407c46c4"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/home/user/tinyos-main/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/user/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x407ae6b4" loc="52:/home/user/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x407ae6b4"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x407aeae4" loc="53:/home/user/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x407aeae4"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x407aed3c" loc="54:/home/user/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x407aed3c"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x407e21a8" loc="55:/home/user/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x407e21a8"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x407e2404" loc="56:/home/user/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioCaptureC" loc="40:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="35:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioInterruptC" loc="6:/home/user/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc" abstract="" safe="">
      <documentation loc="3:/home/user/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="39:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x4082b8d4" loc="39:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x4082baec" loc="40:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x4082bd04" loc="41:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x4082bee8" loc="42:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:/home/user/tinyos-main/tos/system/StateC.nc" abstract="">
      <documentation loc="32:/home/user/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="37:/home/user/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:/home/user/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-04-24 22:31:25 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/home/user/tinyos-main/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/home/user/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x4094ecf4" loc="83:/home/user/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/user/tinyos-main/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x409497dc" loc="42:/home/user/tinyos-main/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/home/user/tinyos-main/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/user/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/user/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/user/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40b2b364" loc="46:/home/user/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40b2b364"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x40b3a344" loc="23:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40b3a344"/></type-var>
        </typedef>
        <constant name="divider" ref="0x40b3a4f8" loc="23:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x40b33364" loc="23:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40b33364"/></type-var>
        </typedef>
        <constant name="divider" ref="0x40b33518" loc="23:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/user/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/user/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40b1ca2c" loc="46:/home/user/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40b1ca2c"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/user/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/user/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40b7c27c" loc="46:/home/user/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40b7c27c"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x40b7c450" loc="46:/home/user/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/user/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/user/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMReceiverC" loc="43:/home/user/tinyos-main/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/home/user/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40cb01bc" loc="43:/home/user/tinyos-main/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x405187bc"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/home/user/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/home/user/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/home/user/tinyos-main/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/home/user/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/home/user/tinyos-main/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/home/user/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FakeSensorC" loc="8:FakeSensorC.nc" abstract="">
      <documentation loc="1:FakeSensorC.nc">
        <short>&#10;  Configuration file for wiring of FakeSensorP module to other common &#10;  components to simulate the behavior of a real sensor&#10;&#10;  </short>
        <long>&#10;  Configuration file for wiring of FakeSensorP module to other common &#10;  components to simulate the behavior of a real sensor&#10;&#10;  @author Luca Pietro Borsani&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="FakeSensorP" loc="8:FakeSensorP.nc" abstract="">
      <documentation loc="1:FakeSensorP.nc">
        <short>&#10;  Source file for implementation of module Middleware&#10;  which provides the main logic for middleware message management&#10;&#10;  </short>
        <long>&#10;  Source file for implementation of module Middleware&#10;  which provides the main logic for middleware message management&#10;&#10;  @author Luca Pietro Borsani&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x403ef010" loc="58:/home/user/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x403ef010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403ef1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x403f5434" loc="57:/home/user/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x403f5434"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x403f55f4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x403fe7c8" loc="52:/home/user/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x403fe7c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403fe988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x403ef8ac" loc="46:/home/user/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x403ef8ac"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403efa6c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x403fe098" loc="50:/home/user/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x403fe098"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x403fe258"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x403fe334"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x403fe410"/>
        <function-ref name="actualMicro" scoped="" ref="0x403fe4ec"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x403fe5c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x403fd5c4" loc="45:/home/user/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x403fd5c4"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403fd784"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x403fd208" loc="44:/home/user/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x403fd208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403fd3c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x403fd9a8" loc="46:/home/user/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x403fd9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403fdb68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x403f3c00" loc="41:/home/user/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x403f3c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403f3dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x403f3850" loc="40:/home/user/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x403f3850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403f3a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x40402570" loc="45:/home/user/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x40402570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40402730"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x40408b5c" loc="44:/home/user/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x40408b5c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40408d1c"/>
        <function-ref name="isInput" scoped="" ref="0x40408df8"/>
        <function-ref name="toggle" scoped="" ref="0x40408ed4"/>
        <function-ref name="isOutput" scoped="" ref="0x40402010"/>
        <function-ref name="get" scoped="" ref="0x404020ec"/>
        <function-ref name="makeOutput" scoped="" ref="0x404021c8"/>
        <function-ref name="set" scoped="" ref="0x404022a4"/>
        <function-ref name="clr" scoped="" ref="0x40402380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x40405724" loc="43:/home/user/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40405724"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404058e4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x4042c654" loc="100:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x4042c654"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042ca14"/>
        <function-ref name="isInput" scoped="" ref="0x4042caf0"/>
        <function-ref name="toggle" scoped="" ref="0x4042cbcc"/>
        <function-ref name="isOutput" scoped="" ref="0x4042cca8"/>
        <function-ref name="get" scoped="" ref="0x4042cd84"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042ce60"/>
        <function-ref name="set" scoped="" ref="0x4042b010"/>
        <function-ref name="clr" scoped="" ref="0x4042b0ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x4041ee7c" loc="74:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x4041ee7c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041d050"/>
        <function-ref name="isInput" scoped="" ref="0x4041d12c"/>
        <function-ref name="toggle" scoped="" ref="0x4041d208"/>
        <function-ref name="isOutput" scoped="" ref="0x4041d2e4"/>
        <function-ref name="get" scoped="" ref="0x4041d3c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041d49c"/>
        <function-ref name="set" scoped="" ref="0x4041d578"/>
        <function-ref name="clr" scoped="" ref="0x4041d654"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x404213c0" loc="85:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x404213c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40421580"/>
        <function-ref name="isInput" scoped="" ref="0x4042165c"/>
        <function-ref name="toggle" scoped="" ref="0x40421738"/>
        <function-ref name="isOutput" scoped="" ref="0x40421814"/>
        <function-ref name="get" scoped="" ref="0x404218f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404219cc"/>
        <function-ref name="set" scoped="" ref="0x40421aa8"/>
        <function-ref name="clr" scoped="" ref="0x40421b84"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x404253c0" loc="94:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x404253c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40425580"/>
        <function-ref name="isInput" scoped="" ref="0x4042565c"/>
        <function-ref name="toggle" scoped="" ref="0x40425738"/>
        <function-ref name="isOutput" scoped="" ref="0x40425814"/>
        <function-ref name="get" scoped="" ref="0x404258f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404259cc"/>
        <function-ref name="set" scoped="" ref="0x40425aa8"/>
        <function-ref name="clr" scoped="" ref="0x40425b84"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x4040b010" loc="52:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x4040b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040b1d0"/>
        <function-ref name="isInput" scoped="" ref="0x4040b2ac"/>
        <function-ref name="toggle" scoped="" ref="0x4040b388"/>
        <function-ref name="isOutput" scoped="" ref="0x4040b464"/>
        <function-ref name="get" scoped="" ref="0x4040b540"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040b61c"/>
        <function-ref name="set" scoped="" ref="0x4040b6f8"/>
        <function-ref name="clr" scoped="" ref="0x4040b7d4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x40426030" loc="92:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x40426030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404261f0"/>
        <function-ref name="isInput" scoped="" ref="0x404262cc"/>
        <function-ref name="toggle" scoped="" ref="0x404263a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40426484"/>
        <function-ref name="get" scoped="" ref="0x40426560"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042663c"/>
        <function-ref name="set" scoped="" ref="0x40426718"/>
        <function-ref name="clr" scoped="" ref="0x404267f4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x404143c0" loc="55:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x404143c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40414580"/>
        <function-ref name="isInput" scoped="" ref="0x4041465c"/>
        <function-ref name="toggle" scoped="" ref="0x40414738"/>
        <function-ref name="isOutput" scoped="" ref="0x40414814"/>
        <function-ref name="get" scoped="" ref="0x404148f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404149cc"/>
        <function-ref name="set" scoped="" ref="0x40414aa8"/>
        <function-ref name="clr" scoped="" ref="0x40414b84"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x4041880c" loc="66:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x4041880c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404189cc"/>
        <function-ref name="isInput" scoped="" ref="0x40418aa8"/>
        <function-ref name="toggle" scoped="" ref="0x40418b84"/>
        <function-ref name="isOutput" scoped="" ref="0x40418c60"/>
        <function-ref name="get" scoped="" ref="0x40418d3c"/>
        <function-ref name="makeOutput" scoped="" ref="0x40418e18"/>
        <function-ref name="set" scoped="" ref="0x40418ef4"/>
        <function-ref name="clr" scoped="" ref="0x40417010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x4041cca0" loc="77:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x4041cca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041ce60"/>
        <function-ref name="isInput" scoped="" ref="0x4041b010"/>
        <function-ref name="toggle" scoped="" ref="0x4041b0ec"/>
        <function-ref name="isOutput" scoped="" ref="0x4041b1c8"/>
        <function-ref name="get" scoped="" ref="0x4041b2a4"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041b380"/>
        <function-ref name="set" scoped="" ref="0x4041b45c"/>
        <function-ref name="clr" scoped="" ref="0x4041b538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x4041f208" loc="88:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x4041f208"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041f3c8"/>
        <function-ref name="isInput" scoped="" ref="0x4041f4a4"/>
        <function-ref name="toggle" scoped="" ref="0x4041f580"/>
        <function-ref name="isOutput" scoped="" ref="0x4041f65c"/>
        <function-ref name="get" scoped="" ref="0x4041f738"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041f814"/>
        <function-ref name="set" scoped="" ref="0x4041f8f0"/>
        <function-ref name="clr" scoped="" ref="0x4041f9cc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x40404d58" loc="47:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x40404d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40404f18"/>
        <function-ref name="isInput" scoped="" ref="0x4040e010"/>
        <function-ref name="toggle" scoped="" ref="0x4040e0ec"/>
        <function-ref name="isOutput" scoped="" ref="0x4040e1c8"/>
        <function-ref name="get" scoped="" ref="0x4040e2a4"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040e380"/>
        <function-ref name="set" scoped="" ref="0x4040e45c"/>
        <function-ref name="clr" scoped="" ref="0x4040e538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x40412208" loc="58:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x40412208"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404123c8"/>
        <function-ref name="isInput" scoped="" ref="0x404124a4"/>
        <function-ref name="toggle" scoped="" ref="0x40412580"/>
        <function-ref name="isOutput" scoped="" ref="0x4041265c"/>
        <function-ref name="get" scoped="" ref="0x40412738"/>
        <function-ref name="makeOutput" scoped="" ref="0x40412814"/>
        <function-ref name="set" scoped="" ref="0x404128f0"/>
        <function-ref name="clr" scoped="" ref="0x404129cc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x40416654" loc="69:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x40416654"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40416814"/>
        <function-ref name="isInput" scoped="" ref="0x404168f0"/>
        <function-ref name="toggle" scoped="" ref="0x404169cc"/>
        <function-ref name="isOutput" scoped="" ref="0x40416aa8"/>
        <function-ref name="get" scoped="" ref="0x40416b84"/>
        <function-ref name="makeOutput" scoped="" ref="0x40416c60"/>
        <function-ref name="set" scoped="" ref="0x40416d3c"/>
        <function-ref name="clr" scoped="" ref="0x40416e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x4041aad8" loc="80:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x4041aad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041ac98"/>
        <function-ref name="isInput" scoped="" ref="0x4041ad74"/>
        <function-ref name="toggle" scoped="" ref="0x4041ae50"/>
        <function-ref name="isOutput" scoped="" ref="0x40423010"/>
        <function-ref name="get" scoped="" ref="0x404230ec"/>
        <function-ref name="makeOutput" scoped="" ref="0x404231c8"/>
        <function-ref name="set" scoped="" ref="0x404232a4"/>
        <function-ref name="clr" scoped="" ref="0x40423380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x4042d208" loc="97:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x4042d208"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042d3c8"/>
        <function-ref name="isInput" scoped="" ref="0x4042d4a4"/>
        <function-ref name="toggle" scoped="" ref="0x4042d580"/>
        <function-ref name="isOutput" scoped="" ref="0x4042d65c"/>
        <function-ref name="get" scoped="" ref="0x4042d738"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042d814"/>
        <function-ref name="set" scoped="" ref="0x4042d8f0"/>
        <function-ref name="clr" scoped="" ref="0x4042d9cc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x4042a730" loc="103:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x4042a730"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042a8f0"/>
        <function-ref name="isInput" scoped="" ref="0x4042a9cc"/>
        <function-ref name="toggle" scoped="" ref="0x4042aaa8"/>
        <function-ref name="isOutput" scoped="" ref="0x4042ab84"/>
        <function-ref name="get" scoped="" ref="0x4042ac60"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042ad3c"/>
        <function-ref name="set" scoped="" ref="0x4042ae18"/>
        <function-ref name="clr" scoped="" ref="0x4042aef4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x40422010" loc="83:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x40422010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404221d0"/>
        <function-ref name="isInput" scoped="" ref="0x404222ac"/>
        <function-ref name="toggle" scoped="" ref="0x40422388"/>
        <function-ref name="isOutput" scoped="" ref="0x40422464"/>
        <function-ref name="get" scoped="" ref="0x40422540"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042261c"/>
        <function-ref name="set" scoped="" ref="0x404226f8"/>
        <function-ref name="clr" scoped="" ref="0x404227d4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x4040dad8" loc="50:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x4040dad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040dc98"/>
        <function-ref name="isInput" scoped="" ref="0x4040dd74"/>
        <function-ref name="toggle" scoped="" ref="0x4040de50"/>
        <function-ref name="isOutput" scoped="" ref="0x4040c010"/>
        <function-ref name="get" scoped="" ref="0x4040c0ec"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040c1c8"/>
        <function-ref name="set" scoped="" ref="0x4040c2a4"/>
        <function-ref name="clr" scoped="" ref="0x4040c380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x40410030" loc="61:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x40410030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404101f0"/>
        <function-ref name="isInput" scoped="" ref="0x404102cc"/>
        <function-ref name="toggle" scoped="" ref="0x404103a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40410484"/>
        <function-ref name="get" scoped="" ref="0x40410560"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041063c"/>
        <function-ref name="set" scoped="" ref="0x40410718"/>
        <function-ref name="clr" scoped="" ref="0x404107f4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x4042b2e4" loc="101:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x4042b2e4"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042b4a4"/>
        <function-ref name="isInput" scoped="" ref="0x4042b580"/>
        <function-ref name="toggle" scoped="" ref="0x4042b65c"/>
        <function-ref name="isOutput" scoped="" ref="0x4042b738"/>
        <function-ref name="get" scoped="" ref="0x4042b814"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042b8f0"/>
        <function-ref name="set" scoped="" ref="0x4042b9cc"/>
        <function-ref name="clr" scoped="" ref="0x4042baa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x404193c0" loc="64:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x404193c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40419580"/>
        <function-ref name="isInput" scoped="" ref="0x4041965c"/>
        <function-ref name="toggle" scoped="" ref="0x40419738"/>
        <function-ref name="isOutput" scoped="" ref="0x40419814"/>
        <function-ref name="get" scoped="" ref="0x404198f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404199cc"/>
        <function-ref name="set" scoped="" ref="0x40419aa8"/>
        <function-ref name="clr" scoped="" ref="0x40419b84"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x4041d84c" loc="75:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x4041d84c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041da0c"/>
        <function-ref name="isInput" scoped="" ref="0x4041dae8"/>
        <function-ref name="toggle" scoped="" ref="0x4041dbc4"/>
        <function-ref name="isOutput" scoped="" ref="0x4041dca0"/>
        <function-ref name="get" scoped="" ref="0x4041dd7c"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041de58"/>
        <function-ref name="set" scoped="" ref="0x4041c010"/>
        <function-ref name="clr" scoped="" ref="0x4041c0ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x40421d7c" loc="86:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x40421d7c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40420010"/>
        <function-ref name="isInput" scoped="" ref="0x404200ec"/>
        <function-ref name="toggle" scoped="" ref="0x404201c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404202a4"/>
        <function-ref name="get" scoped="" ref="0x40420380"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042045c"/>
        <function-ref name="set" scoped="" ref="0x40420538"/>
        <function-ref name="clr" scoped="" ref="0x40420614"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x40425d7c" loc="95:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x40425d7c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40424010"/>
        <function-ref name="isInput" scoped="" ref="0x404240ec"/>
        <function-ref name="toggle" scoped="" ref="0x404241c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404242a4"/>
        <function-ref name="get" scoped="" ref="0x40424380"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042445c"/>
        <function-ref name="set" scoped="" ref="0x40424538"/>
        <function-ref name="clr" scoped="" ref="0x40424614"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x4040b9cc" loc="53:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x4040b9cc"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040bb8c"/>
        <function-ref name="isInput" scoped="" ref="0x4040bc68"/>
        <function-ref name="toggle" scoped="" ref="0x4040bd44"/>
        <function-ref name="isOutput" scoped="" ref="0x4040be20"/>
        <function-ref name="get" scoped="" ref="0x4040befc"/>
        <function-ref name="makeOutput" scoped="" ref="0x40414010"/>
        <function-ref name="set" scoped="" ref="0x404140ec"/>
        <function-ref name="clr" scoped="" ref="0x404141c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x40414d7c" loc="56:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x40414d7c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40413010"/>
        <function-ref name="isInput" scoped="" ref="0x404130ec"/>
        <function-ref name="toggle" scoped="" ref="0x404131c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404132a4"/>
        <function-ref name="get" scoped="" ref="0x40413380"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041345c"/>
        <function-ref name="set" scoped="" ref="0x40413538"/>
        <function-ref name="clr" scoped="" ref="0x40413614"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x40417208" loc="67:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x40417208"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404173c8"/>
        <function-ref name="isInput" scoped="" ref="0x404174a4"/>
        <function-ref name="toggle" scoped="" ref="0x40417580"/>
        <function-ref name="isOutput" scoped="" ref="0x4041765c"/>
        <function-ref name="get" scoped="" ref="0x40417738"/>
        <function-ref name="makeOutput" scoped="" ref="0x40417814"/>
        <function-ref name="set" scoped="" ref="0x404178f0"/>
        <function-ref name="clr" scoped="" ref="0x404179cc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x4041b730" loc="78:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x4041b730"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041b8f0"/>
        <function-ref name="isInput" scoped="" ref="0x4041b9cc"/>
        <function-ref name="toggle" scoped="" ref="0x4041baa8"/>
        <function-ref name="isOutput" scoped="" ref="0x4041bb84"/>
        <function-ref name="get" scoped="" ref="0x4041bc60"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041bd3c"/>
        <function-ref name="set" scoped="" ref="0x4041be18"/>
        <function-ref name="clr" scoped="" ref="0x4041bef4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x4041fbc4" loc="89:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x4041fbc4"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041fd84"/>
        <function-ref name="isInput" scoped="" ref="0x4041fe60"/>
        <function-ref name="toggle" scoped="" ref="0x40427010"/>
        <function-ref name="isOutput" scoped="" ref="0x404270ec"/>
        <function-ref name="get" scoped="" ref="0x404271c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404272a4"/>
        <function-ref name="set" scoped="" ref="0x40427380"/>
        <function-ref name="clr" scoped="" ref="0x4042745c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x4040e730" loc="48:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x4040e730"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040e8f0"/>
        <function-ref name="isInput" scoped="" ref="0x4040e9cc"/>
        <function-ref name="toggle" scoped="" ref="0x4040eaa8"/>
        <function-ref name="isOutput" scoped="" ref="0x4040eb84"/>
        <function-ref name="get" scoped="" ref="0x4040ec60"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040ed3c"/>
        <function-ref name="set" scoped="" ref="0x4040ee18"/>
        <function-ref name="clr" scoped="" ref="0x4040eef4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x40412bc4" loc="59:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x40412bc4"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40412e04"/>
        <function-ref name="isInput" scoped="" ref="0x40412ee0"/>
        <function-ref name="toggle" scoped="" ref="0x40411010"/>
        <function-ref name="isOutput" scoped="" ref="0x404110ec"/>
        <function-ref name="get" scoped="" ref="0x404111c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404112a4"/>
        <function-ref name="set" scoped="" ref="0x40411380"/>
        <function-ref name="clr" scoped="" ref="0x4041145c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x40415030" loc="70:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x40415030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404151f0"/>
        <function-ref name="isInput" scoped="" ref="0x404152cc"/>
        <function-ref name="toggle" scoped="" ref="0x404153a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40415484"/>
        <function-ref name="get" scoped="" ref="0x40415560"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041563c"/>
        <function-ref name="set" scoped="" ref="0x40415718"/>
        <function-ref name="clr" scoped="" ref="0x404157f4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x4042dbc4" loc="98:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x4042dbc4"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042dd84"/>
        <function-ref name="isInput" scoped="" ref="0x4042de60"/>
        <function-ref name="toggle" scoped="" ref="0x4042c010"/>
        <function-ref name="isOutput" scoped="" ref="0x4042c0ec"/>
        <function-ref name="get" scoped="" ref="0x4042c1c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042c2a4"/>
        <function-ref name="set" scoped="" ref="0x4042c380"/>
        <function-ref name="clr" scoped="" ref="0x4042c45c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x4041e3c0" loc="73:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x4041e3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041e680"/>
        <function-ref name="isInput" scoped="" ref="0x4041e75c"/>
        <function-ref name="toggle" scoped="" ref="0x4041e838"/>
        <function-ref name="isOutput" scoped="" ref="0x4041e914"/>
        <function-ref name="get" scoped="" ref="0x4041e9f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041eacc"/>
        <function-ref name="set" scoped="" ref="0x4041eba8"/>
        <function-ref name="clr" scoped="" ref="0x4041ec84"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x404229cc" loc="84:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x404229cc"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40422b8c"/>
        <function-ref name="isInput" scoped="" ref="0x40422c68"/>
        <function-ref name="toggle" scoped="" ref="0x40422d44"/>
        <function-ref name="isOutput" scoped="" ref="0x40422e20"/>
        <function-ref name="get" scoped="" ref="0x40422efc"/>
        <function-ref name="makeOutput" scoped="" ref="0x40421010"/>
        <function-ref name="set" scoped="" ref="0x404210ec"/>
        <function-ref name="clr" scoped="" ref="0x404211c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x404269ec" loc="93:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x404269ec"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40426bac"/>
        <function-ref name="isInput" scoped="" ref="0x40426c88"/>
        <function-ref name="toggle" scoped="" ref="0x40426d64"/>
        <function-ref name="isOutput" scoped="" ref="0x40426e40"/>
        <function-ref name="get" scoped="" ref="0x40426f1c"/>
        <function-ref name="makeOutput" scoped="" ref="0x40425010"/>
        <function-ref name="set" scoped="" ref="0x404250ec"/>
        <function-ref name="clr" scoped="" ref="0x404251c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x4042911c" loc="104:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x4042911c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404292dc"/>
        <function-ref name="isInput" scoped="" ref="0x404293b8"/>
        <function-ref name="toggle" scoped="" ref="0x40429494"/>
        <function-ref name="isOutput" scoped="" ref="0x40429570"/>
        <function-ref name="get" scoped="" ref="0x4042964c"/>
        <function-ref name="makeOutput" scoped="" ref="0x40429728"/>
        <function-ref name="set" scoped="" ref="0x40429804"/>
        <function-ref name="clr" scoped="" ref="0x404298e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x4040c578" loc="51:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x4040c578"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040c738"/>
        <function-ref name="isInput" scoped="" ref="0x4040c814"/>
        <function-ref name="toggle" scoped="" ref="0x4040c8f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4040c9cc"/>
        <function-ref name="get" scoped="" ref="0x4040caa8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040cb84"/>
        <function-ref name="set" scoped="" ref="0x4040cc60"/>
        <function-ref name="clr" scoped="" ref="0x4040cd3c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x404109ec" loc="62:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x404109ec"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40410bac"/>
        <function-ref name="isInput" scoped="" ref="0x40410c88"/>
        <function-ref name="toggle" scoped="" ref="0x40410d64"/>
        <function-ref name="isOutput" scoped="" ref="0x40410e40"/>
        <function-ref name="get" scoped="" ref="0x40410f1c"/>
        <function-ref name="makeOutput" scoped="" ref="0x40419010"/>
        <function-ref name="set" scoped="" ref="0x404190ec"/>
        <function-ref name="clr" scoped="" ref="0x404191c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x40427654" loc="91:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x40427654"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40427814"/>
        <function-ref name="isInput" scoped="" ref="0x404278f0"/>
        <function-ref name="toggle" scoped="" ref="0x404279cc"/>
        <function-ref name="isOutput" scoped="" ref="0x40427aa8"/>
        <function-ref name="get" scoped="" ref="0x40427b84"/>
        <function-ref name="makeOutput" scoped="" ref="0x40427c60"/>
        <function-ref name="set" scoped="" ref="0x40427d3c"/>
        <function-ref name="clr" scoped="" ref="0x40427e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x40419d7c" loc="65:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x40419d7c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40418010"/>
        <function-ref name="isInput" scoped="" ref="0x404180ec"/>
        <function-ref name="toggle" scoped="" ref="0x404181c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404182a4"/>
        <function-ref name="get" scoped="" ref="0x40418380"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041845c"/>
        <function-ref name="set" scoped="" ref="0x40418538"/>
        <function-ref name="clr" scoped="" ref="0x40418614"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x4041c2e4" loc="76:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x4041c2e4"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041c4a4"/>
        <function-ref name="isInput" scoped="" ref="0x4041c580"/>
        <function-ref name="toggle" scoped="" ref="0x4041c65c"/>
        <function-ref name="isOutput" scoped="" ref="0x4041c738"/>
        <function-ref name="get" scoped="" ref="0x4041c814"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041c8f0"/>
        <function-ref name="set" scoped="" ref="0x4041c9cc"/>
        <function-ref name="clr" scoped="" ref="0x4041caa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x4042080c" loc="87:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x4042080c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404209cc"/>
        <function-ref name="isInput" scoped="" ref="0x40420aa8"/>
        <function-ref name="toggle" scoped="" ref="0x40420b84"/>
        <function-ref name="isOutput" scoped="" ref="0x40420c60"/>
        <function-ref name="get" scoped="" ref="0x40420d3c"/>
        <function-ref name="makeOutput" scoped="" ref="0x40420e18"/>
        <function-ref name="set" scoped="" ref="0x40420ef4"/>
        <function-ref name="clr" scoped="" ref="0x4041f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x4042480c" loc="96:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x4042480c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404249cc"/>
        <function-ref name="isInput" scoped="" ref="0x40424aa8"/>
        <function-ref name="toggle" scoped="" ref="0x40424b84"/>
        <function-ref name="isOutput" scoped="" ref="0x40424c60"/>
        <function-ref name="get" scoped="" ref="0x40424d3c"/>
        <function-ref name="makeOutput" scoped="" ref="0x40424e18"/>
        <function-ref name="set" scoped="" ref="0x40424ef4"/>
        <function-ref name="clr" scoped="" ref="0x4042d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x4040439c" loc="46:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x4040439c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040455c"/>
        <function-ref name="isInput" scoped="" ref="0x40404638"/>
        <function-ref name="toggle" scoped="" ref="0x40404714"/>
        <function-ref name="isOutput" scoped="" ref="0x404047f0"/>
        <function-ref name="get" scoped="" ref="0x404048cc"/>
        <function-ref name="makeOutput" scoped="" ref="0x404049a8"/>
        <function-ref name="set" scoped="" ref="0x40404a84"/>
        <function-ref name="clr" scoped="" ref="0x40404b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x4041380c" loc="57:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x4041380c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404139cc"/>
        <function-ref name="isInput" scoped="" ref="0x40413aa8"/>
        <function-ref name="toggle" scoped="" ref="0x40413b84"/>
        <function-ref name="isOutput" scoped="" ref="0x40413c60"/>
        <function-ref name="get" scoped="" ref="0x40413d3c"/>
        <function-ref name="makeOutput" scoped="" ref="0x40413e18"/>
        <function-ref name="set" scoped="" ref="0x40413ef4"/>
        <function-ref name="clr" scoped="" ref="0x40412010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x40417bc4" loc="68:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x40417bc4"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40417d84"/>
        <function-ref name="isInput" scoped="" ref="0x40417e60"/>
        <function-ref name="toggle" scoped="" ref="0x40416010"/>
        <function-ref name="isOutput" scoped="" ref="0x404160ec"/>
        <function-ref name="get" scoped="" ref="0x404161c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404162a4"/>
        <function-ref name="set" scoped="" ref="0x40416380"/>
        <function-ref name="clr" scoped="" ref="0x4041645c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x4041a11c" loc="79:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x4041a11c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041a2dc"/>
        <function-ref name="isInput" scoped="" ref="0x4041a3b8"/>
        <function-ref name="toggle" scoped="" ref="0x4041a494"/>
        <function-ref name="isOutput" scoped="" ref="0x4041a570"/>
        <function-ref name="get" scoped="" ref="0x4041a64c"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041a728"/>
        <function-ref name="set" scoped="" ref="0x4041a804"/>
        <function-ref name="clr" scoped="" ref="0x4041a8e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x4042bca0" loc="102:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x4042bca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042be60"/>
        <function-ref name="isInput" scoped="" ref="0x4042a010"/>
        <function-ref name="toggle" scoped="" ref="0x4042a0ec"/>
        <function-ref name="isOutput" scoped="" ref="0x4042a1c8"/>
        <function-ref name="get" scoped="" ref="0x4042a2a4"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042a380"/>
        <function-ref name="set" scoped="" ref="0x4042a45c"/>
        <function-ref name="clr" scoped="" ref="0x4042a538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x40423578" loc="82:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x40423578"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40423738"/>
        <function-ref name="isInput" scoped="" ref="0x40423814"/>
        <function-ref name="toggle" scoped="" ref="0x404238f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404239cc"/>
        <function-ref name="get" scoped="" ref="0x40423aa8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40423b84"/>
        <function-ref name="set" scoped="" ref="0x40423c60"/>
        <function-ref name="clr" scoped="" ref="0x40423d3c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x404159ec" loc="71:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x404159ec"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40415bac"/>
        <function-ref name="isInput" scoped="" ref="0x40415c88"/>
        <function-ref name="toggle" scoped="" ref="0x40415d64"/>
        <function-ref name="isOutput" scoped="" ref="0x40415e40"/>
        <function-ref name="get" scoped="" ref="0x40415f1c"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041e010"/>
        <function-ref name="set" scoped="" ref="0x4041e0ec"/>
        <function-ref name="clr" scoped="" ref="0x4041e1c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x4040d11c" loc="49:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x4040d11c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040d2dc"/>
        <function-ref name="isInput" scoped="" ref="0x4040d3b8"/>
        <function-ref name="toggle" scoped="" ref="0x4040d494"/>
        <function-ref name="isOutput" scoped="" ref="0x4040d570"/>
        <function-ref name="get" scoped="" ref="0x4040d64c"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040d728"/>
        <function-ref name="set" scoped="" ref="0x4040d804"/>
        <function-ref name="clr" scoped="" ref="0x4040d8e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x40411654" loc="60:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x40411654"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40411814"/>
        <function-ref name="isInput" scoped="" ref="0x404118f0"/>
        <function-ref name="toggle" scoped="" ref="0x404119cc"/>
        <function-ref name="isOutput" scoped="" ref="0x40411aa8"/>
        <function-ref name="get" scoped="" ref="0x40411b84"/>
        <function-ref name="makeOutput" scoped="" ref="0x40411c60"/>
        <function-ref name="set" scoped="" ref="0x40411d3c"/>
        <function-ref name="clr" scoped="" ref="0x40411e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40452d20" loc="46:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40452d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40452ee0"/>
        <function-ref name="isInput" scoped="" ref="0x40451010"/>
        <function-ref name="toggle" scoped="" ref="0x404510ec"/>
        <function-ref name="isOutput" scoped="" ref="0x404511c8"/>
        <function-ref name="get" scoped="" ref="0x404512a4"/>
        <function-ref name="makeOutput" scoped="" ref="0x40451380"/>
        <function-ref name="set" scoped="" ref="0x4045145c"/>
        <function-ref name="clr" scoped="" ref="0x40451538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4045a930" loc="49:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4045a930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045aaf0"/>
        <function-ref name="isInput" scoped="" ref="0x4045abcc"/>
        <function-ref name="toggle" scoped="" ref="0x4045aca8"/>
        <function-ref name="isOutput" scoped="" ref="0x4045ad84"/>
        <function-ref name="get" scoped="" ref="0x4045ae60"/>
        <function-ref name="makeOutput" scoped="" ref="0x40459010"/>
        <function-ref name="set" scoped="" ref="0x404590ec"/>
        <function-ref name="clr" scoped="" ref="0x404591c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40453a44" loc="44:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40453a44"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40453c04"/>
        <function-ref name="isInput" scoped="" ref="0x40453ce0"/>
        <function-ref name="toggle" scoped="" ref="0x40453dbc"/>
        <function-ref name="isOutput" scoped="" ref="0x40453e98"/>
        <function-ref name="get" scoped="" ref="0x40452010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404520ec"/>
        <function-ref name="set" scoped="" ref="0x404521c8"/>
        <function-ref name="clr" scoped="" ref="0x404522a4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40451694" loc="47:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40451694"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40451854"/>
        <function-ref name="isInput" scoped="" ref="0x40451930"/>
        <function-ref name="toggle" scoped="" ref="0x40451a0c"/>
        <function-ref name="isOutput" scoped="" ref="0x40451ae8"/>
        <function-ref name="get" scoped="" ref="0x40451bc4"/>
        <function-ref name="makeOutput" scoped="" ref="0x40451ca0"/>
        <function-ref name="set" scoped="" ref="0x40451d7c"/>
        <function-ref name="clr" scoped="" ref="0x40451e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40459324" loc="50:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40459324"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404594e4"/>
        <function-ref name="isInput" scoped="" ref="0x404595c0"/>
        <function-ref name="toggle" scoped="" ref="0x4045969c"/>
        <function-ref name="isOutput" scoped="" ref="0x40459778"/>
        <function-ref name="get" scoped="" ref="0x40459854"/>
        <function-ref name="makeOutput" scoped="" ref="0x40459930"/>
        <function-ref name="set" scoped="" ref="0x40459a0c"/>
        <function-ref name="clr" scoped="" ref="0x40459ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40452400" loc="45:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40452400"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404525c0"/>
        <function-ref name="isInput" scoped="" ref="0x4045269c"/>
        <function-ref name="toggle" scoped="" ref="0x40452778"/>
        <function-ref name="isOutput" scoped="" ref="0x40452854"/>
        <function-ref name="get" scoped="" ref="0x40452930"/>
        <function-ref name="makeOutput" scoped="" ref="0x40452a0c"/>
        <function-ref name="set" scoped="" ref="0x40452ae8"/>
        <function-ref name="clr" scoped="" ref="0x40452bc4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4045a010" loc="48:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4045a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045a1d0"/>
        <function-ref name="isInput" scoped="" ref="0x4045a2ac"/>
        <function-ref name="toggle" scoped="" ref="0x4045a388"/>
        <function-ref name="isOutput" scoped="" ref="0x4045a464"/>
        <function-ref name="get" scoped="" ref="0x4045a540"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045a61c"/>
        <function-ref name="set" scoped="" ref="0x4045a6f8"/>
        <function-ref name="clr" scoped="" ref="0x4045a7d4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40459c44" loc="51:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40459c44"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40459e04"/>
        <function-ref name="isInput" scoped="" ref="0x40459ee0"/>
        <function-ref name="toggle" scoped="" ref="0x40458010"/>
        <function-ref name="isOutput" scoped="" ref="0x404580ec"/>
        <function-ref name="get" scoped="" ref="0x404581c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404582a4"/>
        <function-ref name="set" scoped="" ref="0x40458380"/>
        <function-ref name="clr" scoped="" ref="0x4045845c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ef8ea8" loc="46:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ef8ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ef30b8"/>
        <function-ref name="isInput" scoped="" ref="0x40ef3194"/>
        <function-ref name="toggle" scoped="" ref="0x40ef3270"/>
        <function-ref name="isOutput" scoped="" ref="0x40ef334c"/>
        <function-ref name="get" scoped="" ref="0x40ef3428"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ef3504"/>
        <function-ref name="set" scoped="" ref="0x40ef35e0"/>
        <function-ref name="clr" scoped="" ref="0x40ef36bc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ef27b8" loc="46:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ef27b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ef2978"/>
        <function-ref name="isInput" scoped="" ref="0x40ef2a54"/>
        <function-ref name="toggle" scoped="" ref="0x40ef2b30"/>
        <function-ref name="isOutput" scoped="" ref="0x40ef2c0c"/>
        <function-ref name="get" scoped="" ref="0x40ef2ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ef2dc4"/>
        <function-ref name="set" scoped="" ref="0x40ef2ea0"/>
        <function-ref name="clr" scoped="" ref="0x40ef1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ef00f4" loc="46:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ef00f4"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ef02b4"/>
        <function-ref name="isInput" scoped="" ref="0x40ef0390"/>
        <function-ref name="toggle" scoped="" ref="0x40ef046c"/>
        <function-ref name="isOutput" scoped="" ref="0x40ef0548"/>
        <function-ref name="get" scoped="" ref="0x40ef0624"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ef0700"/>
        <function-ref name="set" scoped="" ref="0x40ef07dc"/>
        <function-ref name="clr" scoped="" ref="0x40ef08b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40eef99c" loc="46:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40eef99c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40eefb5c"/>
        <function-ref name="isInput" scoped="" ref="0x40eefc38"/>
        <function-ref name="toggle" scoped="" ref="0x40eefd14"/>
        <function-ref name="isOutput" scoped="" ref="0x40eefdf0"/>
        <function-ref name="get" scoped="" ref="0x40eefecc"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f28010"/>
        <function-ref name="set" scoped="" ref="0x40f280ec"/>
        <function-ref name="clr" scoped="" ref="0x40f281c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f272bc" loc="46:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f272bc"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f2747c"/>
        <function-ref name="isInput" scoped="" ref="0x40f27558"/>
        <function-ref name="toggle" scoped="" ref="0x40f27634"/>
        <function-ref name="isOutput" scoped="" ref="0x40f27710"/>
        <function-ref name="get" scoped="" ref="0x40f277ec"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f278c8"/>
        <function-ref name="set" scoped="" ref="0x40f279a4"/>
        <function-ref name="clr" scoped="" ref="0x40f27a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f26b8c" loc="46:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f26b8c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f26d4c"/>
        <function-ref name="isInput" scoped="" ref="0x40f26e28"/>
        <function-ref name="toggle" scoped="" ref="0x40f26f04"/>
        <function-ref name="isOutput" scoped="" ref="0x40f25010"/>
        <function-ref name="get" scoped="" ref="0x40f250ec"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f251c8"/>
        <function-ref name="set" scoped="" ref="0x40f252a4"/>
        <function-ref name="clr" scoped="" ref="0x40f25380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f24514" loc="46:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f24514"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f246d4"/>
        <function-ref name="isInput" scoped="" ref="0x40f247b0"/>
        <function-ref name="toggle" scoped="" ref="0x40f2488c"/>
        <function-ref name="isOutput" scoped="" ref="0x40f24968"/>
        <function-ref name="get" scoped="" ref="0x40f24a44"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f24b20"/>
        <function-ref name="set" scoped="" ref="0x40f24bfc"/>
        <function-ref name="clr" scoped="" ref="0x40f24cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f23e8c" loc="46:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f23e8c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f2206c"/>
        <function-ref name="isInput" scoped="" ref="0x40f22148"/>
        <function-ref name="toggle" scoped="" ref="0x40f22224"/>
        <function-ref name="isOutput" scoped="" ref="0x40f22300"/>
        <function-ref name="get" scoped="" ref="0x40f223dc"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f224b8"/>
        <function-ref name="set" scoped="" ref="0x40f22594"/>
        <function-ref name="clr" scoped="" ref="0x40f22670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4045d16c" loc="46:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4045d16c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045d32c"/>
        <function-ref name="isInput" scoped="" ref="0x4045d408"/>
        <function-ref name="toggle" scoped="" ref="0x4045d4e4"/>
        <function-ref name="isOutput" scoped="" ref="0x4045d5c0"/>
        <function-ref name="get" scoped="" ref="0x4045d69c"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045d778"/>
        <function-ref name="set" scoped="" ref="0x4045d854"/>
        <function-ref name="clr" scoped="" ref="0x4045d930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4045cd20" loc="49:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4045cd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045cee0"/>
        <function-ref name="isInput" scoped="" ref="0x4045b010"/>
        <function-ref name="toggle" scoped="" ref="0x4045b0ec"/>
        <function-ref name="isOutput" scoped="" ref="0x4045b1c8"/>
        <function-ref name="get" scoped="" ref="0x4045b2a4"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045b380"/>
        <function-ref name="set" scoped="" ref="0x4045b45c"/>
        <function-ref name="clr" scoped="" ref="0x4045b538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40456e8c" loc="44:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40456e8c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045f06c"/>
        <function-ref name="isInput" scoped="" ref="0x4045f148"/>
        <function-ref name="toggle" scoped="" ref="0x4045f224"/>
        <function-ref name="isOutput" scoped="" ref="0x4045f300"/>
        <function-ref name="get" scoped="" ref="0x4045f3dc"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045f4b8"/>
        <function-ref name="set" scoped="" ref="0x4045f594"/>
        <function-ref name="clr" scoped="" ref="0x4045f670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4045da8c" loc="47:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4045da8c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045dc4c"/>
        <function-ref name="isInput" scoped="" ref="0x4045dd28"/>
        <function-ref name="toggle" scoped="" ref="0x4045de04"/>
        <function-ref name="isOutput" scoped="" ref="0x4045dee0"/>
        <function-ref name="get" scoped="" ref="0x4045c010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045c0ec"/>
        <function-ref name="set" scoped="" ref="0x4045c1c8"/>
        <function-ref name="clr" scoped="" ref="0x4045c2a4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4045b694" loc="50:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4045b694"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045b854"/>
        <function-ref name="isInput" scoped="" ref="0x4045b930"/>
        <function-ref name="toggle" scoped="" ref="0x4045ba0c"/>
        <function-ref name="isOutput" scoped="" ref="0x4045bae8"/>
        <function-ref name="get" scoped="" ref="0x4045bbc4"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045bca0"/>
        <function-ref name="set" scoped="" ref="0x4045bd7c"/>
        <function-ref name="clr" scoped="" ref="0x4045be58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4045f7cc" loc="45:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4045f7cc"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045f98c"/>
        <function-ref name="isInput" scoped="" ref="0x4045fa68"/>
        <function-ref name="toggle" scoped="" ref="0x4045fb44"/>
        <function-ref name="isOutput" scoped="" ref="0x4045fc20"/>
        <function-ref name="get" scoped="" ref="0x4045fcfc"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045fdd8"/>
        <function-ref name="set" scoped="" ref="0x4045feb4"/>
        <function-ref name="clr" scoped="" ref="0x4045d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4045c400" loc="48:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4045c400"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045c5c0"/>
        <function-ref name="isInput" scoped="" ref="0x4045c69c"/>
        <function-ref name="toggle" scoped="" ref="0x4045c778"/>
        <function-ref name="isOutput" scoped="" ref="0x4045c854"/>
        <function-ref name="get" scoped="" ref="0x4045c930"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045ca0c"/>
        <function-ref name="set" scoped="" ref="0x4045cae8"/>
        <function-ref name="clr" scoped="" ref="0x4045cbc4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40464010" loc="51:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40464010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404641d0"/>
        <function-ref name="isInput" scoped="" ref="0x404642ac"/>
        <function-ref name="toggle" scoped="" ref="0x40464388"/>
        <function-ref name="isOutput" scoped="" ref="0x40464464"/>
        <function-ref name="get" scoped="" ref="0x40464540"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046461c"/>
        <function-ref name="set" scoped="" ref="0x404646f8"/>
        <function-ref name="clr" scoped="" ref="0x404647d4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f32e38" loc="46:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f32e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f2d010"/>
        <function-ref name="isInput" scoped="" ref="0x40f2d0ec"/>
        <function-ref name="toggle" scoped="" ref="0x40f2d1c8"/>
        <function-ref name="isOutput" scoped="" ref="0x40f2d2a4"/>
        <function-ref name="get" scoped="" ref="0x40f2d380"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f2d45c"/>
        <function-ref name="set" scoped="" ref="0x40f2d538"/>
        <function-ref name="clr" scoped="" ref="0x40f2d614"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f2c710" loc="46:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f2c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f2c8d0"/>
        <function-ref name="isInput" scoped="" ref="0x40f2c9ac"/>
        <function-ref name="toggle" scoped="" ref="0x40f2ca88"/>
        <function-ref name="isOutput" scoped="" ref="0x40f2cb64"/>
        <function-ref name="get" scoped="" ref="0x40f2cc40"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f2cd1c"/>
        <function-ref name="set" scoped="" ref="0x40f2cdf8"/>
        <function-ref name="clr" scoped="" ref="0x40f2ced4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f2a010" loc="46:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f2a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f2a1d0"/>
        <function-ref name="isInput" scoped="" ref="0x40f2a2ac"/>
        <function-ref name="toggle" scoped="" ref="0x40f2a388"/>
        <function-ref name="isOutput" scoped="" ref="0x40f2a464"/>
        <function-ref name="get" scoped="" ref="0x40f2a540"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f2a61c"/>
        <function-ref name="set" scoped="" ref="0x40f2a6f8"/>
        <function-ref name="clr" scoped="" ref="0x40f2a7d4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f298b8" loc="46:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f298b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f29a78"/>
        <function-ref name="isInput" scoped="" ref="0x40f29b54"/>
        <function-ref name="toggle" scoped="" ref="0x40f29c30"/>
        <function-ref name="isOutput" scoped="" ref="0x40f29d0c"/>
        <function-ref name="get" scoped="" ref="0x40f29de8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f29ec4"/>
        <function-ref name="set" scoped="" ref="0x40f5e010"/>
        <function-ref name="clr" scoped="" ref="0x40f5e0ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f5d21c" loc="46:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f5d21c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f5d3dc"/>
        <function-ref name="isInput" scoped="" ref="0x40f5d4b8"/>
        <function-ref name="toggle" scoped="" ref="0x40f5d594"/>
        <function-ref name="isOutput" scoped="" ref="0x40f5d670"/>
        <function-ref name="get" scoped="" ref="0x40f5d74c"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f5d828"/>
        <function-ref name="set" scoped="" ref="0x40f5d904"/>
        <function-ref name="clr" scoped="" ref="0x40f5d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f5caec" loc="46:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f5caec"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f5ccac"/>
        <function-ref name="isInput" scoped="" ref="0x40f5cd88"/>
        <function-ref name="toggle" scoped="" ref="0x40f5ce64"/>
        <function-ref name="isOutput" scoped="" ref="0x40f5b010"/>
        <function-ref name="get" scoped="" ref="0x40f5b0ec"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f5b1c8"/>
        <function-ref name="set" scoped="" ref="0x40f5b2a4"/>
        <function-ref name="clr" scoped="" ref="0x40f5b380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f5a514" loc="46:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f5a514"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f5a6d4"/>
        <function-ref name="isInput" scoped="" ref="0x40f5a7b0"/>
        <function-ref name="toggle" scoped="" ref="0x40f5a88c"/>
        <function-ref name="isOutput" scoped="" ref="0x40f5a968"/>
        <function-ref name="get" scoped="" ref="0x40f5aa44"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f5ab20"/>
        <function-ref name="set" scoped="" ref="0x40f5abfc"/>
        <function-ref name="clr" scoped="" ref="0x40f5acd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f59e8c" loc="46:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f59e8c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f5806c"/>
        <function-ref name="isInput" scoped="" ref="0x40f58148"/>
        <function-ref name="toggle" scoped="" ref="0x40f58224"/>
        <function-ref name="isOutput" scoped="" ref="0x40f58300"/>
        <function-ref name="get" scoped="" ref="0x40f583dc"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f584b8"/>
        <function-ref name="set" scoped="" ref="0x40f58594"/>
        <function-ref name="clr" scoped="" ref="0x40f58670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404604dc" loc="46:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404604dc"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046069c"/>
        <function-ref name="isInput" scoped="" ref="0x40460778"/>
        <function-ref name="toggle" scoped="" ref="0x40460854"/>
        <function-ref name="isOutput" scoped="" ref="0x40460930"/>
        <function-ref name="get" scoped="" ref="0x40460a0c"/>
        <function-ref name="makeOutput" scoped="" ref="0x40460ae8"/>
        <function-ref name="set" scoped="" ref="0x40460bc4"/>
        <function-ref name="clr" scoped="" ref="0x40460ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4046816c" loc="49:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4046816c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046832c"/>
        <function-ref name="isInput" scoped="" ref="0x40468408"/>
        <function-ref name="toggle" scoped="" ref="0x404684e4"/>
        <function-ref name="isOutput" scoped="" ref="0x404685c0"/>
        <function-ref name="get" scoped="" ref="0x4046869c"/>
        <function-ref name="makeOutput" scoped="" ref="0x40468778"/>
        <function-ref name="set" scoped="" ref="0x40468854"/>
        <function-ref name="clr" scoped="" ref="0x40468930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4046121c" loc="44:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4046121c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404613dc"/>
        <function-ref name="isInput" scoped="" ref="0x404614b8"/>
        <function-ref name="toggle" scoped="" ref="0x40461594"/>
        <function-ref name="isOutput" scoped="" ref="0x40461670"/>
        <function-ref name="get" scoped="" ref="0x4046174c"/>
        <function-ref name="makeOutput" scoped="" ref="0x40461828"/>
        <function-ref name="set" scoped="" ref="0x40461904"/>
        <function-ref name="clr" scoped="" ref="0x404619e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40460dfc" loc="47:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40460dfc"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40469010"/>
        <function-ref name="isInput" scoped="" ref="0x404690ec"/>
        <function-ref name="toggle" scoped="" ref="0x404691c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404692a4"/>
        <function-ref name="get" scoped="" ref="0x40469380"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046945c"/>
        <function-ref name="set" scoped="" ref="0x40469538"/>
        <function-ref name="clr" scoped="" ref="0x40469614"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40468a8c" loc="50:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40468a8c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40468c4c"/>
        <function-ref name="isInput" scoped="" ref="0x40468d28"/>
        <function-ref name="toggle" scoped="" ref="0x40468e04"/>
        <function-ref name="isOutput" scoped="" ref="0x40468ee0"/>
        <function-ref name="get" scoped="" ref="0x40466010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404660ec"/>
        <function-ref name="set" scoped="" ref="0x404661c8"/>
        <function-ref name="clr" scoped="" ref="0x404662a4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40461b3c" loc="45:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40461b3c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40461cfc"/>
        <function-ref name="isInput" scoped="" ref="0x40461dd8"/>
        <function-ref name="toggle" scoped="" ref="0x40461eb4"/>
        <function-ref name="isOutput" scoped="" ref="0x40460010"/>
        <function-ref name="get" scoped="" ref="0x404600ec"/>
        <function-ref name="makeOutput" scoped="" ref="0x404601c8"/>
        <function-ref name="set" scoped="" ref="0x404602a4"/>
        <function-ref name="clr" scoped="" ref="0x40460380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40469770" loc="48:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40469770"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40469930"/>
        <function-ref name="isInput" scoped="" ref="0x40469a0c"/>
        <function-ref name="toggle" scoped="" ref="0x40469ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40469bc4"/>
        <function-ref name="get" scoped="" ref="0x40469ca0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40469d7c"/>
        <function-ref name="set" scoped="" ref="0x40469e58"/>
        <function-ref name="clr" scoped="" ref="0x40468010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40466400" loc="51:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40466400"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404665c0"/>
        <function-ref name="isInput" scoped="" ref="0x4046669c"/>
        <function-ref name="toggle" scoped="" ref="0x40466778"/>
        <function-ref name="isOutput" scoped="" ref="0x40466854"/>
        <function-ref name="get" scoped="" ref="0x40466930"/>
        <function-ref name="makeOutput" scoped="" ref="0x40466a0c"/>
        <function-ref name="set" scoped="" ref="0x40466ae8"/>
        <function-ref name="clr" scoped="" ref="0x40466bc4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f67e38" loc="46:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f67e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f63010"/>
        <function-ref name="isInput" scoped="" ref="0x40f630ec"/>
        <function-ref name="toggle" scoped="" ref="0x40f631c8"/>
        <function-ref name="isOutput" scoped="" ref="0x40f632a4"/>
        <function-ref name="get" scoped="" ref="0x40f63380"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f6345c"/>
        <function-ref name="set" scoped="" ref="0x40f63538"/>
        <function-ref name="clr" scoped="" ref="0x40f63614"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f62710" loc="46:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f62710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f628d0"/>
        <function-ref name="isInput" scoped="" ref="0x40f629ac"/>
        <function-ref name="toggle" scoped="" ref="0x40f62a88"/>
        <function-ref name="isOutput" scoped="" ref="0x40f62b64"/>
        <function-ref name="get" scoped="" ref="0x40f62c40"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f62d1c"/>
        <function-ref name="set" scoped="" ref="0x40f62df8"/>
        <function-ref name="clr" scoped="" ref="0x40f62ed4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f60010" loc="46:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f60010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f601d0"/>
        <function-ref name="isInput" scoped="" ref="0x40f602ac"/>
        <function-ref name="toggle" scoped="" ref="0x40f60388"/>
        <function-ref name="isOutput" scoped="" ref="0x40f60464"/>
        <function-ref name="get" scoped="" ref="0x40f60540"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f6061c"/>
        <function-ref name="set" scoped="" ref="0x40f606f8"/>
        <function-ref name="clr" scoped="" ref="0x40f607d4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f5f8b8" loc="46:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f5f8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f5fa78"/>
        <function-ref name="isInput" scoped="" ref="0x40f5fb54"/>
        <function-ref name="toggle" scoped="" ref="0x40f5fc30"/>
        <function-ref name="isOutput" scoped="" ref="0x40f5fd0c"/>
        <function-ref name="get" scoped="" ref="0x40f5fde8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f5fec4"/>
        <function-ref name="set" scoped="" ref="0x40f94010"/>
        <function-ref name="clr" scoped="" ref="0x40f940ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f9321c" loc="46:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f9321c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f933dc"/>
        <function-ref name="isInput" scoped="" ref="0x40f934b8"/>
        <function-ref name="toggle" scoped="" ref="0x40f93594"/>
        <function-ref name="isOutput" scoped="" ref="0x40f93670"/>
        <function-ref name="get" scoped="" ref="0x40f9374c"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f93828"/>
        <function-ref name="set" scoped="" ref="0x40f93904"/>
        <function-ref name="clr" scoped="" ref="0x40f939e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f92aec" loc="46:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f92aec"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f92cac"/>
        <function-ref name="isInput" scoped="" ref="0x40f92d88"/>
        <function-ref name="toggle" scoped="" ref="0x40f92e64"/>
        <function-ref name="isOutput" scoped="" ref="0x40f91010"/>
        <function-ref name="get" scoped="" ref="0x40f910ec"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f911c8"/>
        <function-ref name="set" scoped="" ref="0x40f912a4"/>
        <function-ref name="clr" scoped="" ref="0x40f91380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f90514" loc="46:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f90514"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f906d4"/>
        <function-ref name="isInput" scoped="" ref="0x40f907b0"/>
        <function-ref name="toggle" scoped="" ref="0x40f9088c"/>
        <function-ref name="isOutput" scoped="" ref="0x40f90968"/>
        <function-ref name="get" scoped="" ref="0x40f90a44"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f90b20"/>
        <function-ref name="set" scoped="" ref="0x40f90bfc"/>
        <function-ref name="clr" scoped="" ref="0x40f90cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f8fe8c" loc="46:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f8fe8c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f8e06c"/>
        <function-ref name="isInput" scoped="" ref="0x40f8e148"/>
        <function-ref name="toggle" scoped="" ref="0x40f8e224"/>
        <function-ref name="isOutput" scoped="" ref="0x40f8e300"/>
        <function-ref name="get" scoped="" ref="0x40f8e3dc"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f8e4b8"/>
        <function-ref name="set" scoped="" ref="0x40f8e594"/>
        <function-ref name="clr" scoped="" ref="0x40f8e670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4046c930" loc="46:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4046c930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046caf0"/>
        <function-ref name="isInput" scoped="" ref="0x4046cbcc"/>
        <function-ref name="toggle" scoped="" ref="0x4046cca8"/>
        <function-ref name="isOutput" scoped="" ref="0x4046cd84"/>
        <function-ref name="get" scoped="" ref="0x4046ce60"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046b010"/>
        <function-ref name="set" scoped="" ref="0x4046b0ec"/>
        <function-ref name="clr" scoped="" ref="0x4046b1c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4046a5b8" loc="49:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4046a5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046a778"/>
        <function-ref name="isInput" scoped="" ref="0x4046a854"/>
        <function-ref name="toggle" scoped="" ref="0x4046a930"/>
        <function-ref name="isOutput" scoped="" ref="0x4046aa0c"/>
        <function-ref name="get" scoped="" ref="0x4046aae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046abc4"/>
        <function-ref name="set" scoped="" ref="0x4046aca0"/>
        <function-ref name="clr" scoped="" ref="0x4046ad7c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4046d61c" loc="44:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4046d61c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046d7dc"/>
        <function-ref name="isInput" scoped="" ref="0x4046d8b8"/>
        <function-ref name="toggle" scoped="" ref="0x4046d994"/>
        <function-ref name="isOutput" scoped="" ref="0x4046da70"/>
        <function-ref name="get" scoped="" ref="0x4046db4c"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046dc28"/>
        <function-ref name="set" scoped="" ref="0x4046dd04"/>
        <function-ref name="clr" scoped="" ref="0x4046dde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4046b324" loc="47:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4046b324"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046b4e4"/>
        <function-ref name="isInput" scoped="" ref="0x4046b5c0"/>
        <function-ref name="toggle" scoped="" ref="0x4046b69c"/>
        <function-ref name="isOutput" scoped="" ref="0x4046b778"/>
        <function-ref name="get" scoped="" ref="0x4046b854"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046b930"/>
        <function-ref name="set" scoped="" ref="0x4046ba0c"/>
        <function-ref name="clr" scoped="" ref="0x4046bae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4046aed8" loc="50:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4046aed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404730b8"/>
        <function-ref name="isInput" scoped="" ref="0x40473194"/>
        <function-ref name="toggle" scoped="" ref="0x40473270"/>
        <function-ref name="isOutput" scoped="" ref="0x4047334c"/>
        <function-ref name="get" scoped="" ref="0x40473428"/>
        <function-ref name="makeOutput" scoped="" ref="0x40473504"/>
        <function-ref name="set" scoped="" ref="0x404735e0"/>
        <function-ref name="clr" scoped="" ref="0x404736bc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4046c010" loc="45:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4046c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046c1d0"/>
        <function-ref name="isInput" scoped="" ref="0x4046c2ac"/>
        <function-ref name="toggle" scoped="" ref="0x4046c388"/>
        <function-ref name="isOutput" scoped="" ref="0x4046c464"/>
        <function-ref name="get" scoped="" ref="0x4046c540"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046c61c"/>
        <function-ref name="set" scoped="" ref="0x4046c6f8"/>
        <function-ref name="clr" scoped="" ref="0x4046c7d4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4046bc44" loc="48:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4046bc44"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046be04"/>
        <function-ref name="isInput" scoped="" ref="0x4046bee0"/>
        <function-ref name="toggle" scoped="" ref="0x4046a010"/>
        <function-ref name="isOutput" scoped="" ref="0x4046a0ec"/>
        <function-ref name="get" scoped="" ref="0x4046a1c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046a2a4"/>
        <function-ref name="set" scoped="" ref="0x4046a380"/>
        <function-ref name="clr" scoped="" ref="0x4046a45c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40473818" loc="51:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40473818"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404739d8"/>
        <function-ref name="isInput" scoped="" ref="0x40473ab4"/>
        <function-ref name="toggle" scoped="" ref="0x40473b90"/>
        <function-ref name="isOutput" scoped="" ref="0x40473c6c"/>
        <function-ref name="get" scoped="" ref="0x40473d48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40473e24"/>
        <function-ref name="set" scoped="" ref="0x40473f00"/>
        <function-ref name="clr" scoped="" ref="0x40472010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f9ee38" loc="46:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f9ee38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f9a010"/>
        <function-ref name="isInput" scoped="" ref="0x40f9a0ec"/>
        <function-ref name="toggle" scoped="" ref="0x40f9a1c8"/>
        <function-ref name="isOutput" scoped="" ref="0x40f9a2a4"/>
        <function-ref name="get" scoped="" ref="0x40f9a380"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f9a45c"/>
        <function-ref name="set" scoped="" ref="0x40f9a538"/>
        <function-ref name="clr" scoped="" ref="0x40f9a614"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f99710" loc="46:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f99710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f998d0"/>
        <function-ref name="isInput" scoped="" ref="0x40f999ac"/>
        <function-ref name="toggle" scoped="" ref="0x40f99a88"/>
        <function-ref name="isOutput" scoped="" ref="0x40f99b64"/>
        <function-ref name="get" scoped="" ref="0x40f99c40"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f99d1c"/>
        <function-ref name="set" scoped="" ref="0x40f99df8"/>
        <function-ref name="clr" scoped="" ref="0x40f99ed4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f97010" loc="46:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f97010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f971d0"/>
        <function-ref name="isInput" scoped="" ref="0x40f972ac"/>
        <function-ref name="toggle" scoped="" ref="0x40f97388"/>
        <function-ref name="isOutput" scoped="" ref="0x40f97464"/>
        <function-ref name="get" scoped="" ref="0x40f97540"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f9761c"/>
        <function-ref name="set" scoped="" ref="0x40f976f8"/>
        <function-ref name="clr" scoped="" ref="0x40f977d4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f968b8" loc="46:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f968b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f96a78"/>
        <function-ref name="isInput" scoped="" ref="0x40f96b54"/>
        <function-ref name="toggle" scoped="" ref="0x40f96c30"/>
        <function-ref name="isOutput" scoped="" ref="0x40f96d0c"/>
        <function-ref name="get" scoped="" ref="0x40f96de8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f96ec4"/>
        <function-ref name="set" scoped="" ref="0x40f95010"/>
        <function-ref name="clr" scoped="" ref="0x40f950ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fcc21c" loc="46:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fcc21c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fcc3dc"/>
        <function-ref name="isInput" scoped="" ref="0x40fcc4b8"/>
        <function-ref name="toggle" scoped="" ref="0x40fcc594"/>
        <function-ref name="isOutput" scoped="" ref="0x40fcc670"/>
        <function-ref name="get" scoped="" ref="0x40fcc74c"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fcc828"/>
        <function-ref name="set" scoped="" ref="0x40fcc904"/>
        <function-ref name="clr" scoped="" ref="0x40fcc9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fcbaec" loc="46:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fcbaec"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fcbcac"/>
        <function-ref name="isInput" scoped="" ref="0x40fcbd88"/>
        <function-ref name="toggle" scoped="" ref="0x40fcbe64"/>
        <function-ref name="isOutput" scoped="" ref="0x40fca010"/>
        <function-ref name="get" scoped="" ref="0x40fca0ec"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fca1c8"/>
        <function-ref name="set" scoped="" ref="0x40fca2a4"/>
        <function-ref name="clr" scoped="" ref="0x40fca380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fc9514" loc="46:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fc9514"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fc96d4"/>
        <function-ref name="isInput" scoped="" ref="0x40fc97b0"/>
        <function-ref name="toggle" scoped="" ref="0x40fc988c"/>
        <function-ref name="isOutput" scoped="" ref="0x40fc9968"/>
        <function-ref name="get" scoped="" ref="0x40fc9a44"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fc9b20"/>
        <function-ref name="set" scoped="" ref="0x40fc9bfc"/>
        <function-ref name="clr" scoped="" ref="0x40fc9cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fc8e8c" loc="46:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fc8e8c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fc706c"/>
        <function-ref name="isInput" scoped="" ref="0x40fc7148"/>
        <function-ref name="toggle" scoped="" ref="0x40fc7224"/>
        <function-ref name="isOutput" scoped="" ref="0x40fc7300"/>
        <function-ref name="get" scoped="" ref="0x40fc73dc"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fc74b8"/>
        <function-ref name="set" scoped="" ref="0x40fc7594"/>
        <function-ref name="clr" scoped="" ref="0x40fc7670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40478d20" loc="46:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40478d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40478ee0"/>
        <function-ref name="isInput" scoped="" ref="0x40477010"/>
        <function-ref name="toggle" scoped="" ref="0x404770ec"/>
        <function-ref name="isOutput" scoped="" ref="0x404771c8"/>
        <function-ref name="get" scoped="" ref="0x404772a4"/>
        <function-ref name="makeOutput" scoped="" ref="0x40477380"/>
        <function-ref name="set" scoped="" ref="0x4047745c"/>
        <function-ref name="clr" scoped="" ref="0x40477538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40476930" loc="49:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40476930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40476af0"/>
        <function-ref name="isInput" scoped="" ref="0x40476bcc"/>
        <function-ref name="toggle" scoped="" ref="0x40476ca8"/>
        <function-ref name="isOutput" scoped="" ref="0x40476d84"/>
        <function-ref name="get" scoped="" ref="0x40476e60"/>
        <function-ref name="makeOutput" scoped="" ref="0x40475010"/>
        <function-ref name="set" scoped="" ref="0x404750ec"/>
        <function-ref name="clr" scoped="" ref="0x404751c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4046fa40" loc="44:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4046fa40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046fc00"/>
        <function-ref name="isInput" scoped="" ref="0x4046fcdc"/>
        <function-ref name="toggle" scoped="" ref="0x4046fdb8"/>
        <function-ref name="isOutput" scoped="" ref="0x4046fe94"/>
        <function-ref name="get" scoped="" ref="0x40478010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404780ec"/>
        <function-ref name="set" scoped="" ref="0x404781c8"/>
        <function-ref name="clr" scoped="" ref="0x404782a4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40477694" loc="47:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40477694"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40477854"/>
        <function-ref name="isInput" scoped="" ref="0x40477930"/>
        <function-ref name="toggle" scoped="" ref="0x40477a0c"/>
        <function-ref name="isOutput" scoped="" ref="0x40477ae8"/>
        <function-ref name="get" scoped="" ref="0x40477bc4"/>
        <function-ref name="makeOutput" scoped="" ref="0x40477ca0"/>
        <function-ref name="set" scoped="" ref="0x40477d7c"/>
        <function-ref name="clr" scoped="" ref="0x40477e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40475324" loc="50:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40475324"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404754e4"/>
        <function-ref name="isInput" scoped="" ref="0x404755c0"/>
        <function-ref name="toggle" scoped="" ref="0x4047569c"/>
        <function-ref name="isOutput" scoped="" ref="0x40475778"/>
        <function-ref name="get" scoped="" ref="0x40475854"/>
        <function-ref name="makeOutput" scoped="" ref="0x40475930"/>
        <function-ref name="set" scoped="" ref="0x40475a0c"/>
        <function-ref name="clr" scoped="" ref="0x40475ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40478400" loc="45:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40478400"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404785c0"/>
        <function-ref name="isInput" scoped="" ref="0x4047869c"/>
        <function-ref name="toggle" scoped="" ref="0x40478778"/>
        <function-ref name="isOutput" scoped="" ref="0x40478854"/>
        <function-ref name="get" scoped="" ref="0x40478930"/>
        <function-ref name="makeOutput" scoped="" ref="0x40478a0c"/>
        <function-ref name="set" scoped="" ref="0x40478ae8"/>
        <function-ref name="clr" scoped="" ref="0x40478bc4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40476010" loc="48:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40476010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404761d0"/>
        <function-ref name="isInput" scoped="" ref="0x404762ac"/>
        <function-ref name="toggle" scoped="" ref="0x40476388"/>
        <function-ref name="isOutput" scoped="" ref="0x40476464"/>
        <function-ref name="get" scoped="" ref="0x40476540"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047661c"/>
        <function-ref name="set" scoped="" ref="0x404766f8"/>
        <function-ref name="clr" scoped="" ref="0x404767d4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40475c44" loc="51:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40475c44"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40475e04"/>
        <function-ref name="isInput" scoped="" ref="0x40475ee0"/>
        <function-ref name="toggle" scoped="" ref="0x40474010"/>
        <function-ref name="isOutput" scoped="" ref="0x404740ec"/>
        <function-ref name="get" scoped="" ref="0x404741c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404742a4"/>
        <function-ref name="set" scoped="" ref="0x40474380"/>
        <function-ref name="clr" scoped="" ref="0x4047445c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fd8e38" loc="46:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fd8e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fd4010"/>
        <function-ref name="isInput" scoped="" ref="0x40fd40ec"/>
        <function-ref name="toggle" scoped="" ref="0x40fd41c8"/>
        <function-ref name="isOutput" scoped="" ref="0x40fd42a4"/>
        <function-ref name="get" scoped="" ref="0x40fd4380"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fd445c"/>
        <function-ref name="set" scoped="" ref="0x40fd4538"/>
        <function-ref name="clr" scoped="" ref="0x40fd4614"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fd3710" loc="46:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fd3710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fd38d0"/>
        <function-ref name="isInput" scoped="" ref="0x40fd39ac"/>
        <function-ref name="toggle" scoped="" ref="0x40fd3a88"/>
        <function-ref name="isOutput" scoped="" ref="0x40fd3b64"/>
        <function-ref name="get" scoped="" ref="0x40fd3c40"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fd3d1c"/>
        <function-ref name="set" scoped="" ref="0x40fd3df8"/>
        <function-ref name="clr" scoped="" ref="0x40fd3ed4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fd1010" loc="46:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fd1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fd11d0"/>
        <function-ref name="isInput" scoped="" ref="0x40fd12ac"/>
        <function-ref name="toggle" scoped="" ref="0x40fd1388"/>
        <function-ref name="isOutput" scoped="" ref="0x40fd1464"/>
        <function-ref name="get" scoped="" ref="0x40fd1540"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fd161c"/>
        <function-ref name="set" scoped="" ref="0x40fd16f8"/>
        <function-ref name="clr" scoped="" ref="0x40fd17d4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fd08b8" loc="46:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fd08b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fd0a78"/>
        <function-ref name="isInput" scoped="" ref="0x40fd0b54"/>
        <function-ref name="toggle" scoped="" ref="0x40fd0c30"/>
        <function-ref name="isOutput" scoped="" ref="0x40fd0d0c"/>
        <function-ref name="get" scoped="" ref="0x40fd0de8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fd0ec4"/>
        <function-ref name="set" scoped="" ref="0x40fcf010"/>
        <function-ref name="clr" scoped="" ref="0x40fcf0ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fce21c" loc="46:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fce21c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fce3dc"/>
        <function-ref name="isInput" scoped="" ref="0x40fce4b8"/>
        <function-ref name="toggle" scoped="" ref="0x40fce594"/>
        <function-ref name="isOutput" scoped="" ref="0x40fce670"/>
        <function-ref name="get" scoped="" ref="0x40fce74c"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fce828"/>
        <function-ref name="set" scoped="" ref="0x40fce904"/>
        <function-ref name="clr" scoped="" ref="0x40fce9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41004aec" loc="46:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41004aec"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41004cac"/>
        <function-ref name="isInput" scoped="" ref="0x41004d88"/>
        <function-ref name="toggle" scoped="" ref="0x41004e64"/>
        <function-ref name="isOutput" scoped="" ref="0x41003010"/>
        <function-ref name="get" scoped="" ref="0x410030ec"/>
        <function-ref name="makeOutput" scoped="" ref="0x410031c8"/>
        <function-ref name="set" scoped="" ref="0x410032a4"/>
        <function-ref name="clr" scoped="" ref="0x41003380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41002514" loc="46:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41002514"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410026d4"/>
        <function-ref name="isInput" scoped="" ref="0x410027b0"/>
        <function-ref name="toggle" scoped="" ref="0x4100288c"/>
        <function-ref name="isOutput" scoped="" ref="0x41002968"/>
        <function-ref name="get" scoped="" ref="0x41002a44"/>
        <function-ref name="makeOutput" scoped="" ref="0x41002b20"/>
        <function-ref name="set" scoped="" ref="0x41002bfc"/>
        <function-ref name="clr" scoped="" ref="0x41002cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41001e8c" loc="46:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41001e8c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4100006c"/>
        <function-ref name="isInput" scoped="" ref="0x41000148"/>
        <function-ref name="toggle" scoped="" ref="0x41000224"/>
        <function-ref name="isOutput" scoped="" ref="0x41000300"/>
        <function-ref name="get" scoped="" ref="0x410003dc"/>
        <function-ref name="makeOutput" scoped="" ref="0x410004b8"/>
        <function-ref name="set" scoped="" ref="0x41000594"/>
        <function-ref name="clr" scoped="" ref="0x41000670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4047a010" loc="46:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4047a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047a1d0"/>
        <function-ref name="isInput" scoped="" ref="0x4047a2ac"/>
        <function-ref name="toggle" scoped="" ref="0x4047a388"/>
        <function-ref name="isOutput" scoped="" ref="0x4047a464"/>
        <function-ref name="get" scoped="" ref="0x4047a540"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047a61c"/>
        <function-ref name="set" scoped="" ref="0x4047a6f8"/>
        <function-ref name="clr" scoped="" ref="0x4047a7d4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40483c44" loc="49:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40483c44"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40483e04"/>
        <function-ref name="isInput" scoped="" ref="0x40483ee0"/>
        <function-ref name="toggle" scoped="" ref="0x40482010"/>
        <function-ref name="isOutput" scoped="" ref="0x404820ec"/>
        <function-ref name="get" scoped="" ref="0x404821c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404822a4"/>
        <function-ref name="set" scoped="" ref="0x40482380"/>
        <function-ref name="clr" scoped="" ref="0x4048245c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4047ccb4" loc="44:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4047ccb4"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047ce74"/>
        <function-ref name="isInput" scoped="" ref="0x4047b010"/>
        <function-ref name="toggle" scoped="" ref="0x4047b0ec"/>
        <function-ref name="isOutput" scoped="" ref="0x4047b1c8"/>
        <function-ref name="get" scoped="" ref="0x4047b2a4"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047b380"/>
        <function-ref name="set" scoped="" ref="0x4047b45c"/>
        <function-ref name="clr" scoped="" ref="0x4047b538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4047a930" loc="47:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4047a930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047aaf0"/>
        <function-ref name="isInput" scoped="" ref="0x4047abcc"/>
        <function-ref name="toggle" scoped="" ref="0x4047aca8"/>
        <function-ref name="isOutput" scoped="" ref="0x4047ad84"/>
        <function-ref name="get" scoped="" ref="0x4047ae60"/>
        <function-ref name="makeOutput" scoped="" ref="0x40483010"/>
        <function-ref name="set" scoped="" ref="0x404830ec"/>
        <function-ref name="clr" scoped="" ref="0x404831c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404825b8" loc="50:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404825b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40482778"/>
        <function-ref name="isInput" scoped="" ref="0x40482854"/>
        <function-ref name="toggle" scoped="" ref="0x40482930"/>
        <function-ref name="isOutput" scoped="" ref="0x40482a0c"/>
        <function-ref name="get" scoped="" ref="0x40482ae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40482bc4"/>
        <function-ref name="set" scoped="" ref="0x40482ca0"/>
        <function-ref name="clr" scoped="" ref="0x40482d7c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4047b694" loc="45:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4047b694"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047b854"/>
        <function-ref name="isInput" scoped="" ref="0x4047b930"/>
        <function-ref name="toggle" scoped="" ref="0x4047ba0c"/>
        <function-ref name="isOutput" scoped="" ref="0x4047bae8"/>
        <function-ref name="get" scoped="" ref="0x4047bbc4"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047bca0"/>
        <function-ref name="set" scoped="" ref="0x4047bd7c"/>
        <function-ref name="clr" scoped="" ref="0x4047be58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40483324" loc="48:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40483324"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404834e4"/>
        <function-ref name="isInput" scoped="" ref="0x404835c0"/>
        <function-ref name="toggle" scoped="" ref="0x4048369c"/>
        <function-ref name="isOutput" scoped="" ref="0x40483778"/>
        <function-ref name="get" scoped="" ref="0x40483854"/>
        <function-ref name="makeOutput" scoped="" ref="0x40483930"/>
        <function-ref name="set" scoped="" ref="0x40483a0c"/>
        <function-ref name="clr" scoped="" ref="0x40483ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40482ed8" loc="51:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40482ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404810b8"/>
        <function-ref name="isInput" scoped="" ref="0x40481194"/>
        <function-ref name="toggle" scoped="" ref="0x40481270"/>
        <function-ref name="isOutput" scoped="" ref="0x4048134c"/>
        <function-ref name="get" scoped="" ref="0x40481428"/>
        <function-ref name="makeOutput" scoped="" ref="0x40481504"/>
        <function-ref name="set" scoped="" ref="0x404815e0"/>
        <function-ref name="clr" scoped="" ref="0x404816bc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41013e38" loc="46:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41013e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4100e010"/>
        <function-ref name="isInput" scoped="" ref="0x4100e0ec"/>
        <function-ref name="toggle" scoped="" ref="0x4100e1c8"/>
        <function-ref name="isOutput" scoped="" ref="0x4100e2a4"/>
        <function-ref name="get" scoped="" ref="0x4100e380"/>
        <function-ref name="makeOutput" scoped="" ref="0x4100e45c"/>
        <function-ref name="set" scoped="" ref="0x4100e538"/>
        <function-ref name="clr" scoped="" ref="0x4100e614"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4100d710" loc="46:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4100d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4100d8d0"/>
        <function-ref name="isInput" scoped="" ref="0x4100d9ac"/>
        <function-ref name="toggle" scoped="" ref="0x4100da88"/>
        <function-ref name="isOutput" scoped="" ref="0x4100db64"/>
        <function-ref name="get" scoped="" ref="0x4100dc40"/>
        <function-ref name="makeOutput" scoped="" ref="0x4100dd1c"/>
        <function-ref name="set" scoped="" ref="0x4100ddf8"/>
        <function-ref name="clr" scoped="" ref="0x4100ded4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4100b010" loc="46:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4100b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4100b1d0"/>
        <function-ref name="isInput" scoped="" ref="0x4100b2ac"/>
        <function-ref name="toggle" scoped="" ref="0x4100b388"/>
        <function-ref name="isOutput" scoped="" ref="0x4100b464"/>
        <function-ref name="get" scoped="" ref="0x4100b540"/>
        <function-ref name="makeOutput" scoped="" ref="0x4100b61c"/>
        <function-ref name="set" scoped="" ref="0x4100b6f8"/>
        <function-ref name="clr" scoped="" ref="0x4100b7d4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4100a8b8" loc="46:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4100a8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4100aa78"/>
        <function-ref name="isInput" scoped="" ref="0x4100ab54"/>
        <function-ref name="toggle" scoped="" ref="0x4100ac30"/>
        <function-ref name="isOutput" scoped="" ref="0x4100ad0c"/>
        <function-ref name="get" scoped="" ref="0x4100ade8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4100aec4"/>
        <function-ref name="set" scoped="" ref="0x41009010"/>
        <function-ref name="clr" scoped="" ref="0x410090ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4100821c" loc="46:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4100821c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410083dc"/>
        <function-ref name="isInput" scoped="" ref="0x410084b8"/>
        <function-ref name="toggle" scoped="" ref="0x41008594"/>
        <function-ref name="isOutput" scoped="" ref="0x41008670"/>
        <function-ref name="get" scoped="" ref="0x4100874c"/>
        <function-ref name="makeOutput" scoped="" ref="0x41008828"/>
        <function-ref name="set" scoped="" ref="0x41008904"/>
        <function-ref name="clr" scoped="" ref="0x410089e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41007aec" loc="46:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41007aec"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41007cac"/>
        <function-ref name="isInput" scoped="" ref="0x41007d88"/>
        <function-ref name="toggle" scoped="" ref="0x41007e64"/>
        <function-ref name="isOutput" scoped="" ref="0x41006010"/>
        <function-ref name="get" scoped="" ref="0x410060ec"/>
        <function-ref name="makeOutput" scoped="" ref="0x410061c8"/>
        <function-ref name="set" scoped="" ref="0x410062a4"/>
        <function-ref name="clr" scoped="" ref="0x41006380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41005514" loc="46:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41005514"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410056d4"/>
        <function-ref name="isInput" scoped="" ref="0x410057b0"/>
        <function-ref name="toggle" scoped="" ref="0x4100588c"/>
        <function-ref name="isOutput" scoped="" ref="0x41005968"/>
        <function-ref name="get" scoped="" ref="0x41005a44"/>
        <function-ref name="makeOutput" scoped="" ref="0x41005b20"/>
        <function-ref name="set" scoped="" ref="0x41005bfc"/>
        <function-ref name="clr" scoped="" ref="0x41005cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4103ee8c" loc="46:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4103ee8c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4103d06c"/>
        <function-ref name="isInput" scoped="" ref="0x4103d148"/>
        <function-ref name="toggle" scoped="" ref="0x4103d224"/>
        <function-ref name="isOutput" scoped="" ref="0x4103d300"/>
        <function-ref name="get" scoped="" ref="0x4103d3dc"/>
        <function-ref name="makeOutput" scoped="" ref="0x4103d4b8"/>
        <function-ref name="set" scoped="" ref="0x4103d594"/>
        <function-ref name="clr" scoped="" ref="0x4103d670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4047e3ec" loc="47:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4047e3ec"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047e5ac"/>
        <function-ref name="isInput" scoped="" ref="0x4047e688"/>
        <function-ref name="toggle" scoped="" ref="0x4047e764"/>
        <function-ref name="isOutput" scoped="" ref="0x4047e840"/>
        <function-ref name="get" scoped="" ref="0x4047e91c"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047e9f8"/>
        <function-ref name="set" scoped="" ref="0x4047ead4"/>
        <function-ref name="clr" scoped="" ref="0x4047ebb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40494838" loc="47:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40494838"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404949f8"/>
        <function-ref name="isInput" scoped="" ref="0x40494ad4"/>
        <function-ref name="toggle" scoped="" ref="0x40494bb0"/>
        <function-ref name="isOutput" scoped="" ref="0x40494c8c"/>
        <function-ref name="get" scoped="" ref="0x40494d68"/>
        <function-ref name="makeOutput" scoped="" ref="0x40494e44"/>
        <function-ref name="set" scoped="" ref="0x40494f20"/>
        <function-ref name="clr" scoped="" ref="0x40493010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40492c7c" loc="47:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40492c7c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40492e3c"/>
        <function-ref name="isInput" scoped="" ref="0x40492f18"/>
        <function-ref name="toggle" scoped="" ref="0x40490010"/>
        <function-ref name="isOutput" scoped="" ref="0x404900ec"/>
        <function-ref name="get" scoped="" ref="0x404901c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404902a4"/>
        <function-ref name="set" scoped="" ref="0x40490380"/>
        <function-ref name="clr" scoped="" ref="0x4049045c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4049a0f4" loc="47:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4049a0f4"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4049a2b4"/>
        <function-ref name="isInput" scoped="" ref="0x4049a390"/>
        <function-ref name="toggle" scoped="" ref="0x4049a46c"/>
        <function-ref name="isOutput" scoped="" ref="0x4049a548"/>
        <function-ref name="get" scoped="" ref="0x4049a624"/>
        <function-ref name="makeOutput" scoped="" ref="0x4049a700"/>
        <function-ref name="set" scoped="" ref="0x4049a7dc"/>
        <function-ref name="clr" scoped="" ref="0x4049a8b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4049854c" loc="47:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4049854c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4049870c"/>
        <function-ref name="isInput" scoped="" ref="0x404987e8"/>
        <function-ref name="toggle" scoped="" ref="0x404988c4"/>
        <function-ref name="isOutput" scoped="" ref="0x404989a0"/>
        <function-ref name="get" scoped="" ref="0x40498a7c"/>
        <function-ref name="makeOutput" scoped="" ref="0x40498b58"/>
        <function-ref name="set" scoped="" ref="0x40498c34"/>
        <function-ref name="clr" scoped="" ref="0x40498d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404a1a20" loc="47:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404a1a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a1be0"/>
        <function-ref name="isInput" scoped="" ref="0x404a1cbc"/>
        <function-ref name="toggle" scoped="" ref="0x404a1d98"/>
        <function-ref name="isOutput" scoped="" ref="0x404a1e74"/>
        <function-ref name="get" scoped="" ref="0x404a0010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a00ec"/>
        <function-ref name="set" scoped="" ref="0x404a01c8"/>
        <function-ref name="clr" scoped="" ref="0x404a02a4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4049e010" loc="47:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4049e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4049e1d0"/>
        <function-ref name="isInput" scoped="" ref="0x4049e2ac"/>
        <function-ref name="toggle" scoped="" ref="0x4049e388"/>
        <function-ref name="isOutput" scoped="" ref="0x4049e464"/>
        <function-ref name="get" scoped="" ref="0x4049e540"/>
        <function-ref name="makeOutput" scoped="" ref="0x4049e61c"/>
        <function-ref name="set" scoped="" ref="0x4049e6f8"/>
        <function-ref name="clr" scoped="" ref="0x4049e7d4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4049c518" loc="47:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4049c518"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4049c6d8"/>
        <function-ref name="isInput" scoped="" ref="0x4049c7b4"/>
        <function-ref name="toggle" scoped="" ref="0x4049c890"/>
        <function-ref name="isOutput" scoped="" ref="0x4049c96c"/>
        <function-ref name="get" scoped="" ref="0x4049ca48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4049cb24"/>
        <function-ref name="set" scoped="" ref="0x4049cc00"/>
        <function-ref name="clr" scoped="" ref="0x4049ccdc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404a5984" loc="47:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404a5984"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a5b44"/>
        <function-ref name="isInput" scoped="" ref="0x404a5c20"/>
        <function-ref name="toggle" scoped="" ref="0x404a5cfc"/>
        <function-ref name="isOutput" scoped="" ref="0x404a5dd8"/>
        <function-ref name="get" scoped="" ref="0x404a5eb4"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a4010"/>
        <function-ref name="set" scoped="" ref="0x404a40ec"/>
        <function-ref name="clr" scoped="" ref="0x404a41c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404a3d50" loc="47:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404a3d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a3f10"/>
        <function-ref name="isInput" scoped="" ref="0x404a2010"/>
        <function-ref name="toggle" scoped="" ref="0x404a20ec"/>
        <function-ref name="isOutput" scoped="" ref="0x404a21c8"/>
        <function-ref name="get" scoped="" ref="0x404a22a4"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a2380"/>
        <function-ref name="set" scoped="" ref="0x404a245c"/>
        <function-ref name="clr" scoped="" ref="0x404a2538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404ac0f4" loc="47:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404ac0f4"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ac2b4"/>
        <function-ref name="isInput" scoped="" ref="0x404ac390"/>
        <function-ref name="toggle" scoped="" ref="0x404ac46c"/>
        <function-ref name="isOutput" scoped="" ref="0x404ac548"/>
        <function-ref name="get" scoped="" ref="0x404ac624"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ac700"/>
        <function-ref name="set" scoped="" ref="0x404ac7dc"/>
        <function-ref name="clr" scoped="" ref="0x404ac8b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404a9518" loc="47:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404a9518"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a96d8"/>
        <function-ref name="isInput" scoped="" ref="0x404a97b4"/>
        <function-ref name="toggle" scoped="" ref="0x404a9890"/>
        <function-ref name="isOutput" scoped="" ref="0x404a996c"/>
        <function-ref name="get" scoped="" ref="0x404a9a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a9b24"/>
        <function-ref name="set" scoped="" ref="0x404a9c00"/>
        <function-ref name="clr" scoped="" ref="0x404a9cdc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404b3944" loc="47:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404b3944"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b3b04"/>
        <function-ref name="isInput" scoped="" ref="0x404b3be0"/>
        <function-ref name="toggle" scoped="" ref="0x404b3cbc"/>
        <function-ref name="isOutput" scoped="" ref="0x404b3d98"/>
        <function-ref name="get" scoped="" ref="0x404b3e74"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b2010"/>
        <function-ref name="set" scoped="" ref="0x404b20ec"/>
        <function-ref name="clr" scoped="" ref="0x404b21c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404cccc8" loc="27:/home/user/tinyos-main/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404cccc8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x4034479c"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x4034479c"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404cce88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x404cb0f8" loc="28:/home/user/tinyos-main/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x404cb0f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x404cb2b8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x404cb394"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x404cb470"/>
        <function-ref name="actualMicro" scoped="" ref="0x404cb54c"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x404cb628"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x404de990" loc="60:/home/user/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x404de990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404deb50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x403f6bfc" loc="57:/home/user/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x403f6bfc"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x403f6dbc"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x404de5ac" loc="59:/home/user/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x404de5ac"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404de76c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x404de010" loc="58:/home/user/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x404de010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404de1d0"/>
        <function-ref name="taskLoop" scoped="" ref="0x404de2ac"/>
        <function-ref name="runNextTask" scoped="" ref="0x404de388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x4034d368" loc="48:/home/user/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x4034d368"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4034d528"/>
        <function-ref name="runTask" scoped="" ref="0x4034d604"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x40347df8" loc="47:/home/user/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x40347df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40349010"/>
        <function-ref name="taskLoop" scoped="" ref="0x403490ec"/>
        <function-ref name="runNextTask" scoped="" ref="0x403491c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x403cd564" loc="56:/home/user/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x403cd564"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x403cd724"/>
        <function-ref name="runTask" scoped="" ref="0x403cd800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x403d21dc" loc="57:/home/user/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x403d21dc"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x403d239c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x403ced20" loc="55:/home/user/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x403ced20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403ceee0"/>
        <function-ref name="taskLoop" scoped="" ref="0x403cd010"/>
        <function-ref name="runNextTask" scoped="" ref="0x403cd0ec"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x403e0688" loc="54:/home/user/tinyos-main/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x403e0688"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x403e0848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x403dc414" loc="50:/home/user/tinyos-main/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x403dc414"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x403dc5d4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x403e1068" loc="51:/home/user/tinyos-main/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x403e1068"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x403e1228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x404e1a20" loc="46:/home/user/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x404e1a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x404e1be0"/>
        <function-ref name="rand32" scoped="" ref="0x404e1cbc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x404e25bc" loc="45:/home/user/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x404e25bc"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404e2b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x403f1428" loc="44:/home/user/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x403f1428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403f15e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x404eb45c" loc="48:/home/user/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x404eb45c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x404eb61c"/>
        <function-ref name="rand32" scoped="" ref="0x404eb6f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x404e4b48" loc="47:/home/user/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x404e4b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404eb1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404e4658" loc="46:/home/user/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404e4658"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404e4818"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x40539644" loc="19:sendAckC.nc">
      <component-ref qname="sendAckC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40539644"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40539804"/>
        <function-ref name="stopDone" scoped="" ref="0x405398e0"/>
        <function-ref name="start" scoped="" ref="0x405399bc"/>
        <function-ref name="stop" scoped="" ref="0x40539a98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendTimer" ref="0x405494e8" loc="23:sendAckC.nc">
      <component-ref qname="sendAckC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendTimer" scoped="" ref="0x405494e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aaec8"/>
            <typename><typedef-ref name="TMilli" ref="0x403a70c4"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40548f10"/>
        <function-ref name="fired" scoped="" ref="0x40548250"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40548910"/>
        <function-ref name="isOneShot" scoped="" ref="0x405486d0"/>
        <function-ref name="getdt" scoped="" ref="0x405473ac"/>
        <function-ref name="gett0" scoped="" ref="0x4054716c"/>
        <function-ref name="isRunning" scoped="" ref="0x40548490"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40549abc"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40548c10"/>
        <function-ref name="startOneShot" scoped="" ref="0x40549d24"/>
        <function-ref name="stop" scoped="" ref="0x40548010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x404e3e88" loc="14:sendAckC.nc">
      <component-ref qname="sendAckC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x404e3e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x404ec06c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40529098" loc="16:sendAckC.nc">
      <component-ref qname="sendAckC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40529098"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40529258"/>
        <function-ref name="payloadLength" scoped="" ref="0x40529334"/>
        <function-ref name="getPayload" scoped="" ref="0x40529410"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405294ec"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x405295c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x4053ddd0" loc="18:sendAckC.nc">
      <component-ref qname="sendAckC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4053ddd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4052d010"/>
        <function-ref name="getPayload" scoped="" ref="0x4052d0ec"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4052d1c8"/>
        <function-ref name="cancel" scoped="" ref="0x4052d2a4"/>
        <function-ref name="sendDone" scoped="" ref="0x4052d380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDataResp" ref="0x4054f6b0" loc="39:sendAckC.nc">
      <component-ref qname="sendAckC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDataResp" scoped="" ref="0x4054f6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4054f870"/>
        <function-ref name="runTask" scoped="" ref="0x4054f94c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x405475f0" loc="24:sendAckC.nc">
      <component-ref qname="sendAckC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x405475f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x405477b0"/>
        <function-ref name="rand32" scoped="" ref="0x4054788c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read" ref="0x40551d64" loc="25:sendAckC.nc">
      <component-ref qname="sendAckC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40551d64"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40546350"/>
        <function-ref name="readDone" scoped="" ref="0x40546590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendReq" ref="0x405525dc" loc="36:sendAckC.nc">
      <component-ref qname="sendAckC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendReq" scoped="" ref="0x405525dc"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4055281c"/>
        <function-ref name="runTask" scoped="" ref="0x405528f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x40544560" loc="20:sendAckC.nc">
      <component-ref qname="sendAckC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40544560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40544720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MilliTimer" ref="0x40534010" loc="21:sendAckC.nc">
      <component-ref qname="sendAckC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MilliTimer" scoped="" ref="0x40534010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aaec8"/>
            <typename><typedef-ref name="TMilli" ref="0x403a70c4"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4053ca90"/>
        <function-ref name="fired" scoped="" ref="0x40534cf4"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4053c490"/>
        <function-ref name="isOneShot" scoped="" ref="0x4053c250"/>
        <function-ref name="getdt" scoped="" ref="0x4053cf10"/>
        <function-ref name="gett0" scoped="" ref="0x4053ccd0"/>
        <function-ref name="isRunning" scoped="" ref="0x4053c010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x405345e4"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4053c790"/>
        <function-ref name="startOneShot" scoped="" ref="0x4053484c"/>
        <function-ref name="stop" scoped="" ref="0x40534ab4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x40533b34" loc="17:sendAckC.nc">
      <component-ref qname="sendAckC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40533b34"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40533cf4"/>
        <function-ref name="noAck" scoped="" ref="0x40533dd0"/>
        <function-ref name="wasAcked" scoped="" ref="0x40533eac"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MissingTimer" ref="0x4053e2c8" loc="22:sendAckC.nc">
      <component-ref qname="sendAckC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MissingTimer" scoped="" ref="0x4053e2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aaec8"/>
            <typename><typedef-ref name="TMilli" ref="0x403a70c4"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4054bcd0"/>
        <function-ref name="fired" scoped="" ref="0x4054b010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4054b6d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x4054b490"/>
        <function-ref name="getdt" scoped="" ref="0x4054916c"/>
        <function-ref name="gett0" scoped="" ref="0x4054bf10"/>
        <function-ref name="isRunning" scoped="" ref="0x4054b250"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4053e89c"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4054b9d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x4053eb04"/>
        <function-ref name="stop" scoped="" ref="0x4053ed6c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x4052fa34" loc="15:sendAckC.nc">
      <component-ref qname="sendAckC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4052fa34"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4052fbf4"/>
        <function-ref name="source" scoped="" ref="0x4052fcd0"/>
        <function-ref name="address" scoped="" ref="0x4052fdac"/>
        <function-ref name="destination" scoped="" ref="0x4052fe88"/>
        <function-ref name="setSource" scoped="" ref="0x404ef010"/>
        <function-ref name="setDestination" scoped="" ref="0x404ef0ec"/>
        <function-ref name="type" scoped="" ref="0x404ef1c8"/>
        <function-ref name="setType" scoped="" ref="0x404ef2a4"/>
        <function-ref name="isForMe" scoped="" ref="0x404ef380"/>
        <function-ref name="setGroup" scoped="" ref="0x404ef45c"/>
        <function-ref name="localGroup" scoped="" ref="0x404ef538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4057c698" loc="49:/home/user/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="sendAckAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4057c698"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4057c858"/>
        <function-ref name="getPayload" scoped="" ref="0x4057c934"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4057ca10"/>
        <function-ref name="cancel" scoped="" ref="0x4057caec"/>
        <function-ref name="sendDone" scoped="" ref="0x4057cbc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4057cd04" loc="50:/home/user/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="sendAckAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4057cd04"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4057cec4"/>
        <function-ref name="payloadLength" scoped="" ref="0x4057b010"/>
        <function-ref name="getPayload" scoped="" ref="0x4057b0ec"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4057b1c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4057b2a4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4057b3e0" loc="51:/home/user/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="sendAckAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4057b3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4057b5a0"/>
        <function-ref name="source" scoped="" ref="0x4057b67c"/>
        <function-ref name="address" scoped="" ref="0x4057b758"/>
        <function-ref name="destination" scoped="" ref="0x4057b834"/>
        <function-ref name="setSource" scoped="" ref="0x4057b910"/>
        <function-ref name="setDestination" scoped="" ref="0x4057b9ec"/>
        <function-ref name="type" scoped="" ref="0x4057bac8"/>
        <function-ref name="setType" scoped="" ref="0x4057bba4"/>
        <function-ref name="isForMe" scoped="" ref="0x4057bc80"/>
        <function-ref name="setGroup" scoped="" ref="0x4057bd5c"/>
        <function-ref name="localGroup" scoped="" ref="0x4057be38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40cb4010" loc="52:/home/user/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="sendAckAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40cb4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40cb41d0"/>
        <function-ref name="noAck" scoped="" ref="0x40cb42ac"/>
        <function-ref name="wasAcked" scoped="" ref="0x40cb4388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41089784" loc="49:/home/user/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="sendAckAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41089784"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41089944"/>
        <function-ref name="getPayload" scoped="" ref="0x41089a20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41089afc"/>
        <function-ref name="cancel" scoped="" ref="0x41089bd8"/>
        <function-ref name="sendDone" scoped="" ref="0x41089cb4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41089df0" loc="50:/home/user/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="sendAckAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41089df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41087010"/>
        <function-ref name="payloadLength" scoped="" ref="0x410870ec"/>
        <function-ref name="getPayload" scoped="" ref="0x410871c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410872a4"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41087380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x410874bc" loc="51:/home/user/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="sendAckAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x410874bc"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4108767c"/>
        <function-ref name="source" scoped="" ref="0x41087758"/>
        <function-ref name="address" scoped="" ref="0x41087834"/>
        <function-ref name="destination" scoped="" ref="0x41087910"/>
        <function-ref name="setSource" scoped="" ref="0x410879ec"/>
        <function-ref name="setDestination" scoped="" ref="0x41087ac8"/>
        <function-ref name="type" scoped="" ref="0x41087ba4"/>
        <function-ref name="setType" scoped="" ref="0x41087c80"/>
        <function-ref name="isForMe" scoped="" ref="0x41087d5c"/>
        <function-ref name="setGroup" scoped="" ref="0x41087e38"/>
        <function-ref name="localGroup" scoped="" ref="0x41087f14"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41085090" loc="52:/home/user/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="sendAckAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41085090"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41085250"/>
        <function-ref name="noAck" scoped="" ref="0x4108532c"/>
        <function-ref name="wasAcked" scoped="" ref="0x41085408"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41083a24" loc="44:/home/user/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="sendAckAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41083a24"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41083be4"/>
        <function-ref name="getPayload" scoped="" ref="0x41083cc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41083d9c"/>
        <function-ref name="cancel" scoped="" ref="0x41083e78"/>
        <function-ref name="sendDone" scoped="" ref="0x41080010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x4108017c" loc="46:/home/user/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="sendAckAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4108017c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4108033c"/>
        <function-ref name="getPayload" scoped="" ref="0x41080418"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410804f4"/>
        <function-ref name="cancel" scoped="" ref="0x410805d0"/>
        <function-ref name="sendDone" scoped="" ref="0x410806ac"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x410807e8" loc="47:/home/user/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="sendAckAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x410807e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x410809a8"/>
        <function-ref name="source" scoped="" ref="0x41080a84"/>
        <function-ref name="address" scoped="" ref="0x41080b60"/>
        <function-ref name="destination" scoped="" ref="0x41080c3c"/>
        <function-ref name="setSource" scoped="" ref="0x41080d18"/>
        <function-ref name="setDestination" scoped="" ref="0x41080df4"/>
        <function-ref name="type" scoped="" ref="0x41080ed0"/>
        <function-ref name="setType" scoped="" ref="0x4107f010"/>
        <function-ref name="isForMe" scoped="" ref="0x4107f0ec"/>
        <function-ref name="setGroup" scoped="" ref="0x4107f1c8"/>
        <function-ref name="localGroup" scoped="" ref="0x4107f2a4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x405927bc" loc="43:/home/user/tinyos-main/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x405927bc"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4059297c"/>
        <function-ref name="getPayload" scoped="" ref="0x40592a58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40592b34"/>
        <function-ref name="cancel" scoped="" ref="0x40592c10"/>
        <function-ref name="sendDone" scoped="" ref="0x40592cec"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x405b7d30" loc="48:/home/user/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x405b7d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x405187bc"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x405b7f00"/>
        <function-ref name="getPayload" scoped="" ref="0x405b6010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405b60ec"/>
        <function-ref name="cancel" scoped="" ref="0x405b61c8"/>
        <function-ref name="sendDone" scoped="" ref="0x405b62a4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x405b75f4" loc="46:/home/user/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x405b75f4"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x405b77c4"/>
        <function-ref name="getPayload" scoped="" ref="0x405b78a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405b797c"/>
        <function-ref name="cancel" scoped="" ref="0x405b7a58"/>
        <function-ref name="sendDone" scoped="" ref="0x405b7b34"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x405b5010" loc="50:/home/user/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x405b5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405b51d0"/>
        <function-ref name="payloadLength" scoped="" ref="0x405b52ac"/>
        <function-ref name="getPayload" scoped="" ref="0x405b5388"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405b5464"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x405b5540"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x405b56bc" loc="169:/home/user/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x405b56bc"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x405b587c"/>
        <function-ref name="runTask" scoped="" ref="0x405b5958"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x405b5ad4" loc="126:/home/user/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x405b5ad4"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x405b5c94"/>
        <function-ref name="runTask" scoped="" ref="0x405b5d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x405b63e0" loc="49:/home/user/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x405b63e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x405b65a0"/>
        <function-ref name="source" scoped="" ref="0x405b667c"/>
        <function-ref name="address" scoped="" ref="0x405b6758"/>
        <function-ref name="destination" scoped="" ref="0x405b6834"/>
        <function-ref name="setSource" scoped="" ref="0x405b6910"/>
        <function-ref name="setDestination" scoped="" ref="0x405b69ec"/>
        <function-ref name="type" scoped="" ref="0x405b6ac8"/>
        <function-ref name="setType" scoped="" ref="0x405b6ba4"/>
        <function-ref name="isForMe" scoped="" ref="0x405b6c80"/>
        <function-ref name="setGroup" scoped="" ref="0x405b6d5c"/>
        <function-ref name="localGroup" scoped="" ref="0x405b6e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x405c4d68" loc="55:/home/user/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x405c4d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x405c4f28"/>
        <function-ref name="stopDone" scoped="" ref="0x405c1018"/>
        <function-ref name="start" scoped="" ref="0x405c10f4"/>
        <function-ref name="stop" scoped="" ref="0x405c11d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x405c160c" loc="57:/home/user/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x405c160c"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x405187bc"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x405c17cc"/>
        <function-ref name="getPayload" scoped="" ref="0x405c18a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405c1984"/>
        <function-ref name="cancel" scoped="" ref="0x405c1a60"/>
        <function-ref name="sendDone" scoped="" ref="0x405c1b3c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x405c0668" loc="59:/home/user/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x405c0668"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x405187bc"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405c0828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x405c09a4" loc="61:/home/user/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x405c09a4"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405c0b64"/>
        <function-ref name="payloadLength" scoped="" ref="0x405c0c40"/>
        <function-ref name="getPayload" scoped="" ref="0x405c0d1c"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405c0df8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x405c0ed4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x405c9698" loc="64:/home/user/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x405c9698"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a7328"/>
            <typename><typedef-ref name="T32khz" ref="0x403a74e4"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212494"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x405cc140"/>
        <function-ref name="clear" scoped="" ref="0x405cc4cc"/>
        <function-ref name="isValid" scoped="" ref="0x405c9d88"/>
        <function-ref name="set" scoped="" ref="0x405cc858"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x405d0cbc" loc="66:/home/user/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x405d0cbc"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x405d0e7c"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x405d4010"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x405d40ec"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x405d41c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x405c0010" loc="58:/home/user/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x405c0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x405187bc"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405c01d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x405bfd28" loc="63:/home/user/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405bfd28"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x405bfee8"/>
        <function-ref name="noAck" scoped="" ref="0x405be010"/>
        <function-ref name="wasAcked" scoped="" ref="0x405be0ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x405bf0b4" loc="62:/home/user/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x405bf0b4"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x405bf274"/>
        <function-ref name="source" scoped="" ref="0x405bf350"/>
        <function-ref name="address" scoped="" ref="0x405bf42c"/>
        <function-ref name="destination" scoped="" ref="0x405bf508"/>
        <function-ref name="setSource" scoped="" ref="0x405bf5e4"/>
        <function-ref name="setDestination" scoped="" ref="0x405bf6c0"/>
        <function-ref name="type" scoped="" ref="0x405bf79c"/>
        <function-ref name="setType" scoped="" ref="0x405bf878"/>
        <function-ref name="isForMe" scoped="" ref="0x405bf954"/>
        <function-ref name="setGroup" scoped="" ref="0x405bfa30"/>
        <function-ref name="localGroup" scoped="" ref="0x405bfb0c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x405c7010" loc="65:/home/user/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x405c7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aaec8"/>
            <typename><typedef-ref name="TMilli" ref="0x403a70c4"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212494"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x405c7a8c"/>
        <function-ref name="clear" scoped="" ref="0x405c7e18"/>
        <function-ref name="isValid" scoped="" ref="0x405c7700"/>
        <function-ref name="set" scoped="" ref="0x405c61c4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x405dc670" loc="55:/home/user/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x405dc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x405dc830"/>
        <function-ref name="stopDone" scoped="" ref="0x405dc90c"/>
        <function-ref name="start" scoped="" ref="0x405dc9e8"/>
        <function-ref name="stop" scoped="" ref="0x405dcac4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x405edbec" loc="64:/home/user/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x405edbec"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x405187bc"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x405eddac"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x405ede88"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x405e7010"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x405e70ec"/>
        <function-ref name="setCca" scoped="" ref="0x405e71c8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x405e72a4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x405f4590" loc="67:/home/user/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x405f4590"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x405187bc"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x405f47d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x405dae1c" loc="60:/home/user/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x405dae1c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405d9010"/>
        <function-ref name="payloadLength" scoped="" ref="0x405d90ec"/>
        <function-ref name="getPayload" scoped="" ref="0x405d91c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405d92a4"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x405d9380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x405dcf00" loc="56:/home/user/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x405dcf00"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x405187bc"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x405db0d4"/>
        <function-ref name="getPayload" scoped="" ref="0x405db1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405db28c"/>
        <function-ref name="cancel" scoped="" ref="0x405db368"/>
        <function-ref name="sendDone" scoped="" ref="0x405db444"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x405dbee0" loc="58:/home/user/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x405dbee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x405187bc"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405da0b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x405e34dc" loc="61:/home/user/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x405e34dc"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x405e369c"/>
        <function-ref name="setNetwork" scoped="" ref="0x405e3778"/>
        <function-ref name="getRssi" scoped="" ref="0x405e3854"/>
        <function-ref name="getNetwork" scoped="" ref="0x405e3930"/>
        <function-ref name="getPower" scoped="" ref="0x405e3a0c"/>
        <function-ref name="getLqi" scoped="" ref="0x405e3ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x405e748c" loc="65:/home/user/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x405e748c"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x405e764c"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x405e7728"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x405e7804"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x405e78e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x405db888" loc="57:/home/user/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x405db888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x405187bc"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405dba48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x405e3d04" loc="62:/home/user/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405e3d04"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x405e3ec4"/>
        <function-ref name="noAck" scoped="" ref="0x405d8010"/>
        <function-ref name="wasAcked" scoped="" ref="0x405d80ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x405f7b90" loc="66:/home/user/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x405f7b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x405f7d50"/>
        <function-ref name="setRetries" scoped="" ref="0x405f7e2c"/>
        <function-ref name="getRetries" scoped="" ref="0x405f7f08"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x405e2010"/>
        <function-ref name="wasDelivered" scoped="" ref="0x405e20ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x405da248" loc="59:/home/user/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x405da248"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x405da408"/>
        <function-ref name="source" scoped="" ref="0x405da4e4"/>
        <function-ref name="address" scoped="" ref="0x405da5c0"/>
        <function-ref name="destination" scoped="" ref="0x405da69c"/>
        <function-ref name="setSource" scoped="" ref="0x405da778"/>
        <function-ref name="setDestination" scoped="" ref="0x405da854"/>
        <function-ref name="type" scoped="" ref="0x405da930"/>
        <function-ref name="setType" scoped="" ref="0x405daa0c"/>
        <function-ref name="isForMe" scoped="" ref="0x405daae8"/>
        <function-ref name="setGroup" scoped="" ref="0x405dabc4"/>
        <function-ref name="localGroup" scoped="" ref="0x405daca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x405e02cc" loc="63:/home/user/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x405e02cc"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x405e048c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x405ec6ac" loc="43:/home/user/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x405ec6ac"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x405ec86c"/>
        <function-ref name="stopDone" scoped="" ref="0x405ec948"/>
        <function-ref name="start" scoped="" ref="0x405eca24"/>
        <function-ref name="stop" scoped="" ref="0x405ecb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x405fc204" loc="55:/home/user/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x405fc204"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x405fc3c4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x405fcba4" loc="57:/home/user/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x405fcba4"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x405fcd64"/>
        <function-ref name="setRetries" scoped="" ref="0x405fce40"/>
        <function-ref name="getRetries" scoped="" ref="0x405fcf1c"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x405fb010"/>
        <function-ref name="wasDelivered" scoped="" ref="0x405fb0ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x405fd45c" loc="53:/home/user/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x405fd45c"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x405fd61c"/>
        <function-ref name="setNetwork" scoped="" ref="0x405fd6f8"/>
        <function-ref name="getRssi" scoped="" ref="0x405fd7d4"/>
        <function-ref name="getNetwork" scoped="" ref="0x405fd8b0"/>
        <function-ref name="getPower" scoped="" ref="0x405fd98c"/>
        <function-ref name="getLqi" scoped="" ref="0x405fda68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x405f1974" loc="50:/home/user/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x405f1974"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x405f1b34"/>
        <function-ref name="getPayload" scoped="" ref="0x405f1c10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405f1cec"/>
        <function-ref name="cancel" scoped="" ref="0x405f1dc8"/>
        <function-ref name="sendDone" scoped="" ref="0x405f1ea4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x405fc5ac" loc="56:/home/user/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x405fc5ac"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x405fc76c"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x405fc848"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x405fc924"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x405fca00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x405f2e60" loc="47:/home/user/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x405f2e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405f1050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x405fdc84" loc="54:/home/user/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405fdc84"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x405fde44"/>
        <function-ref name="noAck" scoped="" ref="0x405fdf20"/>
        <function-ref name="wasAcked" scoped="" ref="0x405fc010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x405f2010" loc="45:/home/user/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x405f2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x405f21d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x405f22ac"/>
        <function-ref name="request" scoped="" ref="0x405f2388"/>
        <function-ref name="granted" scoped="" ref="0x405f2464"/>
        <function-ref name="isOwner" scoped="" ref="0x405f2540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x405f271c" loc="46:/home/user/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x405f271c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x405f28dc"/>
        <function-ref name="getPayload" scoped="" ref="0x405f29b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405f2a94"/>
        <function-ref name="cancel" scoped="" ref="0x405f2b70"/>
        <function-ref name="sendDone" scoped="" ref="0x405f2c4c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x405f1254" loc="48:/home/user/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x405f1254"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405f1414"/>
        <function-ref name="payloadLength" scoped="" ref="0x405f14f0"/>
        <function-ref name="getPayload" scoped="" ref="0x405f15cc"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405f16a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x405f1784"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x405fd0e4" loc="51:/home/user/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x405fd0e4"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405fd2a4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x405fb898" loc="44:/home/user/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x405fb898"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x405fba58"/>
        <function-ref name="stopDone" scoped="" ref="0x405fbb34"/>
        <function-ref name="start" scoped="" ref="0x405fbc10"/>
        <function-ref name="stop" scoped="" ref="0x405fbcec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x405f88fc" loc="47:/home/user/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x405f88fc"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x405f8abc"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x405f8b98"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x405f8c74"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x405f8d50"/>
        <function-ref name="setCca" scoped="" ref="0x405f8e2c"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x405f8f08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x405fbe74" loc="45:/home/user/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x405fbe74"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x405f8050"/>
        <function-ref name="getPayload" scoped="" ref="0x405f812c"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405f8208"/>
        <function-ref name="cancel" scoped="" ref="0x405f82e4"/>
        <function-ref name="sendDone" scoped="" ref="0x405f83c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x405f8564" loc="46:/home/user/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x405f8564"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405f8724"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40608808" loc="39:/home/user/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40608808"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x406089c8"/>
        <function-ref name="stopDone" scoped="" ref="0x40608aa4"/>
        <function-ref name="start" scoped="" ref="0x40608b80"/>
        <function-ref name="stop" scoped="" ref="0x40608c5c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x40605558" loc="41:/home/user/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x40605558"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x40605718"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x406057f4"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x406058d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x406059ac"/>
        <function-ref name="setCca" scoped="" ref="0x40605a88"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x40605b64"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x40602270" loc="47:/home/user/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x40602270"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x40602430"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x4060250c"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x406025e8"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x406026c4"/>
        <function-ref name="setCca" scoped="" ref="0x406027a0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x4060287c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x40610710" loc="50:/home/user/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40610710"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x406108d0"/>
        <function-ref name="setNetwork" scoped="" ref="0x406109ac"/>
        <function-ref name="getRssi" scoped="" ref="0x40610a88"/>
        <function-ref name="getNetwork" scoped="" ref="0x40610b64"/>
        <function-ref name="getPower" scoped="" ref="0x40610c40"/>
        <function-ref name="getLqi" scoped="" ref="0x40610d1c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x4060cacc" loc="46:/home/user/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x4060cacc"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4060cc8c"/>
        <function-ref name="cancel" scoped="" ref="0x4060cd68"/>
        <function-ref name="modify" scoped="" ref="0x4060ce44"/>
        <function-ref name="sendDone" scoped="" ref="0x4060cf20"/>
        <function-ref name="resend" scoped="" ref="0x40602010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40608de4" loc="40:/home/user/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40608de4"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40605010"/>
        <function-ref name="getPayload" scoped="" ref="0x406050ec"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406051c8"/>
        <function-ref name="cancel" scoped="" ref="0x406052a4"/>
        <function-ref name="sendDone" scoped="" ref="0x40605380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x40602a18" loc="48:/home/user/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40602a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40602bd8"/>
        <function-ref name="rand32" scoped="" ref="0x40602cb4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x4060f704" loc="45:/home/user/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x4060f704"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4060f8c4"/>
        <function-ref name="stop" scoped="" ref="0x4060f9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40613d74" loc="51:/home/user/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40613d74"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x40615010"/>
        <function-ref name="getHeader" scoped="" ref="0x406150ec"/>
        <function-ref name="getMetadata" scoped="" ref="0x406151c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x40600cb0" loc="44:/home/user/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x40600cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x40600e70"/>
        <function-ref name="rfOff" scoped="" ref="0x40603010"/>
        <function-ref name="rxOn" scoped="" ref="0x406030ec"/>
        <function-ref name="startVReg" scoped="" ref="0x406031c8"/>
        <function-ref name="stopVReg" scoped="" ref="0x406032a4"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x40603380"/>
        <function-ref name="stopOscillator" scoped="" ref="0x4060345c"/>
        <function-ref name="startVRegDone" scoped="" ref="0x40603538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40617ab0" loc="49:/home/user/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40617ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40617c70"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40617d4c"/>
        <function-ref name="led1On" scoped="" ref="0x40617e28"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40617f04"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40610010"/>
        <function-ref name="get" scoped="" ref="0x406100ec"/>
        <function-ref name="led1Off" scoped="" ref="0x406101c8"/>
        <function-ref name="led2Off" scoped="" ref="0x40610538"/>
        <function-ref name="set" scoped="" ref="0x406102a4"/>
        <function-ref name="led0On" scoped="" ref="0x40610380"/>
        <function-ref name="led2On" scoped="" ref="0x4061045c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x40605d14" loc="43:/home/user/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40605d14"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40605ed4"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40604010"/>
        <function-ref name="request" scoped="" ref="0x406040ec"/>
        <function-ref name="granted" scoped="" ref="0x406041c8"/>
        <function-ref name="isOwner" scoped="" ref="0x406042a4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x40621504" loc="52:/home/user/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControlState" scoped="" ref="0x40621504"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40621744"/>
        <function-ref name="toIdle" scoped="" ref="0x40621820"/>
        <function-ref name="isState" scoped="" ref="0x406218fc"/>
        <function-ref name="isIdle" scoped="" ref="0x406219d8"/>
        <function-ref name="requestState" scoped="" ref="0x40621ab4"/>
        <function-ref name="forceState" scoped="" ref="0x40621b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x40620534" loc="76:/home/user/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDone_task" scoped="" ref="0x40620534"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x406206f4"/>
        <function-ref name="runTask" scoped="" ref="0x406207d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x40612d60" loc="75:/home/user/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone_task" scoped="" ref="0x40612d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40612f20"/>
        <function-ref name="runTask" scoped="" ref="0x40620010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x40612570" loc="74:/home/user/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDone_task" scoped="" ref="0x40612570"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40612730"/>
        <function-ref name="runTask" scoped="" ref="0x4061280c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x40649c14" loc="45:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x40649c14"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x40649dd4"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x40649eb0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x40650010"/>
        <function-ref name="syncDone" scoped="" ref="0x406500ec"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x406501c8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x406502a4"/>
        <function-ref name="setChannel" scoped="" ref="0x40650380"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x4065045c"/>
        <function-ref name="setPanAddr" scoped="" ref="0x40650538"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x40650614"/>
        <function-ref name="getExtAddr" scoped="" ref="0x406506f0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x406507cc"/>
        <function-ref name="sync" scoped="" ref="0x406508a8"/>
        <function-ref name="getChannel" scoped="" ref="0x40650a04"/>
        <function-ref name="getPanAddr" scoped="" ref="0x40650ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x4064f810" loc="47:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x4064f810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4064fde4"/>
        <function-ref name="readDone" scoped="" ref="0x40659044"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x40650cac" loc="46:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x40650cac"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x40650e6c"/>
        <function-ref name="rfOff" scoped="" ref="0x4064f010"/>
        <function-ref name="rxOn" scoped="" ref="0x4064f0ec"/>
        <function-ref name="startVReg" scoped="" ref="0x4064f1c8"/>
        <function-ref name="stopVReg" scoped="" ref="0x4064f2a4"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x4064f380"/>
        <function-ref name="stopOscillator" scoped="" ref="0x4064f45c"/>
        <function-ref name="startVRegDone" scoped="" ref="0x4064f538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40642eb4" loc="44:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40642eb4"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4063f0b8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4063f194"/>
        <function-ref name="request" scoped="" ref="0x4063f270"/>
        <function-ref name="granted" scoped="" ref="0x4063f34c"/>
        <function-ref name="isOwner" scoped="" ref="0x4063f428"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x40656598" loc="46:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x40656598"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x40656758"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x40656834"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x40656910"/>
        <function-ref name="syncDone" scoped="" ref="0x406569ec"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x40656ac8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x40656ba4"/>
        <function-ref name="setChannel" scoped="" ref="0x40656c80"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x40656d5c"/>
        <function-ref name="setPanAddr" scoped="" ref="0x40656e38"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x40656f14"/>
        <function-ref name="getExtAddr" scoped="" ref="0x40655010"/>
        <function-ref name="getShortAddr" scoped="" ref="0x406550ec"/>
        <function-ref name="sync" scoped="" ref="0x406551c8"/>
        <function-ref name="getChannel" scoped="" ref="0x40655324"/>
        <function-ref name="getPanAddr" scoped="" ref="0x40655400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x40664078" loc="66:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x40664078"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40664238"/>
        <function-ref name="write" scoped="" ref="0x40664314"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x406513a0" loc="50:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x406513a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x40651560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x4065f91c" loc="52:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StartupTimer" scoped="" ref="0x4065f91c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a7328"/>
            <typename><typedef-ref name="T32khz" ref="0x403a74e4"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212494"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40653cf8"/>
        <function-ref name="fired" scoped="" ref="0x40653524"/>
        <function-ref name="startAt" scoped="" ref="0x406539dc"/>
        <function-ref name="isRunning" scoped="" ref="0x40653780"/>
        <function-ref name="getAlarm" scoped="" ref="0x40652010"/>
        <function-ref name="start" scoped="" ref="0x40653044"/>
        <function-ref name="stop" scoped="" ref="0x406532c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x4065b64c" loc="64:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x4065b64c"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4065b80c"/>
        <function-ref name="write" scoped="" ref="0x4065b8e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x40652c98" loc="54:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x40652c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40652e58"/>
        <function-ref name="isInput" scoped="" ref="0x4065e010"/>
        <function-ref name="toggle" scoped="" ref="0x4065e0ec"/>
        <function-ref name="isOutput" scoped="" ref="0x4065e1c8"/>
        <function-ref name="get" scoped="" ref="0x4065e2a4"/>
        <function-ref name="makeOutput" scoped="" ref="0x4065e380"/>
        <function-ref name="set" scoped="" ref="0x4065e45c"/>
        <function-ref name="clr" scoped="" ref="0x4065e538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x40654084" loc="48:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x40654084"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40654658"/>
        <function-ref name="readDone" scoped="" ref="0x40654898"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x4066ceac" loc="126:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="syncDone" scoped="" ref="0x4066ceac"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4067d0b8"/>
        <function-ref name="runTask" scoped="" ref="0x4067d194"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x4066454c" loc="67:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x4066454c"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4066470c"/>
        <function-ref name="write" scoped="" ref="0x406647e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x40664a34" loc="68:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x40664a34"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40664bf4"/>
        <function-ref name="write" scoped="" ref="0x40664cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x40663be0" loc="62:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x40663be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40663da0"/>
        <function-ref name="write" scoped="" ref="0x40663e7c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x406695b4" loc="57:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x406695b4"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x40669774"/>
        <function-ref name="changed" scoped="" ref="0x40669850"/>
        <function-ref name="amGroup" scoped="" ref="0x4066992c"/>
        <function-ref name="setAddress" scoped="" ref="0x40669a08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x406522d0" loc="53:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x406522d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40652490"/>
        <function-ref name="isInput" scoped="" ref="0x4065256c"/>
        <function-ref name="toggle" scoped="" ref="0x40652648"/>
        <function-ref name="isOutput" scoped="" ref="0x40652724"/>
        <function-ref name="get" scoped="" ref="0x40652800"/>
        <function-ref name="makeOutput" scoped="" ref="0x406528dc"/>
        <function-ref name="set" scoped="" ref="0x406529b8"/>
        <function-ref name="clr" scoped="" ref="0x40652a94"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x40674084" loc="71:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x40674084"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40674344"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x4065e73c" loc="55:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x4065e73c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4065e8fc"/>
        <function-ref name="isInput" scoped="" ref="0x4065e9d8"/>
        <function-ref name="toggle" scoped="" ref="0x4065eab4"/>
        <function-ref name="isOutput" scoped="" ref="0x4065eb90"/>
        <function-ref name="get" scoped="" ref="0x4065ec6c"/>
        <function-ref name="makeOutput" scoped="" ref="0x4065ed48"/>
        <function-ref name="set" scoped="" ref="0x4065ee24"/>
        <function-ref name="clr" scoped="" ref="0x4065ef00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40659ae4" loc="44:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40659ae4"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40659ca4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x4065bb48" loc="65:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x4065bb48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4065bd08"/>
        <function-ref name="write" scoped="" ref="0x4065bde4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x40674584" loc="72:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x40674584"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40674744"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x40674984" loc="74:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40674984"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40674b44"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40674c20"/>
        <function-ref name="request" scoped="" ref="0x40674cfc"/>
        <function-ref name="granted" scoped="" ref="0x40674dd8"/>
        <function-ref name="isOwner" scoped="" ref="0x40674eb4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x406738cc" loc="76:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SyncResource" scoped="" ref="0x406738cc"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40673a8c"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40673b68"/>
        <function-ref name="request" scoped="" ref="0x40673c44"/>
        <function-ref name="granted" scoped="" ref="0x40673d20"/>
        <function-ref name="isOwner" scoped="" ref="0x40673dfc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x406555cc" loc="47:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x406555cc"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x4065578c"/>
        <function-ref name="rfOff" scoped="" ref="0x40655868"/>
        <function-ref name="rxOn" scoped="" ref="0x40655944"/>
        <function-ref name="startVReg" scoped="" ref="0x40655a20"/>
        <function-ref name="stopVReg" scoped="" ref="0x40655afc"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x40655bd8"/>
        <function-ref name="stopOscillator" scoped="" ref="0x40655cb4"/>
        <function-ref name="startVRegDone" scoped="" ref="0x40655d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x4065b150" loc="63:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x4065b150"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4065b310"/>
        <function-ref name="write" scoped="" ref="0x4065b3ec"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x406636f8" loc="61:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x406636f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x406638b8"/>
        <function-ref name="write" scoped="" ref="0x40663994"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x40672840" loc="69:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x40672840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40672a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40671010" loc="78:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40671010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x406711d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x406712ac"/>
        <function-ref name="led1On" scoped="" ref="0x40671388"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40671464"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40671540"/>
        <function-ref name="get" scoped="" ref="0x4067161c"/>
        <function-ref name="led1Off" scoped="" ref="0x406716f8"/>
        <function-ref name="led2Off" scoped="" ref="0x40671a68"/>
        <function-ref name="set" scoped="" ref="0x406717d4"/>
        <function-ref name="led0On" scoped="" ref="0x406718b0"/>
        <function-ref name="led2On" scoped="" ref="0x4067198c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x4066c720" loc="125:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sync" scoped="" ref="0x4066c720"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4066c8e0"/>
        <function-ref name="runTask" scoped="" ref="0x4066c9bc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40659e54" loc="45:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40659e54"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40656050"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4065612c"/>
        <function-ref name="request" scoped="" ref="0x40656208"/>
        <function-ref name="granted" scoped="" ref="0x406562e4"/>
        <function-ref name="isOwner" scoped="" ref="0x406563c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x4065c064" loc="60:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x4065c064"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4065c224"/>
        <function-ref name="write" scoped="" ref="0x4065c300"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x40666b04" loc="59:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x40666b04"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40666d44"/>
        <function-ref name="write" scoped="" ref="0x40666e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x4066b6dc" loc="56:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x4066b6dc"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4066b89c"/>
        <function-ref name="disable" scoped="" ref="0x4066b978"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x4066ba54"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x4066bb30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x40673150" loc="75:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiResource" scoped="" ref="0x40673150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40673310"/>
        <function-ref name="immediateRequest" scoped="" ref="0x406733ec"/>
        <function-ref name="request" scoped="" ref="0x406734c8"/>
        <function-ref name="granted" scoped="" ref="0x406735a4"/>
        <function-ref name="isOwner" scoped="" ref="0x40673680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x40672c38" loc="70:/home/user/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x40672c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40672df8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x406b219c" loc="45:/home/user/tinyos-main/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x406b219c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406b235c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x406b272c" loc="46:/home/user/tinyos-main/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm32khz32" scoped="" ref="0x406b272c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a7328"/>
            <typename><typedef-ref name="T32khz" ref="0x403a74e4"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212494"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406b1af8"/>
        <function-ref name="fired" scoped="" ref="0x406b1324"/>
        <function-ref name="startAt" scoped="" ref="0x406b17dc"/>
        <function-ref name="isRunning" scoped="" ref="0x406b1580"/>
        <function-ref name="getAlarm" scoped="" ref="0x406b1d54"/>
        <function-ref name="start" scoped="" ref="0x406b2e1c"/>
        <function-ref name="stop" scoped="" ref="0x406b10c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x407f4e44" loc="86:/home/user/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x407f4e44"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a7328"/>
            <typename><typedef-ref name="T32khz" ref="0x403a74e4"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212494"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406c2238"/>
        <function-ref name="fired" scoped="" ref="0x406c3a30"/>
        <function-ref name="startAt" scoped="" ref="0x406c3ee8"/>
        <function-ref name="isRunning" scoped="" ref="0x406c3c8c"/>
        <function-ref name="getAlarm" scoped="" ref="0x406c2494"/>
        <function-ref name="start" scoped="" ref="0x406c3550"/>
        <function-ref name="stop" scoped="" ref="0x406c37d4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x406c26b8" loc="87:/home/user/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x406c26b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406c2878"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x410c9010" loc="28:/home/user/tinyos-main/tos/platforms/mica/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x410c9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a7328"/>
            <typename><typedef-ref name="T32khz" ref="0x403a74e4"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212494"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x410c83e4"/>
        <function-ref name="fired" scoped="" ref="0x410c9be0"/>
        <function-ref name="startAt" scoped="" ref="0x410c80c8"/>
        <function-ref name="isRunning" scoped="" ref="0x410c9e3c"/>
        <function-ref name="getAlarm" scoped="" ref="0x410c8640"/>
        <function-ref name="start" scoped="" ref="0x410c9700"/>
        <function-ref name="stop" scoped="" ref="0x410c9984"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x410c7ab8" loc="30:/home/user/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x410c7ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a7328"/>
            <typename><typedef-ref name="TOne" ref="0x403c82e0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x410c5ea0"/>
        <function-ref name="fired" scoped="" ref="0x410c56cc"/>
        <function-ref name="startAt" scoped="" ref="0x410c5b84"/>
        <function-ref name="isRunning" scoped="" ref="0x410c5928"/>
        <function-ref name="getAlarm" scoped="" ref="0x410c4118"/>
        <function-ref name="start" scoped="" ref="0x410c51ec"/>
        <function-ref name="stop" scoped="" ref="0x410c5470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x406e1588" loc="46:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x406e1588"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x406e1748"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x406e1824"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x406e1900"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x406e19dc"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x406e1ab8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x406e1b94"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x406e1c70"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x406e1d4c"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x406e1e28"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x406e1f04"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x406d20f0" loc="47:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x406d20f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x406dda38"/>
        <function-ref name="test" scoped="" ref="0x406dd580"/>
        <function-ref name="get" scoped="" ref="0x406d26e0"/>
        <function-ref name="captured" scoped="" ref="0x406d2bc0"/>
        <function-ref name="reset" scoped="" ref="0x406d2e44"/>
        <function-ref name="isOn" scoped="" ref="0x406dd7dc"/>
        <function-ref name="set" scoped="" ref="0x406d293c"/>
        <function-ref name="start" scoped="" ref="0x406dd0c8"/>
        <function-ref name="stop" scoped="" ref="0x406dd324"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x406eb8a4" loc="48:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x406eb8a4"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x406dcd0c"/>
        <function-ref name="fired" scoped="" ref="0x406dc39c"/>
        <function-ref name="get" scoped="" ref="0x406ebe94"/>
        <function-ref name="reset" scoped="" ref="0x406dc5f8"/>
        <function-ref name="isOn" scoped="" ref="0x406db010"/>
        <function-ref name="set" scoped="" ref="0x406dc118"/>
        <function-ref name="start" scoped="" ref="0x406dc854"/>
        <function-ref name="stop" scoped="" ref="0x406dcab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x406d59e0" loc="45:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x406d59e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x406d4358"/>
        <function-ref name="test" scoped="" ref="0x406c6e60"/>
        <function-ref name="get" scoped="" ref="0x406c6010"/>
        <function-ref name="setScale" scoped="" ref="0x406d45b4"/>
        <function-ref name="getScale" scoped="" ref="0x406d4838"/>
        <function-ref name="reset" scoped="" ref="0x406c674c"/>
        <function-ref name="overflow" scoped="" ref="0x406c64f0"/>
        <function-ref name="isOn" scoped="" ref="0x406d40fc"/>
        <function-ref name="set" scoped="" ref="0x406c626c"/>
        <function-ref name="start" scoped="" ref="0x406c69a8"/>
        <function-ref name="stop" scoped="" ref="0x406c6c04"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x406e5010" loc="48:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x406e5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x406e51d0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x406e52ac"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x406e5388"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x406e5464"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x406e5540"/>
        <function-ref name="setControl" scoped="" ref="0x406e561c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x406ef2fc" loc="50:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x406ef2fc"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x406ef4bc"/>
        <function-ref name="compareBusy" scoped="" ref="0x406ef598"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x406ef674"/>
        <function-ref name="countBusy" scoped="" ref="0x406ef750"/>
        <function-ref name="getAssr" scoped="" ref="0x406ef82c"/>
        <function-ref name="setAssr" scoped="" ref="0x406ef908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x406e5934" loc="49:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x406e5934"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x406e4d8c"/>
        <function-ref name="fired" scoped="" ref="0x406e441c"/>
        <function-ref name="get" scoped="" ref="0x406e5f24"/>
        <function-ref name="reset" scoped="" ref="0x406e4678"/>
        <function-ref name="isOn" scoped="" ref="0x406f4010"/>
        <function-ref name="set" scoped="" ref="0x406e4198"/>
        <function-ref name="start" scoped="" ref="0x406e48d4"/>
        <function-ref name="stop" scoped="" ref="0x406e4b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x406dbabc" loc="47:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x406dbabc"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x406e63e4"/>
        <function-ref name="test" scoped="" ref="0x406e7f18"/>
        <function-ref name="get" scoped="" ref="0x406e70c8"/>
        <function-ref name="setScale" scoped="" ref="0x406e6640"/>
        <function-ref name="getScale" scoped="" ref="0x406e68c4"/>
        <function-ref name="reset" scoped="" ref="0x406e7804"/>
        <function-ref name="overflow" scoped="" ref="0x406e75a8"/>
        <function-ref name="isOn" scoped="" ref="0x406e6188"/>
        <function-ref name="set" scoped="" ref="0x406e7324"/>
        <function-ref name="start" scoped="" ref="0x406e7a60"/>
        <function-ref name="stop" scoped="" ref="0x406e7cbc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x406ec6dc" loc="50:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x406ec6dc"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x406ec89c"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x406ec978"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x406eca54"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x406ecb30"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x406ecc0c"/>
        <function-ref name="setControl" scoped="" ref="0x406ecce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x406fd9cc" loc="52:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x406fd9cc"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x406fdb8c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x406fde10" loc="53:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x406fde10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x406fc010"/>
        <function-ref name="compareBusy" scoped="" ref="0x406fc0ec"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x406fc1c8"/>
        <function-ref name="countBusy" scoped="" ref="0x406fc2a4"/>
        <function-ref name="getAssr" scoped="" ref="0x406fc380"/>
        <function-ref name="setAssr" scoped="" ref="0x406fc45c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x406ff030" loc="51:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x406ff030"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x406fd4c8"/>
        <function-ref name="fired" scoped="" ref="0x406ffb00"/>
        <function-ref name="get" scoped="" ref="0x406ff620"/>
        <function-ref name="reset" scoped="" ref="0x406ffd5c"/>
        <function-ref name="isOn" scoped="" ref="0x406fd724"/>
        <function-ref name="set" scoped="" ref="0x406ff87c"/>
        <function-ref name="start" scoped="" ref="0x406fd010"/>
        <function-ref name="stop" scoped="" ref="0x406fd26c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x406ee584" loc="49:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x406ee584"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x406edea4"/>
        <function-ref name="test" scoped="" ref="0x406ed9ec"/>
        <function-ref name="get" scoped="" ref="0x406eeb74"/>
        <function-ref name="setScale" scoped="" ref="0x406ec118"/>
        <function-ref name="getScale" scoped="" ref="0x406ec39c"/>
        <function-ref name="reset" scoped="" ref="0x406ed2d8"/>
        <function-ref name="overflow" scoped="" ref="0x406ed07c"/>
        <function-ref name="isOn" scoped="" ref="0x406edc48"/>
        <function-ref name="set" scoped="" ref="0x406eedd0"/>
        <function-ref name="start" scoped="" ref="0x406ed534"/>
        <function-ref name="stop" scoped="" ref="0x406ed790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40736928" loc="47:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40736928"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40736ae8"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x40736bc4"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40736ca0"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x40736d7c"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40736e58"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40735010"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x407350ec"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x407351c8"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x407352a4"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x40735380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0Ctrl" ref="0x4072c478" loc="53:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0Ctrl" scoped="" ref="0x4072c478"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x4072c638"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x4072c714"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x4072c7f0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x4072c8cc"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x4072c9a8"/>
        <function-ref name="setControl" scoped="" ref="0x4072ca84"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x40732430" loc="49:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x40732430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x4073189c"/>
        <function-ref name="fired" scoped="" ref="0x40732f00"/>
        <function-ref name="get" scoped="" ref="0x40732a20"/>
        <function-ref name="reset" scoped="" ref="0x40731188"/>
        <function-ref name="isOn" scoped="" ref="0x40731af8"/>
        <function-ref name="set" scoped="" ref="0x40732c7c"/>
        <function-ref name="start" scoped="" ref="0x407313e4"/>
        <function-ref name="stop" scoped="" ref="0x40731640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x407356a4" loc="48:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x407356a4"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40732010"/>
        <function-ref name="test" scoped="" ref="0x40734b40"/>
        <function-ref name="get" scoped="" ref="0x40735c94"/>
        <function-ref name="captured" scoped="" ref="0x407341a8"/>
        <function-ref name="reset" scoped="" ref="0x4073442c"/>
        <function-ref name="isOn" scoped="" ref="0x40734d9c"/>
        <function-ref name="set" scoped="" ref="0x40735ef0"/>
        <function-ref name="start" scoped="" ref="0x40734688"/>
        <function-ref name="stop" scoped="" ref="0x407348e4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x40731ef0" loc="50:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x40731ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x4072e394"/>
        <function-ref name="fired" scoped="" ref="0x40730a04"/>
        <function-ref name="get" scoped="" ref="0x40730524"/>
        <function-ref name="reset" scoped="" ref="0x40730c60"/>
        <function-ref name="isOn" scoped="" ref="0x4072e5f0"/>
        <function-ref name="set" scoped="" ref="0x40730780"/>
        <function-ref name="start" scoped="" ref="0x40730ebc"/>
        <function-ref name="stop" scoped="" ref="0x4072e138"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x4072e9e8" loc="51:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x4072e9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x4072de60"/>
        <function-ref name="fired" scoped="" ref="0x4072d4f0"/>
        <function-ref name="get" scoped="" ref="0x4072d010"/>
        <function-ref name="reset" scoped="" ref="0x4072d74c"/>
        <function-ref name="isOn" scoped="" ref="0x4072c0fc"/>
        <function-ref name="set" scoped="" ref="0x4072d26c"/>
        <function-ref name="start" scoped="" ref="0x4072d9a8"/>
        <function-ref name="stop" scoped="" ref="0x4072dc04"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x406e9768" loc="46:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x406e9768"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x407360fc"/>
        <function-ref name="test" scoped="" ref="0x40721c04"/>
        <function-ref name="get" scoped="" ref="0x406e9d58"/>
        <function-ref name="setScale" scoped="" ref="0x40736358"/>
        <function-ref name="getScale" scoped="" ref="0x407365dc"/>
        <function-ref name="reset" scoped="" ref="0x407214f0"/>
        <function-ref name="overflow" scoped="" ref="0x40721294"/>
        <function-ref name="isOn" scoped="" ref="0x40721e60"/>
        <function-ref name="set" scoped="" ref="0x40721010"/>
        <function-ref name="start" scoped="" ref="0x4072174c"/>
        <function-ref name="stop" scoped="" ref="0x407219a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4078f72c" loc="46:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4078f72c"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x403445a8"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x403445a8"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4078f8ec"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x4078faf0" loc="47:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4078faf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x407854c8"/>
        <function-ref name="test" scoped="" ref="0x40785010"/>
        <function-ref name="get" scoped="" ref="0x4078d110"/>
        <function-ref name="setScale" scoped="" ref="0x40785724"/>
        <function-ref name="getScale" scoped="" ref="0x407859a8"/>
        <function-ref name="reset" scoped="" ref="0x4078d84c"/>
        <function-ref name="overflow" scoped="" ref="0x4078d5f0"/>
        <function-ref name="isOn" scoped="" ref="0x4078526c"/>
        <function-ref name="set" scoped="" ref="0x4078d36c"/>
        <function-ref name="start" scoped="" ref="0x4078daa8"/>
        <function-ref name="stop" scoped="" ref="0x4078dd04"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x410ba010" loc="55:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x410ba010"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x403443b4"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x403443b4"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a7328"/>
            <typename><typedef-ref name="TOne" ref="0x403c82e0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x410b93e4"/>
        <function-ref name="fired" scoped="" ref="0x410babe0"/>
        <function-ref name="startAt" scoped="" ref="0x410b90c8"/>
        <function-ref name="isRunning" scoped="" ref="0x410bae3c"/>
        <function-ref name="getAlarm" scoped="" ref="0x410b9640"/>
        <function-ref name="start" scoped="" ref="0x410ba700"/>
        <function-ref name="stop" scoped="" ref="0x410ba984"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x410f59f8" loc="58:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x410f59f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x410f3e60"/>
        <function-ref name="fired" scoped="" ref="0x410f34f0"/>
        <function-ref name="get" scoped="" ref="0x410f3010"/>
        <function-ref name="reset" scoped="" ref="0x410f374c"/>
        <function-ref name="isOn" scoped="" ref="0x410f20fc"/>
        <function-ref name="set" scoped="" ref="0x410f326c"/>
        <function-ref name="start" scoped="" ref="0x410f39a8"/>
        <function-ref name="stop" scoped="" ref="0x410f3c04"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x410b98ec" loc="57:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x410b98ec"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x410f526c"/>
        <function-ref name="test" scoped="" ref="0x410f6d4c"/>
        <function-ref name="get" scoped="" ref="0x410b9edc"/>
        <function-ref name="setScale" scoped="" ref="0x410f54c8"/>
        <function-ref name="getScale" scoped="" ref="0x410f574c"/>
        <function-ref name="reset" scoped="" ref="0x410f6638"/>
        <function-ref name="overflow" scoped="" ref="0x410f63dc"/>
        <function-ref name="isOn" scoped="" ref="0x410f5010"/>
        <function-ref name="set" scoped="" ref="0x410f6158"/>
        <function-ref name="start" scoped="" ref="0x410f6894"/>
        <function-ref name="stop" scoped="" ref="0x410f6af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x407a96a0" loc="24:/home/user/tinyos-main/tos/platforms/mica/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x407a96a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a7328"/>
            <typename><typedef-ref name="T32khz" ref="0x403a74e4"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212494"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x407a9d90"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407ac26c"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407ac010"/>
        <function-ref name="overflow" scoped="" ref="0x407ac4c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x407bf010" loc="24:/home/user/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x407bf010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a7328"/>
            <typename><typedef-ref name="TOne" ref="0x403c82e0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x407bf700"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407bfbb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407bf95c"/>
        <function-ref name="overflow" scoped="" ref="0x407bfe14"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x407bc010" loc="45:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x407bc010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a7328"/>
            <typename><typedef-ref name="TOne" ref="0x403c82e0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x407bc700"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407bcbb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407bc95c"/>
        <function-ref name="overflow" scoped="" ref="0x407bce14"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x407bb108" loc="46:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x407bb108"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x407c8a18"/>
        <function-ref name="test" scoped="" ref="0x407c8560"/>
        <function-ref name="get" scoped="" ref="0x407bb6f8"/>
        <function-ref name="setScale" scoped="" ref="0x407c8c74"/>
        <function-ref name="getScale" scoped="" ref="0x407c8ef8"/>
        <function-ref name="reset" scoped="" ref="0x407bbe34"/>
        <function-ref name="overflow" scoped="" ref="0x407bbbd8"/>
        <function-ref name="isOn" scoped="" ref="0x407c87bc"/>
        <function-ref name="set" scoped="" ref="0x407bb954"/>
        <function-ref name="start" scoped="" ref="0x407c80a8"/>
        <function-ref name="stop" scoped="" ref="0x407c8304"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x407c6850" loc="63:/home/user/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x407c6850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a7328"/>
            <typename><typedef-ref name="TOne" ref="0x403c82e0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x407cd010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407cd4c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407cd26c"/>
        <function-ref name="overflow" scoped="" ref="0x407cd724"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x407a86d8" loc="62:/home/user/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x407a86d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a7328"/>
            <typename><typedef-ref name="T32khz" ref="0x403a74e4"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212494"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x407a8dc8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407c62a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407c6044"/>
        <function-ref name="overflow" scoped="" ref="0x407c64fc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x410c3304" loc="61:/home/user/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x410c3304"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a7328"/>
            <typename><typedef-ref name="T32khz" ref="0x403a74e4"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212494"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x410c26d0"/>
        <function-ref name="fired" scoped="" ref="0x410c3ed4"/>
        <function-ref name="startAt" scoped="" ref="0x410c23b4"/>
        <function-ref name="isRunning" scoped="" ref="0x410c2158"/>
        <function-ref name="getAlarm" scoped="" ref="0x410c292c"/>
        <function-ref name="start" scoped="" ref="0x410c39f4"/>
        <function-ref name="stop" scoped="" ref="0x410c3c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x410c0de4" loc="73:/home/user/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x410c0de4"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a7328"/>
            <typename><typedef-ref name="TOne" ref="0x403c82e0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x410be1c8"/>
        <function-ref name="fired" scoped="" ref="0x410bf9c8"/>
        <function-ref name="startAt" scoped="" ref="0x410bfe80"/>
        <function-ref name="isRunning" scoped="" ref="0x410bfc24"/>
        <function-ref name="getAlarm" scoped="" ref="0x410be424"/>
        <function-ref name="start" scoped="" ref="0x410bf4e8"/>
        <function-ref name="stop" scoped="" ref="0x410bf76c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x410c2c60" loc="68:/home/user/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x410c2c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a7328"/>
            <typename><typedef-ref name="T32khz" ref="0x403a74e4"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212494"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x410c037c"/>
        <function-ref name="clearOverflow" scoped="" ref="0x410c0834"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x410c05d8"/>
        <function-ref name="overflow" scoped="" ref="0x410c0a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x407f6d20" loc="18:/home/user/tinyos-main/tos/system/NoInitC.nc">
      <component-ref qname="NoInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x407f6d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407f6ee0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x407f0b90" loc="87:/home/user/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x407f0b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407f0d50"/>
        <function-ref name="isInput" scoped="" ref="0x407f0e2c"/>
        <function-ref name="toggle" scoped="" ref="0x407f0f08"/>
        <function-ref name="isOutput" scoped="" ref="0x40808010"/>
        <function-ref name="get" scoped="" ref="0x408080ec"/>
        <function-ref name="makeOutput" scoped="" ref="0x408081c8"/>
        <function-ref name="set" scoped="" ref="0x408082a4"/>
        <function-ref name="clr" scoped="" ref="0x40808380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x4080856c" loc="88:/home/user/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x4080856c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4080872c"/>
        <function-ref name="isInput" scoped="" ref="0x40808808"/>
        <function-ref name="toggle" scoped="" ref="0x408088e4"/>
        <function-ref name="isOutput" scoped="" ref="0x408089c0"/>
        <function-ref name="get" scoped="" ref="0x40808a9c"/>
        <function-ref name="makeOutput" scoped="" ref="0x40808b78"/>
        <function-ref name="set" scoped="" ref="0x40808c54"/>
        <function-ref name="clr" scoped="" ref="0x40808d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x40808f14" loc="89:/home/user/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x40808f14"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408070f4"/>
        <function-ref name="isInput" scoped="" ref="0x408071d0"/>
        <function-ref name="toggle" scoped="" ref="0x408072ac"/>
        <function-ref name="isOutput" scoped="" ref="0x40807388"/>
        <function-ref name="get" scoped="" ref="0x40807464"/>
        <function-ref name="makeOutput" scoped="" ref="0x40807540"/>
        <function-ref name="set" scoped="" ref="0x4080761c"/>
        <function-ref name="clr" scoped="" ref="0x408076f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x407f01e8" loc="86:/home/user/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x407f01e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407f03a8"/>
        <function-ref name="isInput" scoped="" ref="0x407f0484"/>
        <function-ref name="toggle" scoped="" ref="0x407f0560"/>
        <function-ref name="isOutput" scoped="" ref="0x407f063c"/>
        <function-ref name="get" scoped="" ref="0x407f0718"/>
        <function-ref name="makeOutput" scoped="" ref="0x407f07f4"/>
        <function-ref name="set" scoped="" ref="0x407f08d0"/>
        <function-ref name="clr" scoped="" ref="0x407f09ac"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x408062d0" loc="91:/home/user/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x408062d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40806490"/>
        <function-ref name="isInput" scoped="" ref="0x4080656c"/>
        <function-ref name="toggle" scoped="" ref="0x40806648"/>
        <function-ref name="isOutput" scoped="" ref="0x40806724"/>
        <function-ref name="get" scoped="" ref="0x40806800"/>
        <function-ref name="makeOutput" scoped="" ref="0x408068dc"/>
        <function-ref name="set" scoped="" ref="0x408069b8"/>
        <function-ref name="clr" scoped="" ref="0x40806a94"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x406b47dc" loc="85:/home/user/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x406b47dc"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406b499c"/>
        <function-ref name="isInput" scoped="" ref="0x406b4a78"/>
        <function-ref name="toggle" scoped="" ref="0x406b4b54"/>
        <function-ref name="isOutput" scoped="" ref="0x406b4c30"/>
        <function-ref name="get" scoped="" ref="0x406b4d0c"/>
        <function-ref name="makeOutput" scoped="" ref="0x406b4de8"/>
        <function-ref name="set" scoped="" ref="0x406b4ec4"/>
        <function-ref name="clr" scoped="" ref="0x407f0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x408078d0" loc="90:/home/user/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x408078d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40807a90"/>
        <function-ref name="isInput" scoped="" ref="0x40807b6c"/>
        <function-ref name="toggle" scoped="" ref="0x40807c48"/>
        <function-ref name="isOutput" scoped="" ref="0x40807d24"/>
        <function-ref name="get" scoped="" ref="0x40807e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x40807edc"/>
        <function-ref name="set" scoped="" ref="0x40806010"/>
        <function-ref name="clr" scoped="" ref="0x408060ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x407fd65c" loc="39:/home/user/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x407fd65c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x407fd81c"/>
        <function-ref name="disable" scoped="" ref="0x407fd8f8"/>
        <function-ref name="captured" scoped="" ref="0x407fd9d4"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x407fdab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x407fdd2c" loc="40:/home/user/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x407fdd2c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407fdeec"/>
        <function-ref name="disable" scoped="" ref="0x407ff010"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x407ff0ec"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x407ff1c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x407ff458" loc="41:/home/user/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x407ff458"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407ff618"/>
        <function-ref name="disable" scoped="" ref="0x407ff6f4"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x407ff7d0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x407ff8ac"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x407fe200" loc="42:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x407fe200"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x407fe3c0"/>
        <function-ref name="disable" scoped="" ref="0x407fe49c"/>
        <function-ref name="captured" scoped="" ref="0x407fe578"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x407fe654"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Capture" ref="0x407fe858" loc="43:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Capture" scoped="" ref="0x407fe858"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x4080c26c"/>
        <function-ref name="test" scoped="" ref="0x407fcce4"/>
        <function-ref name="get" scoped="" ref="0x407fee48"/>
        <function-ref name="captured" scoped="" ref="0x407fc34c"/>
        <function-ref name="reset" scoped="" ref="0x407fc5d0"/>
        <function-ref name="isOn" scoped="" ref="0x4080c010"/>
        <function-ref name="set" scoped="" ref="0x407fc0c8"/>
        <function-ref name="start" scoped="" ref="0x407fc82c"/>
        <function-ref name="stop" scoped="" ref="0x407fca88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x4080ac7c" loc="9:/home/user/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x4080ac7c"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4080ae3c"/>
        <function-ref name="fired" scoped="" ref="0x4080af18"/>
        <function-ref name="disable" scoped="" ref="0x40809010"/>
        <function-ref name="edge" scoped="" ref="0x408090ec"/>
        <function-ref name="enable" scoped="" ref="0x408091c8"/>
        <function-ref name="getValue" scoped="" ref="0x408092a4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x4080a6ac" loc="8:/home/user/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x4080a6ac"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4080a86c"/>
        <function-ref name="disable" scoped="" ref="0x4080a948"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x4080aa24"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x4080ab00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x4082e250" loc="51:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x4082e250"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4082e410"/>
        <function-ref name="fired" scoped="" ref="0x4082e4ec"/>
        <function-ref name="disable" scoped="" ref="0x4082e5c8"/>
        <function-ref name="edge" scoped="" ref="0x4082e6a4"/>
        <function-ref name="enable" scoped="" ref="0x4082e780"/>
        <function-ref name="getValue" scoped="" ref="0x4082e85c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x40817780" loc="46:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x40817780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40817940"/>
        <function-ref name="fired" scoped="" ref="0x40817a1c"/>
        <function-ref name="disable" scoped="" ref="0x40817af8"/>
        <function-ref name="edge" scoped="" ref="0x40817bd4"/>
        <function-ref name="enable" scoped="" ref="0x40817cb0"/>
        <function-ref name="getValue" scoped="" ref="0x40817d8c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x4082f164" loc="49:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x4082f164"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4082f324"/>
        <function-ref name="fired" scoped="" ref="0x4082f400"/>
        <function-ref name="disable" scoped="" ref="0x4082f4dc"/>
        <function-ref name="edge" scoped="" ref="0x4082f5b8"/>
        <function-ref name="enable" scoped="" ref="0x4082f694"/>
        <function-ref name="getValue" scoped="" ref="0x4082f770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x4082ea9c" loc="52:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x4082ea9c"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4082ec5c"/>
        <function-ref name="fired" scoped="" ref="0x4082ed38"/>
        <function-ref name="disable" scoped="" ref="0x4082ee14"/>
        <function-ref name="edge" scoped="" ref="0x4082eef0"/>
        <function-ref name="enable" scoped="" ref="0x4082c010"/>
        <function-ref name="getValue" scoped="" ref="0x4082c0ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x40816010" loc="47:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x40816010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408161d0"/>
        <function-ref name="fired" scoped="" ref="0x408162ac"/>
        <function-ref name="disable" scoped="" ref="0x40816388"/>
        <function-ref name="edge" scoped="" ref="0x40816464"/>
        <function-ref name="enable" scoped="" ref="0x40816540"/>
        <function-ref name="getValue" scoped="" ref="0x4081661c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x4082f9b0" loc="50:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x4082f9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4082fb70"/>
        <function-ref name="fired" scoped="" ref="0x4082fc4c"/>
        <function-ref name="disable" scoped="" ref="0x4082fd28"/>
        <function-ref name="edge" scoped="" ref="0x4082fe04"/>
        <function-ref name="enable" scoped="" ref="0x4082fee0"/>
        <function-ref name="getValue" scoped="" ref="0x4082e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x40809f18" loc="45:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x40809f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408170f4"/>
        <function-ref name="fired" scoped="" ref="0x408171d0"/>
        <function-ref name="disable" scoped="" ref="0x408172ac"/>
        <function-ref name="edge" scoped="" ref="0x40817388"/>
        <function-ref name="enable" scoped="" ref="0x40817464"/>
        <function-ref name="getValue" scoped="" ref="0x40817540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x4081685c" loc="48:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x4081685c"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40816a1c"/>
        <function-ref name="fired" scoped="" ref="0x40816af8"/>
        <function-ref name="disable" scoped="" ref="0x40816bd4"/>
        <function-ref name="edge" scoped="" ref="0x40816cb0"/>
        <function-ref name="enable" scoped="" ref="0x40816d8c"/>
        <function-ref name="getValue" scoped="" ref="0x40816e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x40828010" loc="49:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x40828010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x408281d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x40827a0c" loc="44:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x40827a0c"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40827bcc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x40829740" loc="47:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x40829740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40829900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x40828468" loc="50:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x40828468"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40828628"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x40827e64" loc="45:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x40827e64"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40829050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x40829b98" loc="48:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x40829b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40829d58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x408275b4" loc="43:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x408275b4"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40827774"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x408292e8" loc="46:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x408292e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x408294a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x4082a398" loc="44:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x4082a398"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4082a558"/>
        <function-ref name="fired" scoped="" ref="0x4082a634"/>
        <function-ref name="disable" scoped="" ref="0x4082a710"/>
        <function-ref name="edge" scoped="" ref="0x4082a7ec"/>
        <function-ref name="enable" scoped="" ref="0x4082a8c8"/>
        <function-ref name="getValue" scoped="" ref="0x4082a9a4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x4082ab20" loc="45:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x4082ab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4082ace0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x408413e8" loc="44:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x408413e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408415a8"/>
        <function-ref name="fired" scoped="" ref="0x40841684"/>
        <function-ref name="disable" scoped="" ref="0x40841760"/>
        <function-ref name="edge" scoped="" ref="0x4084183c"/>
        <function-ref name="enable" scoped="" ref="0x40841918"/>
        <function-ref name="getValue" scoped="" ref="0x408419f4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40841b70" loc="45:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40841b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40841d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x4083e3e8" loc="44:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x4083e3e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4083e5a8"/>
        <function-ref name="fired" scoped="" ref="0x4083e684"/>
        <function-ref name="disable" scoped="" ref="0x4083e760"/>
        <function-ref name="edge" scoped="" ref="0x4083e83c"/>
        <function-ref name="enable" scoped="" ref="0x4083e918"/>
        <function-ref name="getValue" scoped="" ref="0x4083e9f4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x4083eb70" loc="45:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x4083eb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4083ed30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x408563e8" loc="44:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x408563e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408565a8"/>
        <function-ref name="fired" scoped="" ref="0x40856684"/>
        <function-ref name="disable" scoped="" ref="0x40856760"/>
        <function-ref name="edge" scoped="" ref="0x4085683c"/>
        <function-ref name="enable" scoped="" ref="0x40856918"/>
        <function-ref name="getValue" scoped="" ref="0x408569f4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40856b70" loc="45:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40856b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40856d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x40854514" loc="44:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x40854514"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408546d4"/>
        <function-ref name="fired" scoped="" ref="0x408547b0"/>
        <function-ref name="disable" scoped="" ref="0x4085488c"/>
        <function-ref name="edge" scoped="" ref="0x40854968"/>
        <function-ref name="enable" scoped="" ref="0x40854a44"/>
        <function-ref name="getValue" scoped="" ref="0x40854b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40854c9c" loc="45:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40854c9c"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40854e5c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x40852690" loc="44:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x40852690"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40852850"/>
        <function-ref name="fired" scoped="" ref="0x4085292c"/>
        <function-ref name="disable" scoped="" ref="0x40852a08"/>
        <function-ref name="edge" scoped="" ref="0x40852ae4"/>
        <function-ref name="enable" scoped="" ref="0x40852bc0"/>
        <function-ref name="getValue" scoped="" ref="0x40852c9c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40852e18" loc="45:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40852e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40851010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x4084f710" loc="44:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x4084f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4084f8d0"/>
        <function-ref name="fired" scoped="" ref="0x4084f9ac"/>
        <function-ref name="disable" scoped="" ref="0x4084fa88"/>
        <function-ref name="edge" scoped="" ref="0x4084fb64"/>
        <function-ref name="enable" scoped="" ref="0x4084fc40"/>
        <function-ref name="getValue" scoped="" ref="0x4084fd1c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x4084fe98" loc="45:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x4084fe98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4084e06c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x4084d76c" loc="44:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x4084d76c"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4084d92c"/>
        <function-ref name="fired" scoped="" ref="0x4084da08"/>
        <function-ref name="disable" scoped="" ref="0x4084dae4"/>
        <function-ref name="edge" scoped="" ref="0x4084dbc0"/>
        <function-ref name="enable" scoped="" ref="0x4084dc9c"/>
        <function-ref name="getValue" scoped="" ref="0x4084dd78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x4084def4" loc="45:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x4084def4"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4084c0d4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC_CCA" ref="0x4086070c" loc="51:/home/user/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC_CCA" scoped="" ref="0x4086070c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408608cc"/>
        <function-ref name="isInput" scoped="" ref="0x408609a8"/>
        <function-ref name="toggle" scoped="" ref="0x40860a84"/>
        <function-ref name="isOutput" scoped="" ref="0x40860b60"/>
        <function-ref name="get" scoped="" ref="0x40860c3c"/>
        <function-ref name="makeOutput" scoped="" ref="0x40860d18"/>
        <function-ref name="set" scoped="" ref="0x40860df4"/>
        <function-ref name="clr" scoped="" ref="0x40860ed0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x40860080" loc="47:/home/user/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x40860080"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40860240"/>
        <function-ref name="disable" scoped="" ref="0x4086031c"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x408603f8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x408604d4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCATask" ref="0x4085fe50" loc="69:/home/user/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCATask" scoped="" ref="0x4085fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4085e050"/>
        <function-ref name="runTask" scoped="" ref="0x4085e12c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x409b5428" loc="69:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x409b5428"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b56e8"/>
        <function-ref name="write" scoped="" ref="0x409b57c4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x409bba64" loc="47:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x409bba64"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409bbc24"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x409b8aa0" loc="63:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x409b8aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b8c60"/>
        <function-ref name="write" scoped="" ref="0x409b8d3c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x409b418c" loc="72:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x409b418c"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b434c"/>
        <function-ref name="write" scoped="" ref="0x409b4428"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x409b45a4" loc="73:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x409b45a4"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b4764"/>
        <function-ref name="write" scoped="" ref="0x409b4840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x409ce5a4" loc="94:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x409ce5a4"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ce764"/>
        <function-ref name="write" scoped="" ref="0x409ce840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x409cf4a8" loc="90:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x409cf4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409cf668"/>
        <function-ref name="write" scoped="" ref="0x409cf744"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x409ba4c8" loc="50:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x409ba4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409ba688"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x409d1c58" loc="88:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x409d1c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409d1e18"/>
        <function-ref name="write" scoped="" ref="0x409d1ef4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x409b6310" loc="65:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x409b6310"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b64d0"/>
        <function-ref name="write" scoped="" ref="0x409b65ac"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x409b6b40" loc="67:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x409b6b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b6d00"/>
        <function-ref name="write" scoped="" ref="0x409b6ddc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x409b3eb0" loc="79:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x409b3eb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409d20b8"/>
        <function-ref name="write" scoped="" ref="0x409d2194"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x409b49bc" loc="74:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x409b49bc"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b4b7c"/>
        <function-ref name="write" scoped="" ref="0x409b4c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x409bcec0" loc="42:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x409bcec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x409bb0b8"/>
        <function-ref name="abortRelease" scoped="" ref="0x409bb194"/>
        <function-ref name="attemptRelease" scoped="" ref="0x409bb270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x409b91cc" loc="54:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x409b91cc"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409b938c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x409b9508" loc="55:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x409b9508"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409b9748"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x409b98c4" loc="56:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x409b98c4"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409b9a84"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x409cf090" loc="89:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x409cf090"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409cf250"/>
        <function-ref name="write" scoped="" ref="0x409cf32c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x409bab40" loc="52:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x409bab40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409bad00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x409b6728" loc="66:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x409b6728"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b68e8"/>
        <function-ref name="write" scoped="" ref="0x409b69c4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x409b8eb8" loc="64:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x409b8eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b60b8"/>
        <function-ref name="write" scoped="" ref="0x409b6194"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x409bb728" loc="46:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x409bb728"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409bb8e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x409ce18c" loc="93:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x409ce18c"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ce34c"/>
        <function-ref name="write" scoped="" ref="0x409ce428"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x409cf8c0" loc="91:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x409cf8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409cfa80"/>
        <function-ref name="write" scoped="" ref="0x409cfb5c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x409d2310" loc="80:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x409d2310"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409d24d0"/>
        <function-ref name="write" scoped="" ref="0x409d25ac"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x409d1840" loc="87:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x409d1840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409d1a00"/>
        <function-ref name="write" scoped="" ref="0x409d1adc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x409b3268" loc="76:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x409b3268"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b3428"/>
        <function-ref name="write" scoped="" ref="0x409b3504"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x409ce9bc" loc="97:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x409ce9bc"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x409ced7c"/>
        <function-ref name="writeDone" scoped="" ref="0x409cee58"/>
        <function-ref name="write" scoped="" ref="0x409cd010"/>
        <function-ref name="beginRead" scoped="" ref="0x409cd0ec"/>
        <function-ref name="readDone" scoped="" ref="0x409cd1c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x409bb3ec" loc="45:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x409bb3ec"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409bb5ac"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x409b8688" loc="62:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x409b8688"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b8848"/>
        <function-ref name="write" scoped="" ref="0x409b8924"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x409b5010" loc="68:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x409b5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b51d0"/>
        <function-ref name="write" scoped="" ref="0x409b52ac"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x409b4dd4" loc="75:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x409b4dd4"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b3010"/>
        <function-ref name="write" scoped="" ref="0x409b30ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x409b5940" loc="70:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x409b5940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b5b00"/>
        <function-ref name="write" scoped="" ref="0x409b5bdc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x409bbda0" loc="48:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x409bbda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409ba010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x409b5d58" loc="71:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x409b5d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b5f18"/>
        <function-ref name="write" scoped="" ref="0x409b4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x409bc834" loc="41:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x409bc834"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x409bc9f4"/>
        <function-ref name="immediateRequest" scoped="" ref="0x409bcad0"/>
        <function-ref name="request" scoped="" ref="0x409bcbac"/>
        <function-ref name="granted" scoped="" ref="0x409bcc88"/>
        <function-ref name="isOwner" scoped="" ref="0x409bcd64"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x409b9c00" loc="57:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x409b9c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409b9dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x409b834c" loc="59:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x409b834c"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409b850c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x409d1428" loc="86:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x409d1428"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409d15e8"/>
        <function-ref name="write" scoped="" ref="0x409d16c4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x409d1010" loc="85:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x409d1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409d11d0"/>
        <function-ref name="write" scoped="" ref="0x409d12ac"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x409bae7c" loc="53:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x409bae7c"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409b9050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x409d2b40" loc="82:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x409d2b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409d2d00"/>
        <function-ref name="write" scoped="" ref="0x409d2ddc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x409cfcd8" loc="92:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x409cfcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409cfe98"/>
        <function-ref name="write" scoped="" ref="0x409ce010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x409d2728" loc="81:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x409d2728"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409d28e8"/>
        <function-ref name="write" scoped="" ref="0x409d29c4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x409ba18c" loc="49:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x409ba18c"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409ba34c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x409b3a98" loc="78:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x409b3a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b3c58"/>
        <function-ref name="write" scoped="" ref="0x409b3d34"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x409ba804" loc="51:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x409ba804"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409ba9c4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x409b3680" loc="77:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x409b3680"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b3840"/>
        <function-ref name="write" scoped="" ref="0x409b391c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x409b8010" loc="58:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x409b8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409b81d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x409cd344" loc="98:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x409cd344"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x409cd504"/>
        <function-ref name="writeDone" scoped="" ref="0x409cd5e0"/>
        <function-ref name="write" scoped="" ref="0x409cd6bc"/>
        <function-ref name="beginRead" scoped="" ref="0x409cd798"/>
        <function-ref name="readDone" scoped="" ref="0x409cd874"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x40889940" loc="41:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x40889940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40889b00"/>
        <function-ref name="writeDone" scoped="" ref="0x40889bdc"/>
        <function-ref name="write" scoped="" ref="0x40889cb8"/>
        <function-ref name="beginRead" scoped="" ref="0x40889d94"/>
        <function-ref name="readDone" scoped="" ref="0x40889e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x408890f8" loc="40:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x408890f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x408892b8"/>
        <function-ref name="abortRelease" scoped="" ref="0x40889394"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40889470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x4088834c" loc="42:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x4088834c"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4088850c"/>
        <function-ref name="write" scoped="" ref="0x408885e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x40888ad4" loc="43:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x40888ad4"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40888c94"/>
        <function-ref name="write" scoped="" ref="0x40888d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40871980" loc="39:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40871980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40871b40"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40871c1c"/>
        <function-ref name="request" scoped="" ref="0x40871cf8"/>
        <function-ref name="granted" scoped="" ref="0x40871dd4"/>
        <function-ref name="isOwner" scoped="" ref="0x40871eb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x40887294" loc="44:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x40887294"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40887454"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x40899040" loc="55:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x40899040"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40899200"/>
        <function-ref name="sendDone" scoped="" ref="0x408992dc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x40882010" loc="46:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x40882010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x408821d0"/>
        <function-ref name="writeDone" scoped="" ref="0x408822ac"/>
        <function-ref name="write" scoped="" ref="0x40882388"/>
        <function-ref name="beginRead" scoped="" ref="0x40882464"/>
        <function-ref name="readDone" scoped="" ref="0x40882540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40887d90" loc="44:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40887d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40883010"/>
        <function-ref name="abortRelease" scoped="" ref="0x408830ec"/>
        <function-ref name="attemptRelease" scoped="" ref="0x408831c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x4087fcc0" loc="54:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x4087fcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x4087fe80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x408994e8" loc="56:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WorkingState" scoped="" ref="0x408994e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x408996a8"/>
        <function-ref name="toIdle" scoped="" ref="0x40899784"/>
        <function-ref name="isState" scoped="" ref="0x40899860"/>
        <function-ref name="isIdle" scoped="" ref="0x4089993c"/>
        <function-ref name="requestState" scoped="" ref="0x40899a18"/>
        <function-ref name="forceState" scoped="" ref="0x40899af4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x40880d04" loc="53:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40880d04"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40880ec4"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4087f010"/>
        <function-ref name="request" scoped="" ref="0x4087f0ec"/>
        <function-ref name="granted" scoped="" ref="0x4087f1c8"/>
        <function-ref name="isOwner" scoped="" ref="0x4087f2a4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x408829e4" loc="47:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x408829e4"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40882ba4"/>
        <function-ref name="write" scoped="" ref="0x40882c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x40880170" loc="48:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x40880170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40880330"/>
        <function-ref name="write" scoped="" ref="0x4088040c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40899c5c" loc="57:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40899c5c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40899e1c"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40899ef8"/>
        <function-ref name="led1On" scoped="" ref="0x40898010"/>
        <function-ref name="led1Toggle" scoped="" ref="0x408980ec"/>
        <function-ref name="led2Toggle" scoped="" ref="0x408981c8"/>
        <function-ref name="get" scoped="" ref="0x408982a4"/>
        <function-ref name="led1Off" scoped="" ref="0x40898380"/>
        <function-ref name="led2Off" scoped="" ref="0x408986f0"/>
        <function-ref name="set" scoped="" ref="0x4089845c"/>
        <function-ref name="led0On" scoped="" ref="0x40898538"/>
        <function-ref name="led2On" scoped="" ref="0x40898614"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40883618" loc="45:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40883618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x408837d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x408838b4"/>
        <function-ref name="request" scoped="" ref="0x40883990"/>
        <function-ref name="granted" scoped="" ref="0x40883a6c"/>
        <function-ref name="isOwner" scoped="" ref="0x40883b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x4089391c" loc="88:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grant" scoped="" ref="0x4089391c"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40893adc"/>
        <function-ref name="runTask" scoped="" ref="0x40893bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x408808e4" loc="49:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x408808e4"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40880aa4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x408b6010" loc="67:/home/user/tinyos-main/tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x408b6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x408b61d0"/>
        <function-ref name="toIdle" scoped="" ref="0x408b62ac"/>
        <function-ref name="isState" scoped="" ref="0x408b6388"/>
        <function-ref name="isIdle" scoped="" ref="0x408b6464"/>
        <function-ref name="requestState" scoped="" ref="0x408b6540"/>
        <function-ref name="forceState" scoped="" ref="0x408b661c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x408d09c0" loc="66:/home/user/tinyos-main/tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x408d09c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x408d0b80"/>
        <function-ref name="toIdle" scoped="" ref="0x408d0c5c"/>
        <function-ref name="isState" scoped="" ref="0x408d0d38"/>
        <function-ref name="isIdle" scoped="" ref="0x408d0e14"/>
        <function-ref name="requestState" scoped="" ref="0x408d0ef0"/>
        <function-ref name="forceState" scoped="" ref="0x408cd010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408cd980" loc="66:/home/user/tinyos-main/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408cd980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408cdb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x408ca010" loc="67:/home/user/tinyos-main/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x408ca010"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x408ca1d0"/>
        <function-ref name="toIdle" scoped="" ref="0x408ca2ac"/>
        <function-ref name="isState" scoped="" ref="0x408ca388"/>
        <function-ref name="isIdle" scoped="" ref="0x408ca464"/>
        <function-ref name="requestState" scoped="" ref="0x408ca540"/>
        <function-ref name="forceState" scoped="" ref="0x408ca61c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x408cecd4" loc="43:/home/user/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x408cecd4"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408cee94"/>
        <function-ref name="sendDone" scoped="" ref="0x40986010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x408ce9b8" loc="42:/home/user/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x408ce9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x408ceb78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408ce010" loc="39:/home/user/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408ce010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408ce1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x408ce32c" loc="40:/home/user/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x408ce32c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x408ce4ec"/>
        <function-ref name="immediateRequest" scoped="" ref="0x408ce5c8"/>
        <function-ref name="request" scoped="" ref="0x408ce6a4"/>
        <function-ref name="granted" scoped="" ref="0x408ce780"/>
        <function-ref name="isOwner" scoped="" ref="0x408ce85c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x408d549c" loc="84:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x408d549c"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408d565c"/>
        <function-ref name="sendDone" scoped="" ref="0x408d5738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x408d9d28" loc="82:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x408d9d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x408d9ee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408d99c4" loc="81:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408d99c4"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408d9b84"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x408d3e74" loc="83:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x408d3e74"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x408d5050"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x408d512c"/>
        <function-ref name="splitRead" scoped="" ref="0x408d5208"/>
        <function-ref name="write" scoped="" ref="0x408d52e4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x408d5ba8" loc="85:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x408d5ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x408d5d68"/>
        <function-ref name="immediateRequest" scoped="" ref="0x408d5e44"/>
        <function-ref name="request" scoped="" ref="0x408d5f20"/>
        <function-ref name="granted" scoped="" ref="0x408d2010"/>
        <function-ref name="isOwner" scoped="" ref="0x408d20ec"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x408ff58c" loc="296:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x408ff58c"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x408ff74c"/>
        <function-ref name="runTask" scoped="" ref="0x408ff828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x408eb968" loc="94:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x408eb968"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408ebb28"/>
        <function-ref name="sendDone" scoped="" ref="0x408ebc04"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x408e87ac" loc="99:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x408e87ac"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x408e896c"/>
        <function-ref name="immediateRequest" scoped="" ref="0x408e8a48"/>
        <function-ref name="request" scoped="" ref="0x408e8b24"/>
        <function-ref name="granted" scoped="" ref="0x408e8c00"/>
        <function-ref name="isOwner" scoped="" ref="0x408e8cdc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x408eb010" loc="92:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x408eb010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x408eb1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408d2c38" loc="91:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408d2c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408d2df8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x408f6b54" loc="98:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x408f6b54"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x408f6d14"/>
        <function-ref name="sleep" scoped="" ref="0x408e81c8"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x408f6ecc"/>
        <function-ref name="dataReady" scoped="" ref="0x408e82a4"/>
        <function-ref name="initMaster" scoped="" ref="0x408e90ec"/>
        <function-ref name="setMasterBit" scoped="" ref="0x408e91c8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x408e92a4"/>
        <function-ref name="read" scoped="" ref="0x408e9380"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x408e945c"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x408e9538"/>
        <function-ref name="setClock" scoped="" ref="0x408e9614"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x408e96f0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x408e97cc"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x408e9928"/>
        <function-ref name="setDataOrder" scoped="" ref="0x408e9a04"/>
        <function-ref name="write" scoped="" ref="0x408e9ae0"/>
        <function-ref name="enableSpi" scoped="" ref="0x408e9bbc"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x408e9c98"/>
        <function-ref name="getClockPhase" scoped="" ref="0x408e9d74"/>
        <function-ref name="getClock" scoped="" ref="0x408e9e50"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x408e8010"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x408f6df0"/>
        <function-ref name="setClockPhase" scoped="" ref="0x408e9010"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x408e80ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x408eb37c" loc="93:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x408eb37c"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x408eb53c"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x408eb618"/>
        <function-ref name="splitRead" scoped="" ref="0x408eb6f4"/>
        <function-ref name="write" scoped="" ref="0x408eb7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x408ea0fc" loc="95:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x408ea0fc"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x408ea2bc"/>
        <function-ref name="immediateRequest" scoped="" ref="0x408ea398"/>
        <function-ref name="request" scoped="" ref="0x408ea474"/>
        <function-ref name="granted" scoped="" ref="0x408ea550"/>
        <function-ref name="isOwner" scoped="" ref="0x408ea62c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x408f3d3c" loc="100:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x408f3d3c"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x408f3efc"/>
        <function-ref name="userId" scoped="" ref="0x408f5010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x408f51d0" loc="101:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x408f51d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x408f5390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x408ec6c0" loc="76:/home/user/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x408ec6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x408ec880"/>
        <function-ref name="sleep" scoped="" ref="0x40922c98"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x408eca38"/>
        <function-ref name="dataReady" scoped="" ref="0x40922d74"/>
        <function-ref name="initMaster" scoped="" ref="0x408ecbf0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x408ecccc"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x408ecda8"/>
        <function-ref name="read" scoped="" ref="0x408ece84"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40922010"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x409220ec"/>
        <function-ref name="setClock" scoped="" ref="0x409221c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x409222a4"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40922380"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x409224dc"/>
        <function-ref name="setDataOrder" scoped="" ref="0x409225b8"/>
        <function-ref name="write" scoped="" ref="0x40922694"/>
        <function-ref name="enableSpi" scoped="" ref="0x40922770"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x4092284c"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40922928"/>
        <function-ref name="getClock" scoped="" ref="0x40922a04"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40922ae0"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x408ec95c"/>
        <function-ref name="setClockPhase" scoped="" ref="0x408ecb14"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40922bbc"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x4091b564" loc="81:/home/user/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x4091b564"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4091b724"/>
        <function-ref name="isInput" scoped="" ref="0x4091b800"/>
        <function-ref name="toggle" scoped="" ref="0x4091b8dc"/>
        <function-ref name="isOutput" scoped="" ref="0x4091b9b8"/>
        <function-ref name="get" scoped="" ref="0x4091ba94"/>
        <function-ref name="makeOutput" scoped="" ref="0x4091bb70"/>
        <function-ref name="set" scoped="" ref="0x4091bc4c"/>
        <function-ref name="clr" scoped="" ref="0x4091bd28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x4091c1e8" loc="79:/home/user/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x4091c1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4091c3a8"/>
        <function-ref name="isInput" scoped="" ref="0x4091c484"/>
        <function-ref name="toggle" scoped="" ref="0x4091c560"/>
        <function-ref name="isOutput" scoped="" ref="0x4091c63c"/>
        <function-ref name="get" scoped="" ref="0x4091c718"/>
        <function-ref name="makeOutput" scoped="" ref="0x4091c7f4"/>
        <function-ref name="set" scoped="" ref="0x4091c8d0"/>
        <function-ref name="clr" scoped="" ref="0x4091c9ac"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x40937788" loc="78:/home/user/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x40937788"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40937948"/>
        <function-ref name="isInput" scoped="" ref="0x40937a24"/>
        <function-ref name="toggle" scoped="" ref="0x40937b00"/>
        <function-ref name="isOutput" scoped="" ref="0x40937bdc"/>
        <function-ref name="get" scoped="" ref="0x40937cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40937d94"/>
        <function-ref name="set" scoped="" ref="0x40937e70"/>
        <function-ref name="clr" scoped="" ref="0x4091c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x409372ec" loc="75:/home/user/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x409372ec"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x409374ac"/>
        <function-ref name="stop" scoped="" ref="0x40937588"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x4091bf28" loc="82:/home/user/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x4091bf28"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x409360fc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x409219b8" loc="74:/home/user/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x409219b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40921b78"/>
        <function-ref name="sleep" scoped="" ref="0x4091d010"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40921d30"/>
        <function-ref name="dataReady" scoped="" ref="0x4091d0ec"/>
        <function-ref name="initMaster" scoped="" ref="0x40921ee8"/>
        <function-ref name="setMasterBit" scoped="" ref="0x4091e010"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x4091e0ec"/>
        <function-ref name="read" scoped="" ref="0x4091e1c8"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x4091e2a4"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x4091e380"/>
        <function-ref name="setClock" scoped="" ref="0x4091e45c"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x4091e538"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x4091e614"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x4091e770"/>
        <function-ref name="setDataOrder" scoped="" ref="0x4091e84c"/>
        <function-ref name="write" scoped="" ref="0x4091e928"/>
        <function-ref name="enableSpi" scoped="" ref="0x4091ea04"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x4091eae0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x4091ebbc"/>
        <function-ref name="getClock" scoped="" ref="0x4091ec98"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x4091ed74"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40921c54"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40921e0c"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x4091ee50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x4091cb90" loc="80:/home/user/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x4091cb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4091cd50"/>
        <function-ref name="isInput" scoped="" ref="0x4091ce2c"/>
        <function-ref name="toggle" scoped="" ref="0x4091cf08"/>
        <function-ref name="isOutput" scoped="" ref="0x4091b010"/>
        <function-ref name="get" scoped="" ref="0x4091b0ec"/>
        <function-ref name="makeOutput" scoped="" ref="0x4091b1c8"/>
        <function-ref name="set" scoped="" ref="0x4091b2a4"/>
        <function-ref name="clr" scoped="" ref="0x4091b380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x409749b4" loc="86:/home/user/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x409749b4"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40974b84"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40974c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x409922d8" loc="89:/home/user/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x409922d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x409924a8"/>
        <function-ref name="configure" scoped="" ref="0x40992584"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x409742a8" loc="85:/home/user/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x409742a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40974478"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40974554"/>
        <function-ref name="request" scoped="" ref="0x40974630"/>
        <function-ref name="granted" scoped="" ref="0x4097470c"/>
        <function-ref name="isOwner" scoped="" ref="0x409747e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40974d9c" loc="87:/home/user/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40974d9c"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40992010"/>
        <function-ref name="userId" scoped="" ref="0x409920ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x411417fc" loc="44:/home/user/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x411417fc"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x411419bc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x41141b18" loc="45:/home/user/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x41141b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x41141cd8"/>
        <function-ref name="isEmpty" scoped="" ref="0x41141db4"/>
        <function-ref name="isEnqueued" scoped="" ref="0x41141e90"/>
        <function-ref name="dequeue" scoped="" ref="0x4113f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x4113d2b8" loc="52:/home/user/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x4113d2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x4113d488"/>
        <function-ref name="immediateRequested" scoped="" ref="0x4113d564"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x4113db38" loc="56:/home/user/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x4113db38"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x4113dd08"/>
        <function-ref name="configure" scoped="" ref="0x4113dde4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x4113c010" loc="57:/home/user/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x4113c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x4113c1d0"/>
        <function-ref name="isEmpty" scoped="" ref="0x4113c2ac"/>
        <function-ref name="isEnqueued" scoped="" ref="0x4113c388"/>
        <function-ref name="dequeue" scoped="" ref="0x4113c464"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4113fad0" loc="51:/home/user/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4113fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4113fca0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4113fd7c"/>
        <function-ref name="request" scoped="" ref="0x4113fe58"/>
        <function-ref name="granted" scoped="" ref="0x4113d010"/>
        <function-ref name="isOwner" scoped="" ref="0x4113d0ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x4113d6a0" loc="53:/home/user/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x4113d6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x4113d860"/>
        <function-ref name="userId" scoped="" ref="0x4113d93c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x4113c5e0" loc="69:/home/user/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x4113c5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4113c7a0"/>
        <function-ref name="runTask" scoped="" ref="0x4113c87c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x4098d2bc" loc="45:/home/user/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x4098d2bc"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4098d47c"/>
        <function-ref name="isInput" scoped="" ref="0x4098d558"/>
        <function-ref name="toggle" scoped="" ref="0x4098d634"/>
        <function-ref name="isOutput" scoped="" ref="0x4098d710"/>
        <function-ref name="get" scoped="" ref="0x4098d7ec"/>
        <function-ref name="makeOutput" scoped="" ref="0x4098d8c8"/>
        <function-ref name="set" scoped="" ref="0x4098d9a4"/>
        <function-ref name="clr" scoped="" ref="0x4098da80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4098e3f8" loc="40:/home/user/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4098e3f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4098e5b8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4098e694"/>
        <function-ref name="request" scoped="" ref="0x4098e770"/>
        <function-ref name="granted" scoped="" ref="0x4098e84c"/>
        <function-ref name="isOwner" scoped="" ref="0x4098e928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x4098eb88" loc="44:/home/user/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x4098eb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4098ed48"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4098ee24"/>
        <function-ref name="request" scoped="" ref="0x4098ef00"/>
        <function-ref name="granted" scoped="" ref="0x4098d010"/>
        <function-ref name="isOwner" scoped="" ref="0x4098d0ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40983060" loc="46:/home/user/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40983060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40983220"/>
        <function-ref name="led0Toggle" scoped="" ref="0x409832fc"/>
        <function-ref name="led1On" scoped="" ref="0x409833d8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x409834b4"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40983590"/>
        <function-ref name="get" scoped="" ref="0x4098366c"/>
        <function-ref name="led1Off" scoped="" ref="0x40983748"/>
        <function-ref name="led2Off" scoped="" ref="0x40983ab8"/>
        <function-ref name="set" scoped="" ref="0x40983824"/>
        <function-ref name="led0On" scoped="" ref="0x40983900"/>
        <function-ref name="led2On" scoped="" ref="0x409839dc"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x4099f310" loc="50:/home/user/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x4099f310"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4099f4d0"/>
        <function-ref name="isInput" scoped="" ref="0x4099f5ac"/>
        <function-ref name="toggle" scoped="" ref="0x4099f688"/>
        <function-ref name="isOutput" scoped="" ref="0x4099f764"/>
        <function-ref name="get" scoped="" ref="0x4099f840"/>
        <function-ref name="makeOutput" scoped="" ref="0x4099f91c"/>
        <function-ref name="set" scoped="" ref="0x4099f9f8"/>
        <function-ref name="clr" scoped="" ref="0x4099fad4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x409a0328" loc="46:/home/user/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x409a0328"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409a04e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x4099fcb8" loc="51:/home/user/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x4099fcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4099fe78"/>
        <function-ref name="isInput" scoped="" ref="0x4099e010"/>
        <function-ref name="toggle" scoped="" ref="0x4099e0ec"/>
        <function-ref name="isOutput" scoped="" ref="0x4099e1c8"/>
        <function-ref name="get" scoped="" ref="0x4099e2a4"/>
        <function-ref name="makeOutput" scoped="" ref="0x4099e380"/>
        <function-ref name="set" scoped="" ref="0x4099e45c"/>
        <function-ref name="clr" scoped="" ref="0x4099e538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x409a0650" loc="47:/home/user/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x409a0650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x409a0810"/>
        <function-ref name="led0Toggle" scoped="" ref="0x409a08ec"/>
        <function-ref name="led1On" scoped="" ref="0x409a09c8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x409a0aa4"/>
        <function-ref name="led2Toggle" scoped="" ref="0x409a0b80"/>
        <function-ref name="get" scoped="" ref="0x409a0c5c"/>
        <function-ref name="led1Off" scoped="" ref="0x409a0d38"/>
        <function-ref name="led2Off" scoped="" ref="0x4099f0ec"/>
        <function-ref name="set" scoped="" ref="0x409a0e14"/>
        <function-ref name="led0On" scoped="" ref="0x409a0ef0"/>
        <function-ref name="led2On" scoped="" ref="0x4099f010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x4099e71c" loc="52:/home/user/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x4099e71c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4099e8dc"/>
        <function-ref name="isInput" scoped="" ref="0x4099e9b8"/>
        <function-ref name="toggle" scoped="" ref="0x4099ea94"/>
        <function-ref name="isOutput" scoped="" ref="0x4099eb70"/>
        <function-ref name="get" scoped="" ref="0x4099ec4c"/>
        <function-ref name="makeOutput" scoped="" ref="0x4099ed28"/>
        <function-ref name="set" scoped="" ref="0x4099ee04"/>
        <function-ref name="clr" scoped="" ref="0x4099eee0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x409ad05c" loc="44:/home/user/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x409ad05c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x409ad21c"/>
        <function-ref name="isInput" scoped="" ref="0x409ad2f8"/>
        <function-ref name="toggle" scoped="" ref="0x409ad3d4"/>
        <function-ref name="isOutput" scoped="" ref="0x409ad4b0"/>
        <function-ref name="get" scoped="" ref="0x409ad58c"/>
        <function-ref name="makeOutput" scoped="" ref="0x409ad668"/>
        <function-ref name="set" scoped="" ref="0x409ad744"/>
        <function-ref name="clr" scoped="" ref="0x409ad820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x409ada24" loc="45:/home/user/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x409ada24"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x409adbe4"/>
        <function-ref name="isInput" scoped="" ref="0x409adcc0"/>
        <function-ref name="toggle" scoped="" ref="0x409add9c"/>
        <function-ref name="isOutput" scoped="" ref="0x409ade78"/>
        <function-ref name="get" scoped="" ref="0x409ac010"/>
        <function-ref name="makeOutput" scoped="" ref="0x409ac0ec"/>
        <function-ref name="set" scoped="" ref="0x409ac1c8"/>
        <function-ref name="clr" scoped="" ref="0x409ac2a4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x409acdf4" loc="47:/home/user/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x409acdf4"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409ab010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x409ac4a8" loc="46:/home/user/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x409ac4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x409ac668"/>
        <function-ref name="isInput" scoped="" ref="0x409ac744"/>
        <function-ref name="toggle" scoped="" ref="0x409ac820"/>
        <function-ref name="isOutput" scoped="" ref="0x409ac8fc"/>
        <function-ref name="get" scoped="" ref="0x409ac9d8"/>
        <function-ref name="makeOutput" scoped="" ref="0x409acab4"/>
        <function-ref name="set" scoped="" ref="0x409acb90"/>
        <function-ref name="clr" scoped="" ref="0x409acc6c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x409e1428" loc="69:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x409e1428"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409e16e8"/>
        <function-ref name="write" scoped="" ref="0x409e17c4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x409c7aa0" loc="47:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x409c7aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c7c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x409c3aa0" loc="63:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x409c3aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409c3c60"/>
        <function-ref name="write" scoped="" ref="0x409c3d3c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x409e018c" loc="72:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x409e018c"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409e034c"/>
        <function-ref name="write" scoped="" ref="0x409e0428"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x409e05a4" loc="73:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x409e05a4"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409e0764"/>
        <function-ref name="write" scoped="" ref="0x409e0840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x409da5a4" loc="94:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x409da5a4"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409da764"/>
        <function-ref name="write" scoped="" ref="0x409da840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x409db4a8" loc="90:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x409db4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409db668"/>
        <function-ref name="write" scoped="" ref="0x409db744"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x409c64c8" loc="50:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x409c64c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c6688"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x409dcc58" loc="88:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x409dcc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409dce18"/>
        <function-ref name="write" scoped="" ref="0x409dcef4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x409e2310" loc="65:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x409e2310"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409e24d0"/>
        <function-ref name="write" scoped="" ref="0x409e25ac"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x409e2b40" loc="67:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x409e2b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409e2d00"/>
        <function-ref name="write" scoped="" ref="0x409e2ddc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x409deeb0" loc="79:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x409deeb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409dd0b8"/>
        <function-ref name="write" scoped="" ref="0x409dd194"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x409e09bc" loc="74:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x409e09bc"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409e0b7c"/>
        <function-ref name="write" scoped="" ref="0x409e0c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x409c8f20" loc="42:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x409c8f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x409c70f4"/>
        <function-ref name="abortRelease" scoped="" ref="0x409c71d0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x409c72ac"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x409c41cc" loc="54:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x409c41cc"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c438c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x409c4508" loc="55:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x409c4508"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c4748"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x409c48c4" loc="56:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x409c48c4"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c4a84"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x409db090" loc="89:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x409db090"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409db250"/>
        <function-ref name="write" scoped="" ref="0x409db32c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x409c6b40" loc="52:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x409c6b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c6d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x409e2728" loc="66:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x409e2728"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409e28e8"/>
        <function-ref name="write" scoped="" ref="0x409e29c4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x409c3eb8" loc="64:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x409c3eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409e20b8"/>
        <function-ref name="write" scoped="" ref="0x409e2194"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x409c7764" loc="46:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x409c7764"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c7924"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x409da18c" loc="93:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x409da18c"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409da34c"/>
        <function-ref name="write" scoped="" ref="0x409da428"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x409db8c0" loc="91:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x409db8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409dba80"/>
        <function-ref name="write" scoped="" ref="0x409dbb5c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x409dd310" loc="80:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x409dd310"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409dd4d0"/>
        <function-ref name="write" scoped="" ref="0x409dd5ac"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x409dc840" loc="87:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x409dc840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409dca00"/>
        <function-ref name="write" scoped="" ref="0x409dcadc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x409de268" loc="76:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x409de268"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409de428"/>
        <function-ref name="write" scoped="" ref="0x409de504"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x409da9bc" loc="97:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x409da9bc"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x409dad7c"/>
        <function-ref name="writeDone" scoped="" ref="0x409dae58"/>
        <function-ref name="write" scoped="" ref="0x409d8010"/>
        <function-ref name="beginRead" scoped="" ref="0x409d80ec"/>
        <function-ref name="readDone" scoped="" ref="0x409d81c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x409c7428" loc="45:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x409c7428"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c75e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x409c3688" loc="62:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x409c3688"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409c3848"/>
        <function-ref name="write" scoped="" ref="0x409c3924"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x409e1010" loc="68:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x409e1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409e11d0"/>
        <function-ref name="write" scoped="" ref="0x409e12ac"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x409e0dd4" loc="75:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x409e0dd4"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409de010"/>
        <function-ref name="write" scoped="" ref="0x409de0ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x409e1940" loc="70:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x409e1940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409e1b00"/>
        <function-ref name="write" scoped="" ref="0x409e1bdc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x409c7ddc" loc="48:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x409c7ddc"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x409e1d58" loc="71:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x409e1d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409e1f18"/>
        <function-ref name="write" scoped="" ref="0x409e0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x409c8894" loc="41:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x409c8894"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x409c8a54"/>
        <function-ref name="immediateRequest" scoped="" ref="0x409c8b30"/>
        <function-ref name="request" scoped="" ref="0x409c8c0c"/>
        <function-ref name="granted" scoped="" ref="0x409c8ce8"/>
        <function-ref name="isOwner" scoped="" ref="0x409c8dc4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x409c4c00" loc="57:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x409c4c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c4dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x409c334c" loc="59:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x409c334c"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c350c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x409dc428" loc="86:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x409dc428"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409dc5e8"/>
        <function-ref name="write" scoped="" ref="0x409dc6c4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x409dc010" loc="85:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x409dc010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409dc1d0"/>
        <function-ref name="write" scoped="" ref="0x409dc2ac"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x409c6e7c" loc="53:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x409c6e7c"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c4050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x409ddb40" loc="82:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x409ddb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ddd00"/>
        <function-ref name="write" scoped="" ref="0x409ddddc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x409dbcd8" loc="92:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x409dbcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409dbe98"/>
        <function-ref name="write" scoped="" ref="0x409da010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x409dd728" loc="81:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x409dd728"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409dd8e8"/>
        <function-ref name="write" scoped="" ref="0x409dd9c4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x409c618c" loc="49:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x409c618c"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c634c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x409dea98" loc="78:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x409dea98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409dec58"/>
        <function-ref name="write" scoped="" ref="0x409ded34"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x409c6804" loc="51:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x409c6804"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c69c4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x409de680" loc="77:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x409de680"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409de840"/>
        <function-ref name="write" scoped="" ref="0x409de91c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x409c3010" loc="58:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x409c3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c31d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x409d8344" loc="98:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x409d8344"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x409d8504"/>
        <function-ref name="writeDone" scoped="" ref="0x409d85e0"/>
        <function-ref name="write" scoped="" ref="0x409d86bc"/>
        <function-ref name="beginRead" scoped="" ref="0x409d8798"/>
        <function-ref name="readDone" scoped="" ref="0x409d8874"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x409efeb0" loc="69:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x409efeb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ee1f4"/>
        <function-ref name="write" scoped="" ref="0x409ee2d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x409d4688" loc="47:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x409d4688"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409d4848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x409f15a4" loc="63:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x409f15a4"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409f1764"/>
        <function-ref name="write" scoped="" ref="0x409f1840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x409eec7c" loc="72:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x409eec7c"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409eee3c"/>
        <function-ref name="write" scoped="" ref="0x409eef18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x409ed0b0" loc="73:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x409ed0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ed270"/>
        <function-ref name="write" scoped="" ref="0x409ed34c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x409e7090" loc="94:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x409e7090"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409e7250"/>
        <function-ref name="write" scoped="" ref="0x409e732c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x409e8010" loc="90:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x409e8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409e81d0"/>
        <function-ref name="write" scoped="" ref="0x409e82ac"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x409d3050" loc="50:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x409d3050"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409d3210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x409e9728" loc="88:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x409e9728"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409e98e8"/>
        <function-ref name="write" scoped="" ref="0x409e99c4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x409f1dd4" loc="65:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x409f1dd4"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ef010"/>
        <function-ref name="write" scoped="" ref="0x409ef0ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x409ef680" loc="67:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x409ef680"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ef840"/>
        <function-ref name="write" scoped="" ref="0x409ef91c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x409ec9bc" loc="79:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x409ec9bc"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ecb7c"/>
        <function-ref name="write" scoped="" ref="0x409ecc58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x409ed4c8" loc="74:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x409ed4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ed688"/>
        <function-ref name="write" scoped="" ref="0x409ed764"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x409d5a8c" loc="42:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x409d5a8c"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x409d5c4c"/>
        <function-ref name="abortRelease" scoped="" ref="0x409d5d28"/>
        <function-ref name="attemptRelease" scoped="" ref="0x409d5e04"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x409d3d40" loc="54:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x409d3d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409d3f00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x409f2090" loc="55:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x409f2090"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409f22d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x409f244c" loc="56:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x409f244c"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409f260c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x409e9b40" loc="89:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x409e9b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409e9d00"/>
        <function-ref name="write" scoped="" ref="0x409e9ddc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x409d36c8" loc="52:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x409d36c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409d3888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x409ef268" loc="66:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x409ef268"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ef428"/>
        <function-ref name="write" scoped="" ref="0x409ef504"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x409f19bc" loc="64:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x409f19bc"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409f1b7c"/>
        <function-ref name="write" scoped="" ref="0x409f1c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x409d434c" loc="46:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x409d434c"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409d450c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x409e8c58" loc="93:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x409e8c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409e8e18"/>
        <function-ref name="write" scoped="" ref="0x409e8ef4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x409e8428" loc="91:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x409e8428"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409e85e8"/>
        <function-ref name="write" scoped="" ref="0x409e86c4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x409ecdd4" loc="80:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x409ecdd4"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409eb010"/>
        <function-ref name="write" scoped="" ref="0x409eb0ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x409e9310" loc="87:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x409e9310"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409e94d0"/>
        <function-ref name="write" scoped="" ref="0x409e95ac"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x409edcf8" loc="76:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x409edcf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409edeb8"/>
        <function-ref name="write" scoped="" ref="0x409ec010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x409e74a8" loc="97:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x409e74a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x409e7868"/>
        <function-ref name="writeDone" scoped="" ref="0x409e7944"/>
        <function-ref name="write" scoped="" ref="0x409e7a20"/>
        <function-ref name="beginRead" scoped="" ref="0x409e7afc"/>
        <function-ref name="readDone" scoped="" ref="0x409e7bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x409d4010" loc="45:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x409d4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409d41d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x409f118c" loc="62:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x409f118c"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409f134c"/>
        <function-ref name="write" scoped="" ref="0x409f1428"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x409efa98" loc="68:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x409efa98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409efc58"/>
        <function-ref name="write" scoped="" ref="0x409efd34"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x409ed8e0" loc="75:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x409ed8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409edaa0"/>
        <function-ref name="write" scoped="" ref="0x409edb7c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x409ee44c" loc="70:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x409ee44c"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ee60c"/>
        <function-ref name="write" scoped="" ref="0x409ee6e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x409d49c4" loc="48:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x409d49c4"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409d4b84"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x409ee864" loc="71:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x409ee864"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409eea24"/>
        <function-ref name="write" scoped="" ref="0x409eeb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x409d5400" loc="41:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x409d5400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x409d55c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x409d569c"/>
        <function-ref name="request" scoped="" ref="0x409d5778"/>
        <function-ref name="granted" scoped="" ref="0x409d5854"/>
        <function-ref name="isOwner" scoped="" ref="0x409d5930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x409f2788" loc="57:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x409f2788"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409f2948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x409f2e00" loc="59:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x409f2e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409f1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x409ebeb0" loc="86:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x409ebeb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409e90b8"/>
        <function-ref name="write" scoped="" ref="0x409e9194"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x409eba98" loc="85:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x409eba98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ebc58"/>
        <function-ref name="write" scoped="" ref="0x409ebd34"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x409d3a04" loc="53:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x409d3a04"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409d3bc4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x409eb680" loc="82:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x409eb680"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409eb840"/>
        <function-ref name="write" scoped="" ref="0x409eb91c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x409e8840" loc="92:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x409e8840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409e8a00"/>
        <function-ref name="write" scoped="" ref="0x409e8adc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x409eb268" loc="81:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x409eb268"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409eb428"/>
        <function-ref name="write" scoped="" ref="0x409eb504"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x409d4d00" loc="49:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x409d4d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409d4ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x409ec5a4" loc="78:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x409ec5a4"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ec764"/>
        <function-ref name="write" scoped="" ref="0x409ec840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x409d338c" loc="51:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x409d338c"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409d354c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x409ec18c" loc="77:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x409ec18c"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ec34c"/>
        <function-ref name="write" scoped="" ref="0x409ec428"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x409f2ac4" loc="58:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x409f2ac4"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409f2c84"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x409e7d54" loc="98:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x409e7d54"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x409e7f14"/>
        <function-ref name="writeDone" scoped="" ref="0x409e6010"/>
        <function-ref name="write" scoped="" ref="0x409e60ec"/>
        <function-ref name="beginRead" scoped="" ref="0x409e61c8"/>
        <function-ref name="readDone" scoped="" ref="0x409e62a4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x40a01010" loc="54:/home/user/tinyos-main/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40a01010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x40a011d0"/>
        <function-ref name="changed" scoped="" ref="0x40a012ac"/>
        <function-ref name="amGroup" scoped="" ref="0x40a01388"/>
        <function-ref name="setAddress" scoped="" ref="0x40a01464"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x409e33d8" loc="40:/home/user/tinyos-main/tos/platforms/micaz/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x409e33d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x409e3598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x40a10ce0" loc="46:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x40a10ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x40a10ea0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x40a0f010"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x40a0f0ec"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x40a0f1c8"/>
        <function-ref name="setCca" scoped="" ref="0x40a0f2a4"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x40a0f380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x40a0fdb0" loc="47:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x40a0fdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x40a0e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x40a105f8" loc="45:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x40a105f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a107b8"/>
        <function-ref name="cancel" scoped="" ref="0x40a10894"/>
        <function-ref name="modify" scoped="" ref="0x40a10970"/>
        <function-ref name="sendDone" scoped="" ref="0x40a10a4c"/>
        <function-ref name="resend" scoped="" ref="0x40a10b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40a10190" loc="44:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40a10190"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a10350"/>
        <function-ref name="stop" scoped="" ref="0x40a1042c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x40a0e294" loc="48:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x40a0e294"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x40a0e454"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x40a1c2c4" loc="51:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x40a1c2c4"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x40a1c484"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x40a1c560"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x40a1c63c"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x40a1c718"/>
        <function-ref name="setCca" scoped="" ref="0x40a1c7f4"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x40a1c8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x40a19dac" loc="58:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40a19dac"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a7328"/>
            <typename><typedef-ref name="T32khz" ref="0x403a74e4"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212494"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40a18854"/>
        <function-ref name="clear" scoped="" ref="0x40a18be0"/>
        <function-ref name="isValid" scoped="" ref="0x40a184c8"/>
        <function-ref name="set" scoped="" ref="0x40a16010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x40a2e50c" loc="78:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x40a2e50c"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a2e6cc"/>
        <function-ref name="write" scoped="" ref="0x40a2e7a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x40a2e9ac" loc="79:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x40a2e9ac"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a2eb6c"/>
        <function-ref name="write" scoped="" ref="0x40a2ec48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x40a1cb88" loc="52:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x40a1cb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x40a1cd48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x40a30d28" loc="72:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x40a30d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a30ee8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x40a15158" loc="60:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x40a15158"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40a15318"/>
        <function-ref name="disable" scoped="" ref="0x40a153f4"/>
        <function-ref name="captured" scoped="" ref="0x40a154d0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40a155ac"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x40a1b5a0" loc="55:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BackoffTimer" scoped="" ref="0x40a1b5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a7328"/>
            <typename><typedef-ref name="T32khz" ref="0x403a74e4"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212494"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40a1a95c"/>
        <function-ref name="fired" scoped="" ref="0x40a1a188"/>
        <function-ref name="startAt" scoped="" ref="0x40a1a640"/>
        <function-ref name="isRunning" scoped="" ref="0x40a1a3e4"/>
        <function-ref name="getAlarm" scoped="" ref="0x40a1abb8"/>
        <function-ref name="start" scoped="" ref="0x40a1bc90"/>
        <function-ref name="stop" scoped="" ref="0x40a1bf14"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x40a1ae58" loc="56:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40a1ae58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40a19050"/>
        <function-ref name="setNetwork" scoped="" ref="0x40a1912c"/>
        <function-ref name="getRssi" scoped="" ref="0x40a19208"/>
        <function-ref name="getNetwork" scoped="" ref="0x40a192e4"/>
        <function-ref name="getPower" scoped="" ref="0x40a193c0"/>
        <function-ref name="getLqi" scoped="" ref="0x40a1949c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x40a31b5c" loc="68:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40a31b5c"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a31d1c"/>
        <function-ref name="write" scoped="" ref="0x40a31df8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x40a30070" loc="69:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x40a30070"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a30230"/>
        <function-ref name="write" scoped="" ref="0x40a3030c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x40a2c010" loc="83:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x40a2c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a2c1d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x40a2c2ac"/>
        <function-ref name="sfd" scoped="" ref="0x40a2c388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40a1eba4" loc="50:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40a1eba4"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a1ed64"/>
        <function-ref name="cancel" scoped="" ref="0x40a1ee40"/>
        <function-ref name="modify" scoped="" ref="0x40a1ef1c"/>
        <function-ref name="sendDone" scoped="" ref="0x40a1c010"/>
        <function-ref name="resend" scoped="" ref="0x40a1c0ec"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x40a34dc0" loc="66:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40a34dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40a31010"/>
        <function-ref name="abortRelease" scoped="" ref="0x40a310ec"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40a311c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x40a2f150" loc="73:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x40a2f150"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a2f310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x40a14208" loc="62:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x40a14208"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a143c8"/>
        <function-ref name="isInput" scoped="" ref="0x40a144a4"/>
        <function-ref name="toggle" scoped="" ref="0x40a14580"/>
        <function-ref name="isOutput" scoped="" ref="0x40a1465c"/>
        <function-ref name="get" scoped="" ref="0x40a14738"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a14814"/>
        <function-ref name="set" scoped="" ref="0x40a148f0"/>
        <function-ref name="clr" scoped="" ref="0x40a149cc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a1e34c" loc="48:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a1e34c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a1e50c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40a1969c" loc="57:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40a1969c"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x40a1985c"/>
        <function-ref name="getHeader" scoped="" ref="0x40a19938"/>
        <function-ref name="getMetadata" scoped="" ref="0x40a19a14"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x40a33a30" loc="59:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40a33a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a33bf0"/>
        <function-ref name="isSet" scoped="" ref="0x40a33ccc"/>
        <function-ref name="cancel" scoped="" ref="0x40a33da8"/>
        <function-ref name="set" scoped="" ref="0x40a33e84"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x40a2f570" loc="74:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x40a2f570"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a2f830"/>
        <function-ref name="write" scoped="" ref="0x40a2f90c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x40a3469c" loc="65:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40a3469c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a3485c"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a34938"/>
        <function-ref name="request" scoped="" ref="0x40a34a14"/>
        <function-ref name="granted" scoped="" ref="0x40a34af0"/>
        <function-ref name="isOwner" scoped="" ref="0x40a34bcc"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x40a157a4" loc="61:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x40a157a4"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a159e4"/>
        <function-ref name="isInput" scoped="" ref="0x40a15ac0"/>
        <function-ref name="toggle" scoped="" ref="0x40a15b9c"/>
        <function-ref name="isOutput" scoped="" ref="0x40a15c78"/>
        <function-ref name="get" scoped="" ref="0x40a15d54"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a15e30"/>
        <function-ref name="set" scoped="" ref="0x40a15f0c"/>
        <function-ref name="clr" scoped="" ref="0x40a14010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x40a2ee4c" loc="80:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x40a2ee4c"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a2d050"/>
        <function-ref name="write" scoped="" ref="0x40a2d12c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x40a2d34c" loc="81:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x40a2d34c"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a2d50c"/>
        <function-ref name="write" scoped="" ref="0x40a2d5e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x40a30530" loc="70:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40a30530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a306f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x40a14bc4" loc="63:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x40a14bc4"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a14d84"/>
        <function-ref name="isInput" scoped="" ref="0x40a14e60"/>
        <function-ref name="toggle" scoped="" ref="0x40a34010"/>
        <function-ref name="isOutput" scoped="" ref="0x40a340ec"/>
        <function-ref name="get" scoped="" ref="0x40a341c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a342a4"/>
        <function-ref name="set" scoped="" ref="0x40a34380"/>
        <function-ref name="clr" scoped="" ref="0x40a3445c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40a2c510" loc="84:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40a2c510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40a2c6d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40a2c7ac"/>
        <function-ref name="led1On" scoped="" ref="0x40a2c888"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40a2c964"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40a2ca40"/>
        <function-ref name="get" scoped="" ref="0x40a2cb1c"/>
        <function-ref name="led1Off" scoped="" ref="0x40a2cbf8"/>
        <function-ref name="led2Off" scoped="" ref="0x40a2b010"/>
        <function-ref name="set" scoped="" ref="0x40a2ccd4"/>
        <function-ref name="led0On" scoped="" ref="0x40a2cdb0"/>
        <function-ref name="led2On" scoped="" ref="0x40a2ce8c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x40a2e010" loc="77:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x40a2e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a2e1d0"/>
        <function-ref name="write" scoped="" ref="0x40a2e2ac"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40a1e6d0" loc="49:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40a1e6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a1e890"/>
        <function-ref name="stop" scoped="" ref="0x40a1e96c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x40a313ec" loc="67:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x40a313ec"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40a315ac"/>
        <function-ref name="writeDone" scoped="" ref="0x40a31688"/>
        <function-ref name="write" scoped="" ref="0x40a31764"/>
        <function-ref name="beginRead" scoped="" ref="0x40a31840"/>
        <function-ref name="readDone" scoped="" ref="0x40a3191c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x40a3091c" loc="71:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x40a3091c"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a30adc"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x40a2fb44" loc="76:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x40a2fb44"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a2fd04"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x40a1b010" loc="53:/home/user/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x40a1b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x40a1b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x40a7f268" loc="69:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x40a7f268"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a7f528"/>
        <function-ref name="write" scoped="" ref="0x40a7f604"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x40a859bc" loc="47:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x40a859bc"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a85b7c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x40a818e0" loc="63:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x40a818e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a81aa0"/>
        <function-ref name="write" scoped="" ref="0x40a81b7c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x40a7d010" loc="72:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x40a7d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a7d1d0"/>
        <function-ref name="write" scoped="" ref="0x40a7d2ac"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x40a7d428" loc="73:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x40a7d428"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a7d5e8"/>
        <function-ref name="write" scoped="" ref="0x40a7d6c4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x40a9a428" loc="94:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x40a9a428"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a9a5e8"/>
        <function-ref name="write" scoped="" ref="0x40a9a6c4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x40a9c310" loc="90:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x40a9c310"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a9c4d0"/>
        <function-ref name="write" scoped="" ref="0x40a9c5ac"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x40a8338c" loc="50:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x40a8338c"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a8354c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x40a7aa98" loc="88:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40a7aa98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a7ac58"/>
        <function-ref name="write" scoped="" ref="0x40a7ad34"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x40a8018c" loc="65:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x40a8018c"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a8034c"/>
        <function-ref name="write" scoped="" ref="0x40a80428"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x40a809bc" loc="67:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x40a809bc"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a80b7c"/>
        <function-ref name="write" scoped="" ref="0x40a80c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x40a7ccd8" loc="79:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x40a7ccd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a7ce98"/>
        <function-ref name="write" scoped="" ref="0x40a7b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x40a7d840" loc="74:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x40a7d840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a7da00"/>
        <function-ref name="write" scoped="" ref="0x40a7dadc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40a86e10" loc="42:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40a86e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40a85010"/>
        <function-ref name="abortRelease" scoped="" ref="0x40a850ec"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40a851c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x40a82090" loc="54:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x40a82090"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a82250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x40a823cc" loc="55:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x40a823cc"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a8260c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x40a82788" loc="56:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x40a82788"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a82948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x40a7aeb0" loc="89:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40a7aeb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a9c0b8"/>
        <function-ref name="write" scoped="" ref="0x40a9c194"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x40a83a04" loc="52:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x40a83a04"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a83bc4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x40a805a4" loc="66:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x40a805a4"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a80764"/>
        <function-ref name="write" scoped="" ref="0x40a80840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x40a81cf8" loc="64:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x40a81cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a81eb8"/>
        <function-ref name="write" scoped="" ref="0x40a80010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x40a85680" loc="46:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x40a85680"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a85840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x40a9a010" loc="93:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x40a9a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a9a1d0"/>
        <function-ref name="write" scoped="" ref="0x40a9a2ac"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x40a9c728" loc="91:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x40a9c728"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a9c8e8"/>
        <function-ref name="write" scoped="" ref="0x40a9c9c4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x40a7b18c" loc="80:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x40a7b18c"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a7b34c"/>
        <function-ref name="write" scoped="" ref="0x40a7b428"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x40a7a680" loc="87:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x40a7a680"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a7a840"/>
        <function-ref name="write" scoped="" ref="0x40a7a91c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x40a7c090" loc="76:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x40a7c090"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a7c250"/>
        <function-ref name="write" scoped="" ref="0x40a7c32c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x40a9a840" loc="97:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x40a9a840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40a9ac00"/>
        <function-ref name="writeDone" scoped="" ref="0x40a9acdc"/>
        <function-ref name="write" scoped="" ref="0x40a9adb8"/>
        <function-ref name="beginRead" scoped="" ref="0x40a9ae94"/>
        <function-ref name="readDone" scoped="" ref="0x40a99010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x40a85344" loc="45:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40a85344"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a85504"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x40a814c8" loc="62:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x40a814c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a81688"/>
        <function-ref name="write" scoped="" ref="0x40a81764"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x40a80dd4" loc="68:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x40a80dd4"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a7f010"/>
        <function-ref name="write" scoped="" ref="0x40a7f0ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x40a7dc58" loc="75:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x40a7dc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a7de18"/>
        <function-ref name="write" scoped="" ref="0x40a7def4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x40a7f780" loc="70:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x40a7f780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a7f940"/>
        <function-ref name="write" scoped="" ref="0x40a7fa1c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x40a85cf8" loc="48:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x40a85cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a85eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x40a7fb98" loc="71:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x40a7fb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a7fd58"/>
        <function-ref name="write" scoped="" ref="0x40a7fe34"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40a86784" loc="41:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40a86784"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a86944"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a86a20"/>
        <function-ref name="request" scoped="" ref="0x40a86afc"/>
        <function-ref name="granted" scoped="" ref="0x40a86bd8"/>
        <function-ref name="isOwner" scoped="" ref="0x40a86cb4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x40a82ac4" loc="57:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x40a82ac4"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a82c84"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x40a8118c" loc="59:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x40a8118c"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a8134c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x40a7a268" loc="86:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x40a7a268"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a7a428"/>
        <function-ref name="write" scoped="" ref="0x40a7a504"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x40a7bdd4" loc="85:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x40a7bdd4"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a7a010"/>
        <function-ref name="write" scoped="" ref="0x40a7a0ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x40a83d40" loc="53:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40a83d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a83f00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x40a7b9bc" loc="82:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x40a7b9bc"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a7bb7c"/>
        <function-ref name="write" scoped="" ref="0x40a7bc58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x40a9cb40" loc="92:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x40a9cb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a9cd00"/>
        <function-ref name="write" scoped="" ref="0x40a9cddc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x40a7b5a4" loc="81:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x40a7b5a4"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a7b764"/>
        <function-ref name="write" scoped="" ref="0x40a7b840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x40a83050" loc="49:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x40a83050"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a83210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x40a7c8c0" loc="78:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x40a7c8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a7ca80"/>
        <function-ref name="write" scoped="" ref="0x40a7cb5c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x40a836c8" loc="51:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x40a836c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a83888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x40a7c4a8" loc="77:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x40a7c4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a7c668"/>
        <function-ref name="write" scoped="" ref="0x40a7c744"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x40a82e00" loc="58:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x40a82e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a81010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x40a9918c" loc="98:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x40a9918c"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40a9934c"/>
        <function-ref name="writeDone" scoped="" ref="0x40a99428"/>
        <function-ref name="write" scoped="" ref="0x40a99504"/>
        <function-ref name="beginRead" scoped="" ref="0x40a995e0"/>
        <function-ref name="readDone" scoped="" ref="0x40a996bc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x40a94d90" loc="42:/home/user/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x40a94d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a91010"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x40a910ec"/>
        <function-ref name="sfd" scoped="" ref="0x40a911c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40a9136c" loc="43:/home/user/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40a9136c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a9152c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x40a917e4" loc="44:/home/user/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x40a917e4"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x40a919a4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40a94914" loc="41:/home/user/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40a94914"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a94ad4"/>
        <function-ref name="stop" scoped="" ref="0x40a94bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x40a8c3cc" loc="54:/home/user/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x40a8c3cc"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a8c58c"/>
        <function-ref name="isInput" scoped="" ref="0x40a8c668"/>
        <function-ref name="toggle" scoped="" ref="0x40a8c744"/>
        <function-ref name="isOutput" scoped="" ref="0x40a8c820"/>
        <function-ref name="get" scoped="" ref="0x40a8c8fc"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a8c9d8"/>
        <function-ref name="set" scoped="" ref="0x40a8cab4"/>
        <function-ref name="clr" scoped="" ref="0x40a8cb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x40aac48c" loc="64:/home/user/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x40aac48c"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x40aac64c"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x40aac728"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x40aac804"/>
        <function-ref name="syncDone" scoped="" ref="0x40aac8e0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x40aac9bc"/>
        <function-ref name="setShortAddr" scoped="" ref="0x40aaca98"/>
        <function-ref name="setChannel" scoped="" ref="0x40aacb74"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x40aacc50"/>
        <function-ref name="setPanAddr" scoped="" ref="0x40aacd2c"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x40aace08"/>
        <function-ref name="getExtAddr" scoped="" ref="0x40aacee4"/>
        <function-ref name="getShortAddr" scoped="" ref="0x40aab010"/>
        <function-ref name="sync" scoped="" ref="0x40aab0ec"/>
        <function-ref name="getChannel" scoped="" ref="0x40aab248"/>
        <function-ref name="getPanAddr" scoped="" ref="0x40aab324"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x40a9f21c" loc="148:/home/user/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveDone_task" scoped="" ref="0x40a9f21c"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40a9f3dc"/>
        <function-ref name="runTask" scoped="" ref="0x40a9f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x40aab6bc" loc="65:/home/user/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40aab6bc"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a7328"/>
            <typename><typedef-ref name="T32khz" ref="0x403a74e4"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212494"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40aa9160"/>
        <function-ref name="clear" scoped="" ref="0x40aa94ec"/>
        <function-ref name="isValid" scoped="" ref="0x40aabdac"/>
        <function-ref name="set" scoped="" ref="0x40aa9878"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x40a8cd9c" loc="55:/home/user/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x40a8cd9c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a8b010"/>
        <function-ref name="isInput" scoped="" ref="0x40a8b0ec"/>
        <function-ref name="toggle" scoped="" ref="0x40a8b1c8"/>
        <function-ref name="isOutput" scoped="" ref="0x40a8b2a4"/>
        <function-ref name="get" scoped="" ref="0x40a8b380"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a8b45c"/>
        <function-ref name="set" scoped="" ref="0x40a8b538"/>
        <function-ref name="clr" scoped="" ref="0x40a8b614"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x40aa8690" loc="69:/home/user/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x40aa8690"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40aa8850"/>
        <function-ref name="write" scoped="" ref="0x40aa892c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x40aa8b30" loc="70:/home/user/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x40aa8b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40aa8cf0"/>
        <function-ref name="write" scoped="" ref="0x40aa8dcc"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x40aa74cc" loc="72:/home/user/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x40aa74cc"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40aa768c"/>
        <function-ref name="write" scoped="" ref="0x40aa7768"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x40aad71c" loc="62:/home/user/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40aad71c"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40aad8dc"/>
        <function-ref name="setNetwork" scoped="" ref="0x40aad9b8"/>
        <function-ref name="getRssi" scoped="" ref="0x40aada94"/>
        <function-ref name="getNetwork" scoped="" ref="0x40aadb70"/>
        <function-ref name="getPower" scoped="" ref="0x40aadc4c"/>
        <function-ref name="getLqi" scoped="" ref="0x40aadd28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x40a8ec08" loc="49:/home/user/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x40a8ec08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a8edc8"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x40a8eea4"/>
        <function-ref name="sfd" scoped="" ref="0x40a8d010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x40aaeeb8" loc="60:/home/user/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x40aaeeb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40aad0b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x40a8d9e4" loc="53:/home/user/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x40a8d9e4"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a8dba4"/>
        <function-ref name="isInput" scoped="" ref="0x40a8dc80"/>
        <function-ref name="toggle" scoped="" ref="0x40a8dd5c"/>
        <function-ref name="isOutput" scoped="" ref="0x40a8de38"/>
        <function-ref name="get" scoped="" ref="0x40a8df14"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a8c010"/>
        <function-ref name="set" scoped="" ref="0x40a8c0ec"/>
        <function-ref name="clr" scoped="" ref="0x40a8c1c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x40aa79a8" loc="73:/home/user/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40aa79a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40aa7b68"/>
        <function-ref name="write" scoped="" ref="0x40aa7c44"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a8e408" loc="47:/home/user/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a8e408"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a8e5c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40aadf28" loc="63:/home/user/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40aadf28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x40aac0fc"/>
        <function-ref name="getHeader" scoped="" ref="0x40aac1d8"/>
        <function-ref name="getMetadata" scoped="" ref="0x40aac2b4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40a8d1b4" loc="50:/home/user/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40a8d1b4"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a8d374"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x40aae010" loc="58:/home/user/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40aae010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40aae1d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40aae2ac"/>
        <function-ref name="request" scoped="" ref="0x40aae388"/>
        <function-ref name="granted" scoped="" ref="0x40aae464"/>
        <function-ref name="isOwner" scoped="" ref="0x40aae540"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x40aa7010" loc="71:/home/user/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x40aa7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40aa71d0"/>
        <function-ref name="write" scoped="" ref="0x40aa72ac"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x40aae764" loc="59:/home/user/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x40aae764"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40aae924"/>
        <function-ref name="writeDone" scoped="" ref="0x40aaea00"/>
        <function-ref name="write" scoped="" ref="0x40aaeadc"/>
        <function-ref name="beginRead" scoped="" ref="0x40aaebb8"/>
        <function-ref name="readDone" scoped="" ref="0x40aaec94"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x40aa7e68" loc="74:/home/user/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40aa7e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40aa61f4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x40a8d62c" loc="51:/home/user/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x40a8d62c"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x40a8d7ec"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40aa637c" loc="76:/home/user/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40aa637c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40aa653c"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40aa6618"/>
        <function-ref name="led1On" scoped="" ref="0x40aa66f4"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40aa67d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40aa68ac"/>
        <function-ref name="get" scoped="" ref="0x40aa6988"/>
        <function-ref name="led1Off" scoped="" ref="0x40aa6a64"/>
        <function-ref name="led2Off" scoped="" ref="0x40aa6dd4"/>
        <function-ref name="set" scoped="" ref="0x40aa6b40"/>
        <function-ref name="led0On" scoped="" ref="0x40aa6c1c"/>
        <function-ref name="led2On" scoped="" ref="0x40aa6cf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x40aa8194" loc="68:/home/user/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x40aa8194"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40aa8354"/>
        <function-ref name="write" scoped="" ref="0x40aa8430"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x40aa9d50" loc="67:/home/user/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x40aa9d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40aa9f10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x40a8b8a4" loc="56:/home/user/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x40a8b8a4"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40a8ba64"/>
        <function-ref name="disable" scoped="" ref="0x40a8bb40"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40a8bc1c"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40a8bcf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x40aad304" loc="61:/home/user/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40aad304"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40aad544"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40a8e78c" loc="48:/home/user/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40a8e78c"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a8e94c"/>
        <function-ref name="stop" scoped="" ref="0x40a8ea28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40ad5010" loc="44:/home/user/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40ad5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40ad51d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x40ad9c08" loc="41:/home/user/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40ad9c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40ad9dc8"/>
        <function-ref name="setNetwork" scoped="" ref="0x40ad9ea4"/>
        <function-ref name="getRssi" scoped="" ref="0x40ad6010"/>
        <function-ref name="getNetwork" scoped="" ref="0x40ad60ec"/>
        <function-ref name="getPower" scoped="" ref="0x40ad61c8"/>
        <function-ref name="getLqi" scoped="" ref="0x40ad62a4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x40ad5634" loc="46:/home/user/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40ad5634"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a7328"/>
            <typename><typedef-ref name="T32khz" ref="0x403a74e4"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212494"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40ad40c8"/>
        <function-ref name="clear" scoped="" ref="0x40ad4454"/>
        <function-ref name="isValid" scoped="" ref="0x40ad5d24"/>
        <function-ref name="set" scoped="" ref="0x40ad47e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x40ad6a64" loc="43:/home/user/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40ad6a64"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x40ad6c24"/>
        <function-ref name="getHeader" scoped="" ref="0x40ad6d00"/>
        <function-ref name="getMetadata" scoped="" ref="0x40ad6ddc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40af55a0" loc="48:/home/user/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40af55a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40af5760"/>
        <function-ref name="isSet" scoped="" ref="0x40af583c"/>
        <function-ref name="cancel" scoped="" ref="0x40af5918"/>
        <function-ref name="set" scoped="" ref="0x40af59f4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40ad4ee4" loc="47:/home/user/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40ad4ee4"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aaec8"/>
            <typename><typedef-ref name="TMilli" ref="0x403a70c4"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212494"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40af69b0"/>
        <function-ref name="clear" scoped="" ref="0x40af6d3c"/>
        <function-ref name="isValid" scoped="" ref="0x40af6624"/>
        <function-ref name="set" scoped="" ref="0x40af50f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40ad650c" loc="42:/home/user/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40ad650c"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40ad66cc"/>
        <function-ref name="noAck" scoped="" ref="0x40ad67a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40ad6884"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40af1670" loc="49:/home/user/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40af1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40af1830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x40af22f4" loc="46:/home/user/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40af22f4"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40af24b4"/>
        <function-ref name="setNetwork" scoped="" ref="0x40af2590"/>
        <function-ref name="getRssi" scoped="" ref="0x40af266c"/>
        <function-ref name="getNetwork" scoped="" ref="0x40af2748"/>
        <function-ref name="getPower" scoped="" ref="0x40af2824"/>
        <function-ref name="getLqi" scoped="" ref="0x40af2900"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40aec298" loc="56:/home/user/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40aec298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40aec458"/>
        <function-ref name="payloadLength" scoped="" ref="0x40aec534"/>
        <function-ref name="getPayload" scoped="" ref="0x40aec610"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40aec6ec"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40aec7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x40af1c94" loc="51:/home/user/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40af1c94"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a7328"/>
            <typename><typedef-ref name="T32khz" ref="0x403a74e4"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212494"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40af0754"/>
        <function-ref name="clear" scoped="" ref="0x40af0ae0"/>
        <function-ref name="isValid" scoped="" ref="0x40af03c8"/>
        <function-ref name="set" scoped="" ref="0x40af0e6c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x40af1104" loc="48:/home/user/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40af1104"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x40af12c4"/>
        <function-ref name="getHeader" scoped="" ref="0x40af13a0"/>
        <function-ref name="getMetadata" scoped="" ref="0x40af147c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40aedc04" loc="53:/home/user/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40aedc04"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40aeddc4"/>
        <function-ref name="isSet" scoped="" ref="0x40aedea0"/>
        <function-ref name="cancel" scoped="" ref="0x40aec010"/>
        <function-ref name="set" scoped="" ref="0x40aec0ec"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x40ae9750" loc="57:/home/user/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime32khz" scoped="" ref="0x40ae9750"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a7328"/>
            <typename><typedef-ref name="T32khz" ref="0x403a74e4"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ae9d40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x40aeb15c" loc="58:/home/user/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x40aeb15c"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aaec8"/>
            <typename><typedef-ref name="TMilli" ref="0x403a70c4"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40aeb74c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40aee584" loc="52:/home/user/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40aee584"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aaec8"/>
            <typename><typedef-ref name="TMilli" ref="0x403a70c4"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212494"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40aed044"/>
        <function-ref name="clear" scoped="" ref="0x40aed3d0"/>
        <function-ref name="isValid" scoped="" ref="0x40aeec74"/>
        <function-ref name="set" scoped="" ref="0x40aed75c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40af2b68" loc="47:/home/user/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40af2b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40af2d28"/>
        <function-ref name="noAck" scoped="" ref="0x40af2e04"/>
        <function-ref name="wasAcked" scoped="" ref="0x40af2ee0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40b2d098" loc="48:/home/user/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40b2d098"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a7328"/>
            <typename><typedef-ref name="T32khz" ref="0x403a74e4"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b2d688"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40b2d9bc" loc="49:/home/user/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40b2d9bc"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a7328"/>
            <typename><typedef-ref name="T32khz" ref="0x403a74e4"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212494"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b260c8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40b26580"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40b26324"/>
        <function-ref name="overflow" scoped="" ref="0x40b267dc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x40b21010" loc="46:/home/user/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x40b21010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aaec8"/>
            <typename><typedef-ref name="TMilli" ref="0x403a70c4"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b20a90"/>
        <function-ref name="fired" scoped="" ref="0x40b21cf4"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40b20490"/>
        <function-ref name="isOneShot" scoped="" ref="0x40b20250"/>
        <function-ref name="getdt" scoped="" ref="0x40b20f10"/>
        <function-ref name="gett0" scoped="" ref="0x40b20cd0"/>
        <function-ref name="isRunning" scoped="" ref="0x40b20010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40b215e4"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40b20790"/>
        <function-ref name="startOneShot" scoped="" ref="0x40b2184c"/>
        <function-ref name="stop" scoped="" ref="0x40b21ab4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40b1f274" loc="47:/home/user/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40b1f274"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aaec8"/>
            <typename><typedef-ref name="TMilli" ref="0x403a70c4"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b1f864"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40b25880" loc="45:/home/user/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40b25880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b25a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x40b3f924" loc="29:/home/user/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x40b3f924"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aaec8"/>
            <typename><typedef-ref name="TMilli" ref="0x403a70c4"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212494"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b3d044"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40b3d4fc"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40b3d2a0"/>
        <function-ref name="overflow" scoped="" ref="0x40b3d758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40b1d860" loc="27:/home/user/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40b1d860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b1da20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x40b1ddf0" loc="28:/home/user/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x40b1ddf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aaec8"/>
            <typename><typedef-ref name="TMilli" ref="0x403a70c4"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212494"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b3f208"/>
        <function-ref name="fired" scoped="" ref="0x40b40a08"/>
        <function-ref name="startAt" scoped="" ref="0x40b40ec0"/>
        <function-ref name="isRunning" scoped="" ref="0x40b40c64"/>
        <function-ref name="getAlarm" scoped="" ref="0x40b3f464"/>
        <function-ref name="start" scoped="" ref="0x40b40528"/>
        <function-ref name="stop" scoped="" ref="0x40b407ac"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40b76494" loc="26:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40b76494"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aaec8"/>
            <typename><typedef-ref name="TMilli" ref="0x403a70c4"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212494"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b75850"/>
        <function-ref name="fired" scoped="" ref="0x40b7507c"/>
        <function-ref name="startAt" scoped="" ref="0x40b75534"/>
        <function-ref name="isRunning" scoped="" ref="0x40b752d8"/>
        <function-ref name="getAlarm" scoped="" ref="0x40b75aac"/>
        <function-ref name="start" scoped="" ref="0x40b76b84"/>
        <function-ref name="stop" scoped="" ref="0x40b76e08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40b76088" loc="25:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40b76088"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x403445a8"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x403445a8"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b76248"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40b75dc0" loc="27:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40b75dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aaec8"/>
            <typename><typedef-ref name="TMilli" ref="0x403a70c4"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212494"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b734c8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40b73980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40b73724"/>
        <function-ref name="overflow" scoped="" ref="0x40b73bdc"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x4119d83c" loc="31:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x4119d83c"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x4119d9fc"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x4119dad8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x4119dbb4"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x4119dc90"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x4119dd6c"/>
        <function-ref name="setControl" scoped="" ref="0x4119de48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x411a4d9c" loc="26:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x411a4d9c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aaec8"/>
            <typename><typedef-ref name="TMilli" ref="0x403a70c4"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212494"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x411a1178"/>
        <function-ref name="fired" scoped="" ref="0x411a298c"/>
        <function-ref name="startAt" scoped="" ref="0x411a2e44"/>
        <function-ref name="isRunning" scoped="" ref="0x411a2be8"/>
        <function-ref name="getAlarm" scoped="" ref="0x411a13d4"/>
        <function-ref name="start" scoped="" ref="0x411a24ac"/>
        <function-ref name="stop" scoped="" ref="0x411a2730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x411a4990" loc="25:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x411a4990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x411a4b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x411a16e8" loc="27:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x411a16e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aaec8"/>
            <typename><typedef-ref name="TMilli" ref="0x403a70c4"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212494"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x411a1dd8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x411a02bc"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x411a0060"/>
        <function-ref name="overflow" scoped="" ref="0x411a0518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x411db948" loc="33:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x411db948"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x411dbb08"/>
        <function-ref name="compareBusy" scoped="" ref="0x411dbbe4"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x411dbcc0"/>
        <function-ref name="countBusy" scoped="" ref="0x411dbd9c"/>
        <function-ref name="getAssr" scoped="" ref="0x411dbe78"/>
        <function-ref name="setAssr" scoped="" ref="0x411d9010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x411dc04c" loc="32:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x411dc04c"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x411db4c8"/>
        <function-ref name="fired" scoped="" ref="0x411dcb1c"/>
        <function-ref name="get" scoped="" ref="0x411dc63c"/>
        <function-ref name="reset" scoped="" ref="0x411dcd78"/>
        <function-ref name="isOn" scoped="" ref="0x411db724"/>
        <function-ref name="set" scoped="" ref="0x411dc898"/>
        <function-ref name="start" scoped="" ref="0x411db010"/>
        <function-ref name="stop" scoped="" ref="0x411db26c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x411a07f4" loc="30:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x411a07f4"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x4119d138"/>
        <function-ref name="test" scoped="" ref="0x4119ec54"/>
        <function-ref name="get" scoped="" ref="0x411a0de4"/>
        <function-ref name="setScale" scoped="" ref="0x4119d394"/>
        <function-ref name="getScale" scoped="" ref="0x4119d618"/>
        <function-ref name="reset" scoped="" ref="0x4119e540"/>
        <function-ref name="overflow" scoped="" ref="0x4119e2e4"/>
        <function-ref name="isOn" scoped="" ref="0x4119eeb0"/>
        <function-ref name="set" scoped="" ref="0x4119e060"/>
        <function-ref name="start" scoped="" ref="0x4119e79c"/>
        <function-ref name="stop" scoped="" ref="0x4119e9f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x40b7f010" loc="74:/home/user/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x40b7f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40b7f1d0"/>
        <function-ref name="runTask" scoped="" ref="0x40b7f2ac"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x40b826e0" loc="49:/home/user/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40b826e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aaec8"/>
            <typename><typedef-ref name="TMilli" ref="0x403a70c4"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212494"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b80aac"/>
        <function-ref name="fired" scoped="" ref="0x40b802d8"/>
        <function-ref name="startAt" scoped="" ref="0x40b80790"/>
        <function-ref name="isRunning" scoped="" ref="0x40b80534"/>
        <function-ref name="getAlarm" scoped="" ref="0x40b80d08"/>
        <function-ref name="start" scoped="" ref="0x40b82dd0"/>
        <function-ref name="stop" scoped="" ref="0x40b8007c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40b71488" loc="48:/home/user/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b71488"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aaec8"/>
            <typename><typedef-ref name="TMilli" ref="0x403a70c4"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b83f10"/>
        <function-ref name="fired" scoped="" ref="0x40b83250"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40b83910"/>
        <function-ref name="isOneShot" scoped="" ref="0x40b836d0"/>
        <function-ref name="getdt" scoped="" ref="0x40b823ac"/>
        <function-ref name="gett0" scoped="" ref="0x40b8216c"/>
        <function-ref name="isRunning" scoped="" ref="0x40b83490"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40b71a5c"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40b83c10"/>
        <function-ref name="startOneShot" scoped="" ref="0x40b71cc4"/>
        <function-ref name="stop" scoped="" ref="0x40b83010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x40ba3170" loc="71:/home/user/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x40ba3170"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ba3330"/>
        <function-ref name="runTask" scoped="" ref="0x40ba340c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x40ba60b8" loc="49:/home/user/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x40ba60b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aaec8"/>
            <typename><typedef-ref name="TMilli" ref="0x403a70c4"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40ba4a90"/>
        <function-ref name="fired" scoped="" ref="0x40ba6d9c"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40ba4490"/>
        <function-ref name="isOneShot" scoped="" ref="0x40ba4250"/>
        <function-ref name="getdt" scoped="" ref="0x40ba4f10"/>
        <function-ref name="gett0" scoped="" ref="0x40ba4cd0"/>
        <function-ref name="isRunning" scoped="" ref="0x40ba4010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40ba668c"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40ba4790"/>
        <function-ref name="startOneShot" scoped="" ref="0x40ba68f4"/>
        <function-ref name="stop" scoped="" ref="0x40ba6b5c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40b7eea4" loc="48:/home/user/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b7eea4"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aaec8"/>
            <typename><typedef-ref name="TMilli" ref="0x403a70c4"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40ba791c"/>
        <function-ref name="fired" scoped="" ref="0x40b7dbdc"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40ba72fc"/>
        <function-ref name="isOneShot" scoped="" ref="0x40ba70ac"/>
        <function-ref name="getdt" scoped="" ref="0x40ba7dbc"/>
        <function-ref name="gett0" scoped="" ref="0x40ba7b6c"/>
        <function-ref name="isRunning" scoped="" ref="0x40b7de2c"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40b7d49c"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40ba760c"/>
        <function-ref name="startOneShot" scoped="" ref="0x40b7d714"/>
        <function-ref name="stop" scoped="" ref="0x40b7d98c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40ba24f4" loc="48:/home/user/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40ba24f4"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aaec8"/>
            <typename><typedef-ref name="TMilli" ref="0x403a70c4"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ba2ae4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40ba2e18" loc="49:/home/user/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40ba2e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aaec8"/>
            <typename><typedef-ref name="TMilli" ref="0x403a70c4"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212494"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40bc9528"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40bc99e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40bc9784"/>
        <function-ref name="overflow" scoped="" ref="0x40bc9c3c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40b235d8" loc="45:/home/user/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b235d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aaec8"/>
            <typename><typedef-ref name="TMilli" ref="0x403a70c4"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40bbb010"/>
        <function-ref name="fired" scoped="" ref="0x40bc02ec"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40bc09ac"/>
        <function-ref name="isOneShot" scoped="" ref="0x40bc076c"/>
        <function-ref name="getdt" scoped="" ref="0x40bbb490"/>
        <function-ref name="gett0" scoped="" ref="0x40bbb250"/>
        <function-ref name="isRunning" scoped="" ref="0x40bc052c"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40b23bac"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40bc0cac"/>
        <function-ref name="startOneShot" scoped="" ref="0x40b23e14"/>
        <function-ref name="stop" scoped="" ref="0x40bc00ac"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x40bc2b8c" loc="49:/home/user/tinyos-main/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x40bc2b8c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aaec8"/>
            <typename><typedef-ref name="TMilli" ref="0x403a70c4"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40bbd610"/>
        <function-ref name="fired" scoped="" ref="0x40bbf8e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40bbd010"/>
        <function-ref name="isOneShot" scoped="" ref="0x40bbfd60"/>
        <function-ref name="getdt" scoped="" ref="0x40bbda90"/>
        <function-ref name="gett0" scoped="" ref="0x40bbd850"/>
        <function-ref name="isRunning" scoped="" ref="0x40bbfb20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40bbf1d0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40bbd310"/>
        <function-ref name="startOneShot" scoped="" ref="0x40bbf438"/>
        <function-ref name="stop" scoped="" ref="0x40bbf6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x40bdc8c0" loc="69:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x40bdc8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bdcb80"/>
        <function-ref name="write" scoped="" ref="0x40bdcc5c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x40bb9010" loc="47:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x40bb9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bb91d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x40bdd010" loc="63:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x40bdd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bdd1d0"/>
        <function-ref name="write" scoped="" ref="0x40bdd2ac"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x40bdb680" loc="72:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x40bdb680"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bdb840"/>
        <function-ref name="write" scoped="" ref="0x40bdb91c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x40bdba98" loc="73:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x40bdba98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bdbc58"/>
        <function-ref name="write" scoped="" ref="0x40bdbd34"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x40bd5a98" loc="94:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x40bd5a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bd5c58"/>
        <function-ref name="write" scoped="" ref="0x40bd5d34"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x40bd69bc" loc="90:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x40bd69bc"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bd6b7c"/>
        <function-ref name="write" scoped="" ref="0x40bd6c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x40bb99c4" loc="50:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x40bb99c4"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bb9b84"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x40bd618c" loc="88:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40bd618c"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bd634c"/>
        <function-ref name="write" scoped="" ref="0x40bd6428"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x40bdd840" loc="65:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x40bdd840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bdda00"/>
        <function-ref name="write" scoped="" ref="0x40bddadc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x40bdc090" loc="67:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x40bdc090"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bdc250"/>
        <function-ref name="write" scoped="" ref="0x40bdc32c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x40bd8428" loc="79:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x40bd8428"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bd85e8"/>
        <function-ref name="write" scoped="" ref="0x40bd86c4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x40bdbeb0" loc="74:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x40bdbeb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bd90b8"/>
        <function-ref name="write" scoped="" ref="0x40bd9194"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40bba408" loc="42:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40bba408"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40bba5c8"/>
        <function-ref name="abortRelease" scoped="" ref="0x40bba6a4"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40bba780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x40bb76c8" loc="54:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x40bb76c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bb7888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x40bb7a04" loc="55:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x40bb7a04"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bb7c44"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x40bb7dc0" loc="56:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x40bb7dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bb6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x40bd65a4" loc="89:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40bd65a4"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bd6764"/>
        <function-ref name="write" scoped="" ref="0x40bd6840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x40bb7050" loc="52:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x40bb7050"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bb7210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x40bddc58" loc="66:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x40bddc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bdde18"/>
        <function-ref name="write" scoped="" ref="0x40bddef4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x40bdd428" loc="64:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x40bdd428"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bdd5e8"/>
        <function-ref name="write" scoped="" ref="0x40bdd6c4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x40bbac38" loc="46:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x40bbac38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bbadf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x40bd5680" loc="93:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x40bd5680"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bd5840"/>
        <function-ref name="write" scoped="" ref="0x40bd591c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x40bd6dd4" loc="91:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x40bd6dd4"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bd5010"/>
        <function-ref name="write" scoped="" ref="0x40bd50ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x40bd8840" loc="80:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x40bd8840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bd8a00"/>
        <function-ref name="write" scoped="" ref="0x40bd8adc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x40bd7cd8" loc="87:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x40bd7cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bd7e98"/>
        <function-ref name="write" scoped="" ref="0x40bd6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x40bd9728" loc="76:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x40bd9728"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bd98e8"/>
        <function-ref name="write" scoped="" ref="0x40bd99c4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x40bd5eb0" loc="97:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x40bd5eb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40bd32f4"/>
        <function-ref name="writeDone" scoped="" ref="0x40bd33d0"/>
        <function-ref name="write" scoped="" ref="0x40bd34ac"/>
        <function-ref name="beginRead" scoped="" ref="0x40bd3588"/>
        <function-ref name="readDone" scoped="" ref="0x40bd3664"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x40bba8fc" loc="45:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40bba8fc"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bbaabc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x40bb6b40" loc="62:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x40bb6b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bb6d00"/>
        <function-ref name="write" scoped="" ref="0x40bb6ddc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x40bdc4a8" loc="68:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x40bdc4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bdc668"/>
        <function-ref name="write" scoped="" ref="0x40bdc744"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x40bd9310" loc="75:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x40bd9310"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bd94d0"/>
        <function-ref name="write" scoped="" ref="0x40bd95ac"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x40bdcdd8" loc="70:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x40bdcdd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bdb010"/>
        <function-ref name="write" scoped="" ref="0x40bdb0ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x40bb934c" loc="48:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x40bb934c"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bb950c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x40bdb268" loc="71:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x40bdb268"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bdb428"/>
        <function-ref name="write" scoped="" ref="0x40bdb504"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40ad7d68" loc="41:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40ad7d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ad7f28"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40bba018"/>
        <function-ref name="request" scoped="" ref="0x40bba0f4"/>
        <function-ref name="granted" scoped="" ref="0x40bba1d0"/>
        <function-ref name="isOwner" scoped="" ref="0x40bba2ac"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x40bb618c" loc="57:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x40bb618c"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bb634c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x40bb6804" loc="59:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x40bb6804"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bb69c4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x40bd78c0" loc="86:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x40bd78c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bd7a80"/>
        <function-ref name="write" scoped="" ref="0x40bd7b5c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x40bd74a8" loc="85:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x40bd74a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bd7668"/>
        <function-ref name="write" scoped="" ref="0x40bd7744"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x40bb738c" loc="53:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40bb738c"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bb754c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x40bd7090" loc="82:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x40bd7090"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bd7250"/>
        <function-ref name="write" scoped="" ref="0x40bd732c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x40bd5268" loc="92:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x40bd5268"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bd5428"/>
        <function-ref name="write" scoped="" ref="0x40bd5504"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x40bd8c58" loc="81:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x40bd8c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bd8e18"/>
        <function-ref name="write" scoped="" ref="0x40bd8ef4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x40bb9688" loc="49:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x40bb9688"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bb9848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x40bd8010" loc="78:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x40bd8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bd81d0"/>
        <function-ref name="write" scoped="" ref="0x40bd82ac"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x40bb9d00" loc="51:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x40bb9d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bb9ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x40bd9b40" loc="77:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x40bd9b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bd9d00"/>
        <function-ref name="write" scoped="" ref="0x40bd9ddc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x40bb64c8" loc="58:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x40bb64c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bb6688"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x40bd37e0" loc="98:/home/user/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x40bd37e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40bd39a0"/>
        <function-ref name="writeDone" scoped="" ref="0x40bd3a7c"/>
        <function-ref name="write" scoped="" ref="0x40bd3b58"/>
        <function-ref name="beginRead" scoped="" ref="0x40bd3c34"/>
        <function-ref name="readDone" scoped="" ref="0x40bd3d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x40be90e4" loc="67:/home/user/tinyos-main/tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40be90e4"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40be92a4"/>
        <function-ref name="toIdle" scoped="" ref="0x40be9380"/>
        <function-ref name="isState" scoped="" ref="0x40be945c"/>
        <function-ref name="isIdle" scoped="" ref="0x40be9538"/>
        <function-ref name="requestState" scoped="" ref="0x40be9614"/>
        <function-ref name="forceState" scoped="" ref="0x40be96f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40be4010" loc="44:/home/user/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40be4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40be41d0"/>
        <function-ref name="getPayload" scoped="" ref="0x40be42ac"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40be4388"/>
        <function-ref name="cancel" scoped="" ref="0x40be4464"/>
        <function-ref name="sendDone" scoped="" ref="0x40be4540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40be7820" loc="40:/home/user/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40be7820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40be79e0"/>
        <function-ref name="getPayload" scoped="" ref="0x40be7abc"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40be7b98"/>
        <function-ref name="cancel" scoped="" ref="0x40be7c74"/>
        <function-ref name="sendDone" scoped="" ref="0x40be7d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40be18b8" loc="45:/home/user/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40be18b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40be1a78"/>
        <function-ref name="getPayload" scoped="" ref="0x40be1b54"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40be1c30"/>
        <function-ref name="cancel" scoped="" ref="0x40be1d0c"/>
        <function-ref name="sendDone" scoped="" ref="0x40be1de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40be4e14" loc="40:/home/user/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40be4e14"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40be1010"/>
        <function-ref name="getPayload" scoped="" ref="0x40be10ec"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40be11c8"/>
        <function-ref name="cancel" scoped="" ref="0x40be12a4"/>
        <function-ref name="sendDone" scoped="" ref="0x40be1380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x40be0798" loc="47:/home/user/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40be0798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40be0958"/>
        <function-ref name="rand32" scoped="" ref="0x40be0a34"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40be14e8" loc="41:/home/user/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40be14e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40be16a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40be0c14" loc="48:/home/user/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40be0c14"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x40be0dd4"/>
        <function-ref name="getHeader" scoped="" ref="0x40be0eb0"/>
        <function-ref name="getMetadata" scoped="" ref="0x40bdf010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x40be0010" loc="46:/home/user/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40be0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40be01d0"/>
        <function-ref name="toIdle" scoped="" ref="0x40be02ac"/>
        <function-ref name="isState" scoped="" ref="0x40be0388"/>
        <function-ref name="isIdle" scoped="" ref="0x40be0464"/>
        <function-ref name="requestState" scoped="" ref="0x40be0540"/>
        <function-ref name="forceState" scoped="" ref="0x40be061c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x40be3838" loc="67:/home/user/tinyos-main/tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40be3838"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40be39f8"/>
        <function-ref name="toIdle" scoped="" ref="0x40be3ad4"/>
        <function-ref name="isState" scoped="" ref="0x40be3bb0"/>
        <function-ref name="isIdle" scoped="" ref="0x40be3c8c"/>
        <function-ref name="requestState" scoped="" ref="0x40be3d68"/>
        <function-ref name="forceState" scoped="" ref="0x40be3e44"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40bfb4e0" loc="47:/home/user/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40bfb4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bfb6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40be6c8c" loc="42:/home/user/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40be6c8c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40be6e4c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x40bfb0d4" loc="43:/home/user/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x40bfb0d4"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bfb294"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40bf8c4c" loc="49:/home/user/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40bf8c4c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bf8e0c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40bf8840" loc="45:/home/user/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40bf8840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40bf8a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40bf8110" loc="43:/home/user/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40bf8110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bf82d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40bf7010" loc="50:/home/user/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40bf7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x40bf71d0"/>
        <function-ref name="getHeader" scoped="" ref="0x40bf72ac"/>
        <function-ref name="getMetadata" scoped="" ref="0x40bf7388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x40bf8518" loc="44:/home/user/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x40bf8518"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bf86d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40c084f0" loc="75:/home/user/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40c084f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c086b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40c08880" loc="76:/home/user/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40c08880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c08a40"/>
        <function-ref name="getPayload" scoped="" ref="0x40c08b1c"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c08bf8"/>
        <function-ref name="cancel" scoped="" ref="0x40c08cd4"/>
        <function-ref name="sendDone" scoped="" ref="0x40c08db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40c0a794" loc="65:/home/user/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40c0a794"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c0a954"/>
        <function-ref name="getPayload" scoped="" ref="0x40c0aa30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c0ab0c"/>
        <function-ref name="cancel" scoped="" ref="0x40c0abe8"/>
        <function-ref name="sendDone" scoped="" ref="0x40c0acc4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x40c09240" loc="68:/home/user/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x40c09240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c09400"/>
        <function-ref name="getPayload" scoped="" ref="0x40c094dc"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c095b8"/>
        <function-ref name="cancel" scoped="" ref="0x40c09694"/>
        <function-ref name="sendDone" scoped="" ref="0x40c09770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40c0ae48" loc="66:/home/user/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40c0ae48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c09050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40c0a0fc" loc="64:/home/user/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40c0a0fc"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40c0a2bc"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40c0a398"/>
        <function-ref name="request" scoped="" ref="0x40c0a474"/>
        <function-ref name="granted" scoped="" ref="0x40c0a550"/>
        <function-ref name="isOwner" scoped="" ref="0x40c0a62c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x40c09998" loc="69:/home/user/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x40c09998"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c09b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x40c09d5c" loc="71:/home/user/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x40c09d5c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c09f1c"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c08010"/>
        <function-ref name="getPayload" scoped="" ref="0x40c080ec"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c081c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c082a4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40c2b868" loc="58:/home/user/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40c2b868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c2ba28"/>
        <function-ref name="getPayload" scoped="" ref="0x40c2bb04"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c2bbe0"/>
        <function-ref name="cancel" scoped="" ref="0x40c2bcbc"/>
        <function-ref name="sendDone" scoped="" ref="0x40c2bd98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40c2a010" loc="59:/home/user/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40c2a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c2a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x40c3a120" loc="180:/home/user/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantTask" scoped="" ref="0x40c3a120"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40c3a2e0"/>
        <function-ref name="runTask" scoped="" ref="0x40c3a3bc"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x40c2a388" loc="60:/home/user/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40c2a388"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40c2a548"/>
        <function-ref name="setNetwork" scoped="" ref="0x40c2a624"/>
        <function-ref name="getRssi" scoped="" ref="0x40c2a700"/>
        <function-ref name="getNetwork" scoped="" ref="0x40c2a7dc"/>
        <function-ref name="getPower" scoped="" ref="0x40c2a8b8"/>
        <function-ref name="getLqi" scoped="" ref="0x40c2a994"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x40c2c5d4" loc="51:/home/user/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x40c2c5d4"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c2c794"/>
        <function-ref name="getPayload" scoped="" ref="0x40c2c870"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c2c94c"/>
        <function-ref name="cancel" scoped="" ref="0x40c2ca28"/>
        <function-ref name="sendDone" scoped="" ref="0x40c2cb04"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x40c29138" loc="62:/home/user/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x40c29138"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40c292f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x40c293d4"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40c294b0"/>
        <function-ref name="dequeue" scoped="" ref="0x40c2958c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40c2ab74" loc="61:/home/user/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40c2ab74"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x40c2ad34"/>
        <function-ref name="getHeader" scoped="" ref="0x40c2ae10"/>
        <function-ref name="getMetadata" scoped="" ref="0x40c2aeec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x40c2c224" loc="49:/home/user/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x40c2c224"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c2c3e4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40c2d328" loc="46:/home/user/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40c2d328"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40c2d4e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40c2d5c4"/>
        <function-ref name="request" scoped="" ref="0x40c2d6a0"/>
        <function-ref name="granted" scoped="" ref="0x40c2d77c"/>
        <function-ref name="isOwner" scoped="" ref="0x40c2d858"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x40c2da34" loc="48:/home/user/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x40c2da34"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c2dbf4"/>
        <function-ref name="getPayload" scoped="" ref="0x40c2dcd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c2ddac"/>
        <function-ref name="cancel" scoped="" ref="0x40c2de88"/>
        <function-ref name="sendDone" scoped="" ref="0x40c2c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x40c2cd2c" loc="52:/home/user/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x40c2cd2c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c2ceec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x40c2b128" loc="54:/home/user/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x40c2b128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c2b2e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c2b3c4"/>
        <function-ref name="getPayload" scoped="" ref="0x40c2b4a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c2b57c"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c2b658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40c2ee10" loc="44:/home/user/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40c2ee10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40c54010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x40c5416c" loc="45:/home/user/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x40c5416c"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40c5432c"/>
        <function-ref name="isEmpty" scoped="" ref="0x40c54408"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40c544e4"/>
        <function-ref name="dequeue" scoped="" ref="0x40c545c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40c4e49c" loc="46:/home/user/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40c4e49c"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40c4e65c"/>
        <function-ref name="stopDone" scoped="" ref="0x40c4e738"/>
        <function-ref name="start" scoped="" ref="0x40c4e814"/>
        <function-ref name="stop" scoped="" ref="0x40c4e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40c4d3d8" loc="51:/home/user/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40c4d3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c4d598"/>
        <function-ref name="getPayload" scoped="" ref="0x40c4d674"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c4d750"/>
        <function-ref name="cancel" scoped="" ref="0x40c4d82c"/>
        <function-ref name="sendDone" scoped="" ref="0x40c4d908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40c4db14" loc="52:/home/user/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40c4db14"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c4dcd4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40c51400" loc="43:/home/user/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40c51400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c515c0"/>
        <function-ref name="getPayload" scoped="" ref="0x40c5169c"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c51778"/>
        <function-ref name="cancel" scoped="" ref="0x40c51854"/>
        <function-ref name="sendDone" scoped="" ref="0x40c51930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40c51e5c" loc="45:/home/user/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40c51e5c"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x40c4e050"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x40c4e12c"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40c4e208"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40c4e2e4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x40c4eadc" loc="47:/home/user/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendState" scoped="" ref="0x40c4eadc"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40c4ec9c"/>
        <function-ref name="toIdle" scoped="" ref="0x40c4ed78"/>
        <function-ref name="isState" scoped="" ref="0x40c4ee54"/>
        <function-ref name="isIdle" scoped="" ref="0x40c4d010"/>
        <function-ref name="requestState" scoped="" ref="0x40c4d0ec"/>
        <function-ref name="forceState" scoped="" ref="0x40c4d1c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40c4df14" loc="53:/home/user/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40c4df14"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40c4c0f4"/>
        <function-ref name="stopDone" scoped="" ref="0x40c4c1d0"/>
        <function-ref name="start" scoped="" ref="0x40c4c2ac"/>
        <function-ref name="stop" scoped="" ref="0x40c4c388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40c51ab4" loc="44:/home/user/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40c51ab4"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c51c74"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40c4cae4" loc="41:/home/user/tinyos-main/tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40c4cae4"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x40c4cca4"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x40c4cd80"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40c4ce5c"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40c49010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x40c4b984" loc="67:/home/user/tinyos-main/tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40c4b984"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40c4bb44"/>
        <function-ref name="toIdle" scoped="" ref="0x40c4bc20"/>
        <function-ref name="isState" scoped="" ref="0x40c4bcfc"/>
        <function-ref name="isIdle" scoped="" ref="0x40c4bdd8"/>
        <function-ref name="requestState" scoped="" ref="0x40c4beb4"/>
        <function-ref name="forceState" scoped="" ref="0x40c4a010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40c6c030" loc="45:/home/user/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40c6c030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c6c1f0"/>
        <function-ref name="getPayload" scoped="" ref="0x40c6c2cc"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c6c3a8"/>
        <function-ref name="cancel" scoped="" ref="0x40c6c484"/>
        <function-ref name="sendDone" scoped="" ref="0x40c6c560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40c6d1f4" loc="40:/home/user/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40c6d1f4"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c6d3b4"/>
        <function-ref name="getPayload" scoped="" ref="0x40c6d490"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c6d56c"/>
        <function-ref name="cancel" scoped="" ref="0x40c6d648"/>
        <function-ref name="sendDone" scoped="" ref="0x40c6d724"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40c6d8c8" loc="41:/home/user/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40c6d8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40c6da88"/>
        <function-ref name="setRetries" scoped="" ref="0x40c6db64"/>
        <function-ref name="getRetries" scoped="" ref="0x40c6dc40"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40c6dd1c"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40c6ddf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x40c69424" loc="44:/home/user/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40c69424"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40c695e4"/>
        <function-ref name="noAck" scoped="" ref="0x40c696c0"/>
        <function-ref name="wasAcked" scoped="" ref="0x40c6979c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40c6cc70" loc="40:/home/user/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40c6cc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40c6ce30"/>
        <function-ref name="setRetries" scoped="" ref="0x40c6cf0c"/>
        <function-ref name="getRetries" scoped="" ref="0x40c69010"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40c690ec"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40c691c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40c83098" loc="59:/home/user/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40c83098"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c83258"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40c5b918" loc="58:/home/user/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40c5b918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c5bad8"/>
        <function-ref name="getPayload" scoped="" ref="0x40c5bbb4"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c5bc90"/>
        <function-ref name="cancel" scoped="" ref="0x40c5bd6c"/>
        <function-ref name="sendDone" scoped="" ref="0x40c5be48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x40c821c8" loc="62:/home/user/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x40c821c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x40c82388"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x40c82464"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x40c82540"/>
        <function-ref name="syncDone" scoped="" ref="0x40c8261c"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x40c826f8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x40c827d4"/>
        <function-ref name="setChannel" scoped="" ref="0x40c828b0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x40c8298c"/>
        <function-ref name="setPanAddr" scoped="" ref="0x40c82a68"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x40c82b44"/>
        <function-ref name="getExtAddr" scoped="" ref="0x40c82c20"/>
        <function-ref name="getShortAddr" scoped="" ref="0x40c82cfc"/>
        <function-ref name="sync" scoped="" ref="0x40c82dd8"/>
        <function-ref name="getChannel" scoped="" ref="0x40c81010"/>
        <function-ref name="getPanAddr" scoped="" ref="0x40c810ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x40c5b0fc" loc="54:/home/user/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x40c5b0fc"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x405187bc"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x40c5b2bc"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x40c5b398"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x40c5b474"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x40c5b550"/>
        <function-ref name="setCca" scoped="" ref="0x40c5b62c"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x40c5b708"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x40c5ca58" loc="53:/home/user/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x40c5ca58"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x405187bc"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40c5cc18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x40c81a08" loc="64:/home/user/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x40c81a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x40c81bc8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x40c81ca4"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x40c81d80"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x40c81e5c"/>
        <function-ref name="setCca" scoped="" ref="0x40c80010"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x40c800ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40c5c0b0" loc="52:/home/user/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40c5c0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c5c270"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c5c34c"/>
        <function-ref name="getPayload" scoped="" ref="0x40c5c428"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c5c504"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c5c5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40c5e188" loc="48:/home/user/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40c5e188"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x405187bc"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c5e348"/>
        <function-ref name="getPayload" scoped="" ref="0x40c5e424"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c5e500"/>
        <function-ref name="cancel" scoped="" ref="0x40c5e5dc"/>
        <function-ref name="sendDone" scoped="" ref="0x40c5e6b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40c5d170" loc="50:/home/user/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40c5d170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x405187bc"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c5d330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x40c83410" loc="60:/home/user/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40c83410"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40c835d0"/>
        <function-ref name="setNetwork" scoped="" ref="0x40c836ac"/>
        <function-ref name="getRssi" scoped="" ref="0x40c83788"/>
        <function-ref name="getNetwork" scoped="" ref="0x40c83864"/>
        <function-ref name="getPower" scoped="" ref="0x40c83940"/>
        <function-ref name="getLqi" scoped="" ref="0x40c83a1c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x40c812f4" loc="63:/home/user/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40c812f4"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x40c81534"/>
        <function-ref name="changed" scoped="" ref="0x40c81610"/>
        <function-ref name="amGroup" scoped="" ref="0x40c816ec"/>
        <function-ref name="setAddress" scoped="" ref="0x40c817c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40c83bfc" loc="61:/home/user/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40c83bfc"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x40c83dbc"/>
        <function-ref name="getHeader" scoped="" ref="0x40c83e98"/>
        <function-ref name="getMetadata" scoped="" ref="0x40c82010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40c5eafc" loc="49:/home/user/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40c5eafc"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x405187bc"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c5ecbc"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40c809b8" loc="67:/home/user/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40c809b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40c80b78"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40c80c54"/>
        <function-ref name="led1On" scoped="" ref="0x40c80d30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40c80e0c"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40c80ee8"/>
        <function-ref name="get" scoped="" ref="0x40c7f010"/>
        <function-ref name="led1Off" scoped="" ref="0x40c7f0ec"/>
        <function-ref name="led2Off" scoped="" ref="0x40c7f45c"/>
        <function-ref name="set" scoped="" ref="0x40c7f1c8"/>
        <function-ref name="led0On" scoped="" ref="0x40c7f2a4"/>
        <function-ref name="led2On" scoped="" ref="0x40c7f380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40c5d4c0" loc="51:/home/user/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40c5d4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40c5d680"/>
        <function-ref name="source" scoped="" ref="0x40c5d75c"/>
        <function-ref name="address" scoped="" ref="0x40c5d838"/>
        <function-ref name="destination" scoped="" ref="0x40c5d914"/>
        <function-ref name="setSource" scoped="" ref="0x40c5d9f0"/>
        <function-ref name="setDestination" scoped="" ref="0x40c5dacc"/>
        <function-ref name="type" scoped="" ref="0x40c5dba8"/>
        <function-ref name="setType" scoped="" ref="0x40c5dc84"/>
        <function-ref name="isForMe" scoped="" ref="0x40c5dd60"/>
        <function-ref name="setGroup" scoped="" ref="0x40c5de3c"/>
        <function-ref name="localGroup" scoped="" ref="0x40c5df18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x40c80320" loc="66:/home/user/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioResource" scoped="" ref="0x40c80320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40c804e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40c805bc"/>
        <function-ref name="request" scoped="" ref="0x40c80698"/>
        <function-ref name="granted" scoped="" ref="0x40c80774"/>
        <function-ref name="isOwner" scoped="" ref="0x40c80850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40cb394c" loc="46:/home/user/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="sendAckAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40cb394c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40cb3b0c"/>
        <function-ref name="payloadLength" scoped="" ref="0x40cb3be8"/>
        <function-ref name="getPayload" scoped="" ref="0x40cb3cc4"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40cb3da0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40cb3e7c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40cb3650" loc="45:/home/user/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="sendAckAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40cb3650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40cb3810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40cb1010" loc="47:/home/user/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="sendAckAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40cb1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40cb11d0"/>
        <function-ref name="source" scoped="" ref="0x40cb12ac"/>
        <function-ref name="address" scoped="" ref="0x40cb1388"/>
        <function-ref name="destination" scoped="" ref="0x40cb1464"/>
        <function-ref name="setSource" scoped="" ref="0x40cb1540"/>
        <function-ref name="setDestination" scoped="" ref="0x40cb161c"/>
        <function-ref name="type" scoped="" ref="0x40cb16f8"/>
        <function-ref name="setType" scoped="" ref="0x40cb17d4"/>
        <function-ref name="isForMe" scoped="" ref="0x40cb18b0"/>
        <function-ref name="setGroup" scoped="" ref="0x40cb198c"/>
        <function-ref name="localGroup" scoped="" ref="0x40cb1a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40cd99d0" loc="45:/home/user/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="sendAckAppC.Timer0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40cd99d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aaec8"/>
            <typename><typedef-ref name="TMilli" ref="0x403a70c4"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40cd6400"/>
        <function-ref name="fired" scoped="" ref="0x40cd8720"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40cd8de0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40cd8ba0"/>
        <function-ref name="getdt" scoped="" ref="0x40cd6880"/>
        <function-ref name="gett0" scoped="" ref="0x40cd6640"/>
        <function-ref name="isRunning" scoped="" ref="0x40cd8960"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40cd8010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40cd6100"/>
        <function-ref name="startOneShot" scoped="" ref="0x40cd8278"/>
        <function-ref name="stop" scoped="" ref="0x40cd84e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40cd557c" loc="45:/home/user/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="sendAckAppC.Timer1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40cd557c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aaec8"/>
            <typename><typedef-ref name="TMilli" ref="0x403a70c4"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40cd3010"/>
        <function-ref name="fired" scoped="" ref="0x40cd4284"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40cd4944"/>
        <function-ref name="isOneShot" scoped="" ref="0x40cd4704"/>
        <function-ref name="getdt" scoped="" ref="0x40cd3490"/>
        <function-ref name="gett0" scoped="" ref="0x40cd3250"/>
        <function-ref name="isRunning" scoped="" ref="0x40cd44c4"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40cd5b50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40cd4c44"/>
        <function-ref name="startOneShot" scoped="" ref="0x40cd5db8"/>
        <function-ref name="stop" scoped="" ref="0x40cd4044"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40cd21bc" loc="45:/home/user/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="sendAckAppC.Timer2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40cd21bc"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aaec8"/>
            <typename><typedef-ref name="TMilli" ref="0x403a70c4"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40cd0b7c"/>
        <function-ref name="fired" scoped="" ref="0x40cd2ea0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40cd057c"/>
        <function-ref name="isOneShot" scoped="" ref="0x40cd033c"/>
        <function-ref name="getdt" scoped="" ref="0x40ccf010"/>
        <function-ref name="gett0" scoped="" ref="0x40cd0dbc"/>
        <function-ref name="isRunning" scoped="" ref="0x40cd00fc"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40cd2790"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40cd087c"/>
        <function-ref name="startOneShot" scoped="" ref="0x40cd29f8"/>
        <function-ref name="stop" scoped="" ref="0x40cd2c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40ccfc34" loc="46:/home/user/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40ccfc34"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40ccfdf4"/>
        <function-ref name="stopDone" scoped="" ref="0x40ccfed0"/>
        <function-ref name="start" scoped="" ref="0x40ccc010"/>
        <function-ref name="stop" scoped="" ref="0x40ccc0ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40ccc528" loc="47:/home/user/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40ccc528"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x405187bc"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ccc6e8"/>
        <function-ref name="getPayload" scoped="" ref="0x40ccc7c4"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ccc8a0"/>
        <function-ref name="cancel" scoped="" ref="0x40ccc97c"/>
        <function-ref name="sendDone" scoped="" ref="0x40ccca58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40ccb1f4" loc="49:/home/user/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40ccb1f4"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ccb3b4"/>
        <function-ref name="payloadLength" scoped="" ref="0x40ccb490"/>
        <function-ref name="getPayload" scoped="" ref="0x40ccb56c"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ccb648"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40ccb724"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40ccce9c" loc="48:/home/user/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40ccce9c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x405187bc"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ccb078"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40ccaaac" loc="53:/home/user/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40ccaaac"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40ccac6c"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40ccad48"/>
        <function-ref name="led1On" scoped="" ref="0x40ccae24"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40ccaf00"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40cc9010"/>
        <function-ref name="get" scoped="" ref="0x40cc90ec"/>
        <function-ref name="led1Off" scoped="" ref="0x40cc91c8"/>
        <function-ref name="led2Off" scoped="" ref="0x40cc9538"/>
        <function-ref name="set" scoped="" ref="0x40cc92a4"/>
        <function-ref name="led0On" scoped="" ref="0x40cc9380"/>
        <function-ref name="led2On" scoped="" ref="0x40cc945c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40cca59c" loc="51:/home/user/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40cca59c"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40cca75c"/>
        <function-ref name="noAck" scoped="" ref="0x40cca838"/>
        <function-ref name="wasAcked" scoped="" ref="0x40cca914"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40ccb8b4" loc="50:/home/user/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40ccb8b4"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40ccba74"/>
        <function-ref name="source" scoped="" ref="0x40ccbb50"/>
        <function-ref name="address" scoped="" ref="0x40ccbc2c"/>
        <function-ref name="destination" scoped="" ref="0x40ccbd08"/>
        <function-ref name="setSource" scoped="" ref="0x40ccbde4"/>
        <function-ref name="setDestination" scoped="" ref="0x40ccbec0"/>
        <function-ref name="type" scoped="" ref="0x40cca010"/>
        <function-ref name="setType" scoped="" ref="0x40cca0ec"/>
        <function-ref name="isForMe" scoped="" ref="0x40cca1c8"/>
        <function-ref name="setGroup" scoped="" ref="0x40cca2a4"/>
        <function-ref name="localGroup" scoped="" ref="0x40cca380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40d1dd98" loc="54:/home/user/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40d1dd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d1b010"/>
        <function-ref name="getPayload" scoped="" ref="0x40d1b0ec"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d1b1c8"/>
        <function-ref name="cancel" scoped="" ref="0x40d1b2a4"/>
        <function-ref name="sendDone" scoped="" ref="0x40d1b380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40d1b4dc" loc="55:/home/user/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40d1b4dc"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d1b69c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40cc8b38" loc="47:/home/user/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40cc8b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x405187bc"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40cc8d08"/>
        <function-ref name="getPayload" scoped="" ref="0x40cc8de4"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40cc8ec0"/>
        <function-ref name="cancel" scoped="" ref="0x40cc7010"/>
        <function-ref name="sendDone" scoped="" ref="0x40cc70ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40d1d228" loc="50:/home/user/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40d1d228"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d1d3e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d1d4c4"/>
        <function-ref name="getPayload" scoped="" ref="0x40d1d5a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d1d67c"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d1d758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40cc72b8" loc="48:/home/user/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40cc72b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x405187bc"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40cc7488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40d1d894" loc="51:/home/user/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40d1d894"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40d1da54"/>
        <function-ref name="noAck" scoped="" ref="0x40d1db30"/>
        <function-ref name="wasAcked" scoped="" ref="0x40d1dc0c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40cc75c4" loc="49:/home/user/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40cc75c4"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40cc7784"/>
        <function-ref name="source" scoped="" ref="0x40cc7860"/>
        <function-ref name="address" scoped="" ref="0x40cc793c"/>
        <function-ref name="destination" scoped="" ref="0x40cc7a18"/>
        <function-ref name="setSource" scoped="" ref="0x40cc7af4"/>
        <function-ref name="setDestination" scoped="" ref="0x40cc7bd0"/>
        <function-ref name="type" scoped="" ref="0x40cc7cac"/>
        <function-ref name="setType" scoped="" ref="0x40cc7d88"/>
        <function-ref name="isForMe" scoped="" ref="0x40cc7e64"/>
        <function-ref name="setGroup" scoped="" ref="0x40d1d010"/>
        <function-ref name="localGroup" scoped="" ref="0x40d1d0ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40d1aaa4" loc="50:/home/user/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40d1aaa4"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40d1ac64"/>
        <function-ref name="stopDone" scoped="" ref="0x40d1ad40"/>
        <function-ref name="start" scoped="" ref="0x40d1ae1c"/>
        <function-ref name="stop" scoped="" ref="0x40d1aef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40d17908" loc="52:/home/user/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40d17908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x405167c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d17ac8"/>
        <function-ref name="getPayload" scoped="" ref="0x40d17ba4"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d17c80"/>
        <function-ref name="cancel" scoped="" ref="0x40d17d5c"/>
        <function-ref name="sendDone" scoped="" ref="0x40d17e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40d1a72c" loc="49:/home/user/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40d1a72c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40d1a8ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40d17344" loc="51:/home/user/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40d17344"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x405167c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d17504"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40d15400" loc="56:/home/user/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40d15400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40d155c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40d1569c"/>
        <function-ref name="led1On" scoped="" ref="0x40d15778"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40d15854"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40d15930"/>
        <function-ref name="get" scoped="" ref="0x40d15a0c"/>
        <function-ref name="led1Off" scoped="" ref="0x40d15ae8"/>
        <function-ref name="led2Off" scoped="" ref="0x40d15e58"/>
        <function-ref name="set" scoped="" ref="0x40d15bc4"/>
        <function-ref name="led0On" scoped="" ref="0x40d15ca0"/>
        <function-ref name="led2On" scoped="" ref="0x40d15d7c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x40d13f0c" loc="55:/home/user/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x40d13f0c"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x405167c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x40d150e0"/>
        <function-ref name="offset" scoped="" ref="0x40d151bc"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x40d15298"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40d147a0" loc="66:/home/user/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40d147a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40d14960"/>
        <function-ref name="stopDone" scoped="" ref="0x40d14a3c"/>
        <function-ref name="start" scoped="" ref="0x40d14b18"/>
        <function-ref name="stop" scoped="" ref="0x40d14bf4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x40d610d0" loc="332:/home/user/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x40d610d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40d61290"/>
        <function-ref name="runTask" scoped="" ref="0x40d6136c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x40d09410" loc="74:/home/user/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x40d09410"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40d095d0"/>
        <function-ref name="stop" scoped="" ref="0x40d096ac"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x40d24010" loc="191:/home/user/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x40d24010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40d241d0"/>
        <function-ref name="runTask" scoped="" ref="0x40d242ac"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40d14428" loc="65:/home/user/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40d14428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40d145e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x40d3135c" loc="75:/home/user/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x40d3135c"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x40d3151c"/>
        <function-ref name="flush" scoped="" ref="0x40d315f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x40d3698c" loc="322:/home/user/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x40d3698c"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40d36b4c"/>
        <function-ref name="runTask" scoped="" ref="0x40d36c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x40d35e70" loc="72:/home/user/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x40d35e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x40d0b050"/>
        <function-ref name="resetSend" scoped="" ref="0x40d0b12c"/>
        <function-ref name="dataReceived" scoped="" ref="0x40d0b208"/>
        <function-ref name="resetReceive" scoped="" ref="0x40d0b2e4"/>
        <function-ref name="putData" scoped="" ref="0x40d0b3c0"/>
        <function-ref name="putDone" scoped="" ref="0x40d0b49c"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x40d0b578"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40d0b6e0" loc="73:/home/user/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40d0b6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40d0b8a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40d0b97c"/>
        <function-ref name="led1On" scoped="" ref="0x40d0ba58"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40d0bb34"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40d0bc10"/>
        <function-ref name="get" scoped="" ref="0x40d0bcec"/>
        <function-ref name="led1Off" scoped="" ref="0x40d0bdc8"/>
        <function-ref name="led2Off" scoped="" ref="0x40d091c8"/>
        <function-ref name="set" scoped="" ref="0x40d0bea4"/>
        <function-ref name="led0On" scoped="" ref="0x40d09010"/>
        <function-ref name="led2On" scoped="" ref="0x40d090ec"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x40d60c00" loc="341:/home/user/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x40d60c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40d60dc0"/>
        <function-ref name="runTask" scoped="" ref="0x40d60e9c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x40d0ce7c" loc="67:/home/user/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x40d0ce7c"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x40d10050"/>
        <function-ref name="nextByte" scoped="" ref="0x40d1012c"/>
        <function-ref name="startSend" scoped="" ref="0x40d10208"/>
        <function-ref name="sendCompleted" scoped="" ref="0x40d102e4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x40d0ae50" loc="68:/home/user/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x40d0ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x40d0f050"/>
        <function-ref name="byteReceived" scoped="" ref="0x40d0f12c"/>
        <function-ref name="endPacket" scoped="" ref="0x40d0f208"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x40dab010" loc="275:/home/user/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x40dab010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40dab1d0"/>
        <function-ref name="runTask" scoped="" ref="0x40dab2ac"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40d86d28" loc="51:/home/user/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40d86d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x405167c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d86ef8"/>
        <function-ref name="getPayload" scoped="" ref="0x40dad010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40dad0ec"/>
        <function-ref name="cancel" scoped="" ref="0x40dad1c8"/>
        <function-ref name="sendDone" scoped="" ref="0x40dad2a4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x40dab428" loc="158:/home/user/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x40dab428"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40dab5e8"/>
        <function-ref name="runTask" scoped="" ref="0x40dab6c4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40d8698c" loc="50:/home/user/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40d8698c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x405167c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d86b5c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x40dad4c0" loc="54:/home/user/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x40dad4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x405167c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x40dad690"/>
        <function-ref name="offset" scoped="" ref="0x40dad76c"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x40dad848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40dac3e0" loc="57:/home/user/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40dac3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40dac5a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40dac67c"/>
        <function-ref name="led1On" scoped="" ref="0x40dac758"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40dac834"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40dac910"/>
        <function-ref name="get" scoped="" ref="0x40dac9ec"/>
        <function-ref name="led1Off" scoped="" ref="0x40dacac8"/>
        <function-ref name="led2On" scoped="" ref="0x40dace38"/>
        <function-ref name="set" scoped="" ref="0x40dacc80"/>
        <function-ref name="led2Off" scoped="" ref="0x40dacba4"/>
        <function-ref name="led0On" scoped="" ref="0x40dacd5c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x40dade38" loc="56:/home/user/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x40dade38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x40dac010"/>
        <function-ref name="nextByte" scoped="" ref="0x40dac0ec"/>
        <function-ref name="startSend" scoped="" ref="0x40dac1c8"/>
        <function-ref name="sendCompleted" scoped="" ref="0x40dac2a4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x40dad984" loc="55:/home/user/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x40dad984"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x40dadb44"/>
        <function-ref name="byteReceived" scoped="" ref="0x40dadc20"/>
        <function-ref name="endPacket" scoped="" ref="0x40dadcfc"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x40dd0610" loc="50:/home/user/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40dd0610"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40dd07d0"/>
        <function-ref name="receivedByte" scoped="" ref="0x40dd08ac"/>
        <function-ref name="receive" scoped="" ref="0x40dd0988"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40dd0a64"/>
        <function-ref name="receiveDone" scoped="" ref="0x40dd0b40"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40dd0c1c"/>
        <function-ref name="sendDone" scoped="" ref="0x40dd0cf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x40daa688" loc="48:/home/user/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x40daa688"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x40daa848"/>
        <function-ref name="resetSend" scoped="" ref="0x40daa924"/>
        <function-ref name="dataReceived" scoped="" ref="0x40daaa00"/>
        <function-ref name="resetReceive" scoped="" ref="0x40daaadc"/>
        <function-ref name="putData" scoped="" ref="0x40daabb8"/>
        <function-ref name="putDone" scoped="" ref="0x40daac94"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x40daad70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40dd0e60" loc="51:/home/user/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40dd0e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40dd6050"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40dd612c"/>
        <function-ref name="led1On" scoped="" ref="0x40dd6208"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40dd62e4"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40dd63c0"/>
        <function-ref name="get" scoped="" ref="0x40dd649c"/>
        <function-ref name="led1Off" scoped="" ref="0x40dd6578"/>
        <function-ref name="led2Off" scoped="" ref="0x40dd68e8"/>
        <function-ref name="set" scoped="" ref="0x40dd6654"/>
        <function-ref name="led0On" scoped="" ref="0x40dd6730"/>
        <function-ref name="led2On" scoped="" ref="0x40dd680c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x40dee7d4" loc="42:/home/user/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x40dee7d4"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40dee994"/>
        <function-ref name="receive" scoped="" ref="0x40deea70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40dd9a50" loc="41:/home/user/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40dd9a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40dd9c10"/>
        <function-ref name="receivedByte" scoped="" ref="0x40dd9cec"/>
        <function-ref name="receive" scoped="" ref="0x40dd9dc8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40dd9ea4"/>
        <function-ref name="receiveDone" scoped="" ref="0x40df1010"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40df10ec"/>
        <function-ref name="sendDone" scoped="" ref="0x40df11c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40dd95f0" loc="40:/home/user/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40dd95f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40dd97b0"/>
        <function-ref name="stop" scoped="" ref="0x40dd988c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x40ded5d4" loc="41:/home/user/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x40ded5d4"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ded794"/>
        <function-ref name="receive" scoped="" ref="0x40ded870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40deda34" loc="42:/home/user/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40deda34"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40dedbf4"/>
        <function-ref name="receivedByte" scoped="" ref="0x40dedcd0"/>
        <function-ref name="receive" scoped="" ref="0x40deddac"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40dede88"/>
        <function-ref name="receiveDone" scoped="" ref="0x40dec010"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40dec0ec"/>
        <function-ref name="sendDone" scoped="" ref="0x40dec1c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40dec510" loc="43:/home/user/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40dec510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a7748"/>
            <typename><typedef-ref name="TMicro" ref="0x403a7904"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212494"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40decc00"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40deb0fc"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40dece5c"/>
        <function-ref name="overflow" scoped="" ref="0x40deb358"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40ded188" loc="40:/home/user/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40ded188"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40ded348"/>
        <function-ref name="stop" scoped="" ref="0x40ded424"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x40de9a10" loc="50:/home/user/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x40de9a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40de9bd0"/>
        <function-ref name="receive" scoped="" ref="0x40de9cac"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x40de86b4" loc="53:/home/user/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x40de86b4"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40de8874"/>
        <function-ref name="stop" scoped="" ref="0x40de8950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40de92fc" loc="48:/home/user/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40de92fc"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40de94bc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40de9e08" loc="51:/home/user/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40de9e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40de8010"/>
        <function-ref name="receivedByte" scoped="" ref="0x40de80ec"/>
        <function-ref name="receive" scoped="" ref="0x40de81c8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40de82a4"/>
        <function-ref name="receiveDone" scoped="" ref="0x40de8380"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40de845c"/>
        <function-ref name="sendDone" scoped="" ref="0x40de8538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40df3ae0" loc="56:/home/user/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40df3ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a7748"/>
            <typename><typedef-ref name="TMicro" ref="0x403a7904"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212494"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40df21ec"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40df26a4"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40df2448"/>
        <function-ref name="overflow" scoped="" ref="0x40df2900"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x40de8ee4" loc="55:/home/user/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x40de8ee4"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40df30b8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40df3194"/>
        <function-ref name="rxDone" scoped="" ref="0x40df3270"/>
        <function-ref name="txDone" scoped="" ref="0x40df334c"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40df3428"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40df3504"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40df35e0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40df36bc"/>
        <function-ref name="tx" scoped="" ref="0x40df3798"/>
        <function-ref name="rx" scoped="" ref="0x40df3874"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40de9618" loc="49:/home/user/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40de9618"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40de97d8"/>
        <function-ref name="stop" scoped="" ref="0x40de98b4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x40de8acc" loc="54:/home/user/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x40de8acc"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40de8c8c"/>
        <function-ref name="stop" scoped="" ref="0x40de8d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x40e11810" loc="49:/home/user/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x40e11810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40e119d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40e11aac"/>
        <function-ref name="rxDone" scoped="" ref="0x40e11b88"/>
        <function-ref name="txDone" scoped="" ref="0x40e11c64"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40e11d40"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40e11e1c"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40e11ef8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40e10010"/>
        <function-ref name="tx" scoped="" ref="0x40e100ec"/>
        <function-ref name="rx" scoped="" ref="0x40e101c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x40e10ddc" loc="53:/home/user/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x40e10ddc"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40e0f010"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40e0f0ec"/>
        <function-ref name="rxDone" scoped="" ref="0x40e0f1c8"/>
        <function-ref name="txDone" scoped="" ref="0x40e0f2a4"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40e0f380"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40e0f45c"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40e0f538"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40e0f614"/>
        <function-ref name="tx" scoped="" ref="0x40e0f6f0"/>
        <function-ref name="rx" scoped="" ref="0x40e0f7cc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x40e11340" loc="48:/home/user/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x40e11340"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40e11500"/>
        <function-ref name="stop" scoped="" ref="0x40e115dc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x40e1041c" loc="51:/home/user/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x40e1041c"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40e105dc"/>
        <function-ref name="stop" scoped="" ref="0x40e106b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x40e1090c" loc="52:/home/user/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x40e1090c"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40e10acc"/>
        <function-ref name="stop" scoped="" ref="0x40e10ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x40e12df4" loc="47:/home/user/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x40e12df4"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40e11010"/>
        <function-ref name="stop" scoped="" ref="0x40e110ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x40e0c010" loc="80:/home/user/tinyos-main/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x40e0c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40e0c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x40e0ce44" loc="83:/home/user/tinyos-main/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x40e0ce44"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40e0b050"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40e0b12c"/>
        <function-ref name="rxDone" scoped="" ref="0x40e0b208"/>
        <function-ref name="txDone" scoped="" ref="0x40e0b2e4"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40e0b3c0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40e0b49c"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40e0b578"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40e0b654"/>
        <function-ref name="tx" scoped="" ref="0x40e0b730"/>
        <function-ref name="rx" scoped="" ref="0x40e0b80c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x40e0ba10" loc="85:/home/user/tinyos-main/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x40e0ba10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40e0bbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x40e0a890" loc="88:/home/user/tinyos-main/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x40e0a890"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40e0aa50"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40e0ab2c"/>
        <function-ref name="rxDone" scoped="" ref="0x40e0ac08"/>
        <function-ref name="txDone" scoped="" ref="0x40e0ace4"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40e0adc0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40e0ae9c"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40e3b010"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40e3b0ec"/>
        <function-ref name="tx" scoped="" ref="0x40e3b1c8"/>
        <function-ref name="rx" scoped="" ref="0x40e3b2a4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x40e0c954" loc="82:/home/user/tinyos-main/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x40e0c954"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40e0cb14"/>
        <function-ref name="stop" scoped="" ref="0x40e0cbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x40e0be44" loc="86:/home/user/tinyos-main/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x40e0be44"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40e0a050"/>
        <function-ref name="stop" scoped="" ref="0x40e0a12c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x40e0a3a0" loc="87:/home/user/tinyos-main/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x40e0a3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40e0a560"/>
        <function-ref name="stop" scoped="" ref="0x40e0a63c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x40e3b498" loc="90:/home/user/tinyos-main/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x40e3b498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40e3b658"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x40e3b734"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x40e3b810"/>
        <function-ref name="actualMicro" scoped="" ref="0x40e3b8ec"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40e3b9c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40e3bba8" loc="91:/home/user/tinyos-main/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40e3bba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40e3bd68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x40e0c444" loc="81:/home/user/tinyos-main/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x40e0c444"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40e0c604"/>
        <function-ref name="stop" scoped="" ref="0x40e0c6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40def830" loc="24:/home/user/tinyos-main/tos/platforms/mica/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40def830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a7748"/>
            <typename><typedef-ref name="TMicro" ref="0x403a7904"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212494"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40deff20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40e6a3ec"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40e6a190"/>
        <function-ref name="overflow" scoped="" ref="0x40e6a648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40e66164" loc="24:/home/user/tinyos-main/tos/platforms/mica/CounterThree16C.nc">
      <component-ref qname="CounterThree16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40e66164"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a7748"/>
            <typename><typedef-ref name="TThree" ref="0x403c84f8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e66854"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40e66d0c"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40e66ab0"/>
        <function-ref name="overflow" scoped="" ref="0x40e64010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40e60b84" loc="46:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40e60b84"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40e60d44"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x40e60e20"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40e60efc"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x40e5f010"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40e5f0ec"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40e5f1c8"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x40e5f2a4"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x40e5f380"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x40e5f45c"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x40e5f538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40e5f85c" loc="47:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40e5f85c"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40e5c26c"/>
        <function-ref name="test" scoped="" ref="0x40e5ece4"/>
        <function-ref name="get" scoped="" ref="0x40e5fe4c"/>
        <function-ref name="captured" scoped="" ref="0x40e5e34c"/>
        <function-ref name="reset" scoped="" ref="0x40e5e5d0"/>
        <function-ref name="isOn" scoped="" ref="0x40e5c010"/>
        <function-ref name="set" scoped="" ref="0x40e5e0c8"/>
        <function-ref name="start" scoped="" ref="0x40e5e82c"/>
        <function-ref name="stop" scoped="" ref="0x40e5ea88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40e5c940" loc="48:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40e5c940"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40e5be60"/>
        <function-ref name="fired" scoped="" ref="0x40e5b4f0"/>
        <function-ref name="get" scoped="" ref="0x40e5b010"/>
        <function-ref name="reset" scoped="" ref="0x40e5b74c"/>
        <function-ref name="isOn" scoped="" ref="0x40e5a0fc"/>
        <function-ref name="set" scoped="" ref="0x40e5b26c"/>
        <function-ref name="start" scoped="" ref="0x40e5b9a8"/>
        <function-ref name="stop" scoped="" ref="0x40e5bc04"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40e64a04" loc="45:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40e64a04"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40e60358"/>
        <function-ref name="test" scoped="" ref="0x40e61e60"/>
        <function-ref name="get" scoped="" ref="0x40e61010"/>
        <function-ref name="setScale" scoped="" ref="0x40e605b4"/>
        <function-ref name="getScale" scoped="" ref="0x40e60838"/>
        <function-ref name="reset" scoped="" ref="0x40e6174c"/>
        <function-ref name="overflow" scoped="" ref="0x40e614f0"/>
        <function-ref name="isOn" scoped="" ref="0x40e600fc"/>
        <function-ref name="set" scoped="" ref="0x40e6126c"/>
        <function-ref name="start" scoped="" ref="0x40e619a8"/>
        <function-ref name="stop" scoped="" ref="0x40e61c04"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40e55c10" loc="46:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40e55c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40e55dd0"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x40e55eac"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40e86010"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x40e860ec"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40e861c8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40e862a4"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x40e86380"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x40e8645c"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x40e86538"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x40e86614"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x40e836c0" loc="48:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x40e836c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40e82b18"/>
        <function-ref name="fired" scoped="" ref="0x40e821a8"/>
        <function-ref name="get" scoped="" ref="0x40e83cb0"/>
        <function-ref name="reset" scoped="" ref="0x40e82404"/>
        <function-ref name="isOn" scoped="" ref="0x40e82d74"/>
        <function-ref name="set" scoped="" ref="0x40e83f0c"/>
        <function-ref name="start" scoped="" ref="0x40e82660"/>
        <function-ref name="stop" scoped="" ref="0x40e828bc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40e86938" loc="47:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40e86938"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40e832a0"/>
        <function-ref name="test" scoped="" ref="0x40e85db4"/>
        <function-ref name="get" scoped="" ref="0x40e86f28"/>
        <function-ref name="captured" scoped="" ref="0x40e8541c"/>
        <function-ref name="reset" scoped="" ref="0x40e856a0"/>
        <function-ref name="isOn" scoped="" ref="0x40e83044"/>
        <function-ref name="set" scoped="" ref="0x40e85198"/>
        <function-ref name="start" scoped="" ref="0x40e858fc"/>
        <function-ref name="stop" scoped="" ref="0x40e85b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x40e81190" loc="49:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x40e81190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40e7f5f0"/>
        <function-ref name="fired" scoped="" ref="0x40e81c60"/>
        <function-ref name="get" scoped="" ref="0x40e81780"/>
        <function-ref name="reset" scoped="" ref="0x40e81ebc"/>
        <function-ref name="isOn" scoped="" ref="0x40e7f84c"/>
        <function-ref name="set" scoped="" ref="0x40e819dc"/>
        <function-ref name="start" scoped="" ref="0x40e7f138"/>
        <function-ref name="stop" scoped="" ref="0x40e7f394"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x40e7fc44" loc="50:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x40e7fc44"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40e7d0c8"/>
        <function-ref name="fired" scoped="" ref="0x40e7e740"/>
        <function-ref name="get" scoped="" ref="0x40e7e260"/>
        <function-ref name="reset" scoped="" ref="0x40e7e99c"/>
        <function-ref name="isOn" scoped="" ref="0x40e7d324"/>
        <function-ref name="set" scoped="" ref="0x40e7e4bc"/>
        <function-ref name="start" scoped="" ref="0x40e7ebf8"/>
        <function-ref name="stop" scoped="" ref="0x40e7ee54"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40e5aac4" loc="45:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40e5aac4"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40e553e4"/>
        <function-ref name="test" scoped="" ref="0x40e56f18"/>
        <function-ref name="get" scoped="" ref="0x40e560c8"/>
        <function-ref name="setScale" scoped="" ref="0x40e55640"/>
        <function-ref name="getScale" scoped="" ref="0x40e558c4"/>
        <function-ref name="reset" scoped="" ref="0x40e56804"/>
        <function-ref name="overflow" scoped="" ref="0x40e565a8"/>
        <function-ref name="isOn" scoped="" ref="0x40e55188"/>
        <function-ref name="set" scoped="" ref="0x40e56324"/>
        <function-ref name="start" scoped="" ref="0x40e56a60"/>
        <function-ref name="stop" scoped="" ref="0x40e56cbc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40ed0ac0" loc="46:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40ed0ac0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x403445a8"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x403445a8"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40ed0c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40ed0e84" loc="47:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40ed0e84"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40ecd7ac"/>
        <function-ref name="test" scoped="" ref="0x40ecd2f4"/>
        <function-ref name="get" scoped="" ref="0x40ecf490"/>
        <function-ref name="setScale" scoped="" ref="0x40ecda08"/>
        <function-ref name="getScale" scoped="" ref="0x40ecdc8c"/>
        <function-ref name="reset" scoped="" ref="0x40ecfbcc"/>
        <function-ref name="overflow" scoped="" ref="0x40ecf970"/>
        <function-ref name="isOn" scoped="" ref="0x40ecd550"/>
        <function-ref name="set" scoped="" ref="0x40ecf6ec"/>
        <function-ref name="start" scoped="" ref="0x40ecfe28"/>
        <function-ref name="stop" scoped="" ref="0x40ecd098"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40ed2d40" loc="45:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40ed2d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a7748"/>
            <typename><typedef-ref name="TThree" ref="0x403c84f8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ed1444"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40ed18fc"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40ed16a0"/>
        <function-ref name="overflow" scoped="" ref="0x40ed1b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40ed1e24" loc="46:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40ed1e24"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40ec9758"/>
        <function-ref name="test" scoped="" ref="0x40ec92a0"/>
        <function-ref name="get" scoped="" ref="0x40eca428"/>
        <function-ref name="setScale" scoped="" ref="0x40ec99b4"/>
        <function-ref name="getScale" scoped="" ref="0x40ec9c38"/>
        <function-ref name="reset" scoped="" ref="0x40ecab64"/>
        <function-ref name="overflow" scoped="" ref="0x40eca908"/>
        <function-ref name="isOn" scoped="" ref="0x40ec94fc"/>
        <function-ref name="set" scoped="" ref="0x40eca684"/>
        <function-ref name="start" scoped="" ref="0x40ecadc0"/>
        <function-ref name="stop" scoped="" ref="0x40ec9044"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x40ec6a78" loc="63:/home/user/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x40ec6a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a7748"/>
            <typename><typedef-ref name="TThree" ref="0x403c84f8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ec51ec"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40ec56a4"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40ec5448"/>
        <function-ref name="overflow" scoped="" ref="0x40ec5900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40ec78c4" loc="62:/home/user/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40ec78c4"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a7748"/>
            <typename><typedef-ref name="TMicro" ref="0x403a7904"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212494"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ec6010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40ec64c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40ec626c"/>
        <function-ref name="overflow" scoped="" ref="0x40ec6724"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x40e6baf0" loc="47:/home/user/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x40e6baf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x40e6bcb0"/>
        <function-ref name="offset" scoped="" ref="0x40e6bd8c"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x40e6be68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40eeeb4c" loc="10:FakeSensorC.nc">
      <component-ref qname="sendAckAppC.FakeSensorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40eeeb4c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40eed1d0"/>
        <function-ref name="readDone" scoped="" ref="0x40eed410"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x4126f4b0" loc="13:FakeSensorP.nc">
      <component-ref qname="sendAckAppC.FakeSensorC.FakeSensorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0" scoped="" ref="0x4126f4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aaec8"/>
            <typename><typedef-ref name="TMilli" ref="0x403a70c4"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4126ef10"/>
        <function-ref name="fired" scoped="" ref="0x4126e250"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4126e910"/>
        <function-ref name="isOneShot" scoped="" ref="0x4126e6d0"/>
        <function-ref name="getdt" scoped="" ref="0x4126d3ac"/>
        <function-ref name="gett0" scoped="" ref="0x4126d16c"/>
        <function-ref name="isRunning" scoped="" ref="0x4126e490"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4126fa84"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4126ec10"/>
        <function-ref name="startOneShot" scoped="" ref="0x4126fcec"/>
        <function-ref name="stop" scoped="" ref="0x4126e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x41271480" loc="10:FakeSensorP.nc">
      <component-ref qname="sendAckAppC.FakeSensorC.FakeSensorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x41271480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41271a54"/>
        <function-ref name="readDone" scoped="" ref="0x41271c94"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x4126f010" loc="12:FakeSensorP.nc">
      <component-ref qname="sendAckAppC.FakeSensorC.FakeSensorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x4126f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x4126f1d0"/>
        <function-ref name="rand32" scoped="" ref="0x4126f2ac"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4126c02c" loc="45:/home/user/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="sendAckAppC.FakeSensorC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4126c02c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aaec8"/>
            <typename><typedef-ref name="TMilli" ref="0x403a70c4"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4126ba90"/>
        <function-ref name="fired" scoped="" ref="0x4126cd10"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4126b490"/>
        <function-ref name="isOneShot" scoped="" ref="0x4126b250"/>
        <function-ref name="getdt" scoped="" ref="0x4126bf10"/>
        <function-ref name="gett0" scoped="" ref="0x4126bcd0"/>
        <function-ref name="isRunning" scoped="" ref="0x4126b010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4126c600"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4126b790"/>
        <function-ref name="startOneShot" scoped="" ref="0x4126c868"/>
        <function-ref name="stop" scoped="" ref="0x4126cad0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/home/user/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x403f5ca8" loc="62:/home/user/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/home/user/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/user/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/user/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x403f51b0" loc="60:/home/user/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/user/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x403f8e2c" loc="60:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212494"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x403f8cdc" loc="60:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212494"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x403f958c" loc="31:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x403f9b80" loc="39:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212494"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212494"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x403f9a30" loc="39:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212494"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x403f8250" loc="46:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212494"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212494"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x403f8100" loc="46:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212494"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x403f8774" loc="53:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/home/user/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/user/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x4040ae18" loc="44:/home/user/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x404081f0" loc="45:/home/user/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x4040a6f0" loc="42:/home/user/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x40408958" loc="47:/home/user/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4040aa7c" loc="43:/home/user/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x40408598" loc="46:/home/user/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4040a010" loc="40:/home/user/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x4040a370" loc="41:/home/user/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/user/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/user/tinyos-main/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x40347314" loc="57:/home/user/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/user/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x40347bbc" loc="72:/home/user/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/user/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x40347724" loc="65:/home/user/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/user/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/user/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x4034e920" loc="67:/home/user/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/user/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x4034ee08" loc="75:/home/user/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/user/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/home/user/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/home/user/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x403d2010" loc="76:/home/user/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/home/user/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/user/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/home/user/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x403e0334" loc="62:/home/user/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/user/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x40392c1c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/user/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/user/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x403dcde4" loc="52:/home/user/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/user/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/user/tinyos-main/tos/interfaces/Random.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x404e1828" loc="52:/home/user/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="48:/home/user/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x404e13b8" loc="46:/home/user/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="42:/home/user/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212494"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/user/tinyos-main/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x403f1b28" loc="53:/home/user/tinyos-main/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x403f1b28"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x404e2160" loc="64:/home/user/tinyos-main/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/user/tinyos-main/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x403f1b28"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x404e2010" loc="64:/home/user/tinyos-main/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x403f1b28"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/user/tinyos-main/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/user/tinyos-main/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x4053a700" loc="113:/home/user/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/user/tinyos-main/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x4053a5b0" loc="113:/home/user/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x405393fc" loc="138:/home/user/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/user/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x405392ac" loc="138:/home/user/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4052dcf0" loc="104:/home/user/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/user/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4053abdc" loc="130:/home/user/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/user/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/user/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/user/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40544dd0" loc="53:/home/user/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40544dd0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x405402fc" loc="136:/home/user/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/user/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212494"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x4054229c" loc="83:/home/user/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/user/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x40541340" loc="114:/home/user/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/user/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212494"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212494"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40541010" loc="114:/home/user/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212494"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x405411e8" loc="114:/home/user/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212494"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x40542b80" loc="98:/home/user/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/user/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x40540c00" loc="151:/home/user/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/user/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212494"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x40540708" loc="144:/home/user/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/user/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212494"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x405426f4" loc="92:/home/user/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/user/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x40537400" loc="64:/home/user/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/user/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212494"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x405372b0" loc="64:/home/user/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212494"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x40541ce4" loc="129:/home/user/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/user/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212494"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212494"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x405419b4" loc="129:/home/user/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212494"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x40541b8c" loc="129:/home/user/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212494"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x40537a60" loc="73:/home/user/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/user/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212494"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40537910" loc="73:/home/user/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212494"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40537efc" loc="78:/home/user/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/user/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/user/tinyos-main/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/user/tinyos-main/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x404efda8" loc="65:/home/user/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/user/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404efc58" loc="65:/home/user/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x4052b724" loc="78:/home/user/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/user/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4052b5d4" loc="78:/home/user/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x4052a5ec" loc="126:/home/user/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/user/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4052a2a4" loc="126:/home/user/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4052a478" loc="126:/home/user/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x4052cc7c" loc="106:/home/user/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/user/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x4052c33c" loc="94:/home/user/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/user/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4052c010" loc="94:/home/user/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4052c1e4" loc="94:/home/user/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/user/tinyos-main/tos/interfaces/AMSend.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x404eeaf4" loc="80:/home/user/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/user/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40518c4c"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x404ee5bc" loc="80:/home/user/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40518c4c"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x404ee7c0" loc="80:/home/user/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404ee994" loc="80:/home/user/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x4053d544" loc="135:/home/user/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/user/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4053d1fc" loc="135:/home/user/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4053d3d0" loc="135:/home/user/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40531cb0" loc="123:/home/user/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/user/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40530758" loc="96:/home/user/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/user/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40530608" loc="96:/home/user/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40531400" loc="110:/home/user/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/user/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405310c0" loc="110:/home/user/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x405312a8" loc="110:/home/user/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/home/user/tinyos-main/tos/interfaces/Read.nc">
      <documentation loc="33:/home/user/tinyos-main/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x40547e6c" loc="49:/home/user/tinyos-main/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40547e6c"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x405512fc" loc="55:/home/user/tinyos-main/tos/interfaces/Read.nc">
        <documentation loc="50:/home/user/tinyos-main/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x40551a64" loc="63:/home/user/tinyos-main/tos/interfaces/Read.nc">
        <documentation loc="57:/home/user/tinyos-main/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40547e6c"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x4055174c" loc="63:/home/user/tinyos-main/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x4055190c" loc="63:/home/user/tinyos-main/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40547e6c"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/user/tinyos-main/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x4053871c" loc="78:/home/user/tinyos-main/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/user/tinyos-main/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
              <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405381fc" loc="78:/home/user/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x405383cc" loc="78:/home/user/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x405385a0" loc="78:/home/user/tinyos-main/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/user/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x40535054" loc="59:/home/user/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/user/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40529ed8" loc="59:/home/user/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x40535ae8" loc="71:/home/user/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/user/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40535998" loc="71:/home/user/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x40533530" loc="85:/home/user/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/user/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405333e0" loc="85:/home/user/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/user/tinyos-main/tos/interfaces/AMPacket.nc">
      <function command="" provided="0" name="group" ref="0x40523398" loc="177:/home/user/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/user/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x40518a04"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40523248" loc="177:/home/user/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x40528010" loc="88:/home/user/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/user/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x40518c4c"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4051bea8" loc="88:/home/user/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x4051b010" loc="68:/home/user/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/user/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x40518c4c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x4051b664" loc="78:/home/user/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/user/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x40518c4c"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4051b514" loc="78:/home/user/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x405257fc" loc="121:/home/user/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/user/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40518c4c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x405254b0" loc="121:/home/user/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x405256a4" loc="121:/home/user/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40518c4c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x40528b80" loc="103:/home/user/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/user/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40518c4c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40528834" loc="103:/home/user/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40528a28" loc="103:/home/user/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40518c4c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x40526e20" loc="147:/home/user/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/user/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x405187bc"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40526cd0" loc="147:/home/user/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x405228f8" loc="162:/home/user/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/user/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x405187bc"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x405225e0" loc="162:/home/user/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x405227a0" loc="162:/home/user/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x405187bc"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x40526358" loc="136:/home/user/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/user/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40526208" loc="136:/home/user/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x4052f010" loc="187:/home/user/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/user/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x40518a04"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40523c54" loc="187:/home/user/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x40523e48" loc="187:/home/user/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x40518a04"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x4052f830" loc="195:/home/user/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/user/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x40518a04"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/user/tinyos-main/tos/interfaces/Send.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x4057d3ec" loc="75:/home/user/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="57:/home/user/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4057d0c0" loc="75:/home/user/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4057d294" loc="75:/home/user/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40589d8c" loc="125:/home/user/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="115:/home/user/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40589a44" loc="125:/home/user/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40589c18" loc="125:/home/user/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40589518" loc="112:/home/user/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="102:/home/user/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x4058c010" loc="89:/home/user/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="77:/home/user/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4057de80" loc="89:/home/user/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x4058cc30" loc="100:/home/user/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="91:/home/user/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4058c8f0" loc="100:/home/user/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x4058cad8" loc="100:/home/user/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/home/user/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x405be590" loc="35:/home/user/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x405be590"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x405be6ec" loc="35:/home/user/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405be6ec"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x405caa14" loc="63:/home/user/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/home/user/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405be6ec"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405ca8c4" loc="63:/home/user/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x405c8474" loc="70:/home/user/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/home/user/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405c8324" loc="70:/home/user/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x405bed20" loc="49:/home/user/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/home/user/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405bebd0" loc="49:/home/user/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x405c8eb8" loc="78:/home/user/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/home/user/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405be6ec"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405c8b64" loc="78:/home/user/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x405c8d60" loc="78:/home/user/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405be6ec"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/user/tinyos-main/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/user/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x405d2d64" loc="65:/home/user/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/home/user/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d29e4" loc="65:/home/user/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x405d2c0c" loc="65:/home/user/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x405d080c" loc="71:/home/user/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/home/user/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d06bc" loc="71:/home/user/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x405d2540" loc="57:/home/user/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/home/user/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x405c6de0" loc="52:/home/user/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/home/user/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x405c6c90" loc="52:/home/user/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/home/user/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:/home/user/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x405ed6b0" loc="95:/home/user/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/home/user/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405ed560" loc="95:/home/user/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x405ee604" loc="81:/home/user/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/home/user/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405ee4b4" loc="81:/home/user/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x405e1800" loc="66:/home/user/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/home/user/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x405e16b0" loc="66:/home/user/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x405e1160" loc="60:/home/user/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/home/user/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x405e1010" loc="60:/home/user/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x405e1db8" loc="73:/home/user/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/home/user/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x405e1c68" loc="73:/home/user/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x405eee5c" loc="88:/home/user/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/home/user/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405eed0c" loc="88:/home/user/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/home/user/tinyos-main/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/home/user/tinyos-main/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x405e2d34" loc="59:/home/user/tinyos-main/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/home/user/tinyos-main/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40518c4c"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x405e29d8" loc="59:/home/user/tinyos-main/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40518c4c"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x405e2bdc" loc="59:/home/user/tinyos-main/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x405e648c" loc="56:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x405e614c" loc="56:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x405e6334" loc="56:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x405e3378" loc="77:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x405e3010" loc="77:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x405e3220" loc="77:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x405e6ad4" loc="64:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x40211300"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x405e6984" loc="64:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x405e49c8" loc="75:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x405e4878" loc="75:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x405d9c58" loc="47:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x405d9b08" loc="47:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x405e4180" loc="72:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x405e4030" loc="72:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/home/user/tinyos-main/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/home/user/tinyos-main/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x405e9e24" loc="65:/home/user/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/home/user/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405e9cd4" loc="65:/home/user/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x405eb390" loc="46:/home/user/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/home/user/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405eb010" loc="46:/home/user/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x405eb238" loc="46:/home/user/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x405e953c" loc="59:/home/user/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/home/user/tinyos-main/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405e93ec" loc="59:/home/user/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x405ebef4" loc="53:/home/user/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/home/user/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405ebb74" loc="53:/home/user/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x405ebd9c" loc="53:/home/user/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x405f7700" loc="71:/home/user/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/home/user/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405f75b0" loc="71:/home/user/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/home/user/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/home/user/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x405d8cb4" loc="47:/home/user/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/home/user/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d8b64" loc="47:/home/user/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/user/tinyos-main/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/user/tinyos-main/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x405ff340" loc="120:/home/user/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/user/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x405f0a68" loc="97:/home/user/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/user/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x405f049c" loc="88:/home/user/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/user/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x405f0ee8" loc="102:/home/user/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/user/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x405ffa00" loc="128:/home/user/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/user/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x4060e704" loc="51:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x4060e3d4" loc="51:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x4060e5ac" loc="51:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x4060d1d0" loc="65:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x4060c814" loc="84:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x4060c064" loc="84:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x4060c4e0" loc="84:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4060c6b4" loc="84:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x4060db68" loc="73:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x4060d828" loc="73:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x4060da10" loc="73:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x4060ed14" loc="58:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x4060ebc4" loc="58:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/user/tinyos-main/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/user/tinyos-main/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x40603e7c" loc="95:/home/user/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/user/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4060f390" loc="105:/home/user/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/user/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x4061317c" loc="49:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40613010" loc="49:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x40616ae0" loc="42:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x404ed754"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x404f8700"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40616954" loc="42:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x40613bc8" loc="53:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x404f8d94"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x404f6c80"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40613a3c" loc="53:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x406018d4" loc="71:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x40600ae8" loc="97:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x406006b8" loc="90:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x40604b0c" loc="51:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x40601434" loc="63:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x40601db8" loc="76:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x40600280" loc="83:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x40601010" loc="56:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/user/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/user/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x4061ae80" loc="61:/home/user/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/user/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x406192ac" loc="67:/home/user/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/user/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x406196f4" loc="72:/home/user/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/user/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x40619ef4" loc="83:/home/user/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/user/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x40618b7c" loc="100:/home/user/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/user/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40617010" loc="117:/home/user/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/user/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x40619ae4" loc="77:/home/user/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/user/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40617718" loc="134:/home/user/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/user/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x406175c8" loc="134:/home/user/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x4061aa90" loc="56:/home/user/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/user/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x4061837c" loc="89:/home/user/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/user/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x4061876c" loc="94:/home/user/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/user/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/home/user/tinyos-main/tos/interfaces/State.nc">
      <documentation loc="33:/home/user/tinyos-main/tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x406212a8" loc="71:/home/user/tinyos-main/tos/interfaces/State.nc">
        <documentation loc="68:/home/user/tinyos-main/tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x406234d8" loc="56:/home/user/tinyos-main/tos/interfaces/State.nc">
        <documentation loc="53:/home/user/tinyos-main/tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x40623e4c" loc="66:/home/user/tinyos-main/tos/interfaces/State.nc">
        <documentation loc="63:/home/user/tinyos-main/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x40623cfc" loc="66:/home/user/tinyos-main/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x406238bc" loc="61:/home/user/tinyos-main/tos/interfaces/State.nc">
        <documentation loc="58:/home/user/tinyos-main/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x40615a34" loc="45:/home/user/tinyos-main/tos/interfaces/State.nc">
        <documentation loc="40:/home/user/tinyos-main/tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x406158e4" loc="45:/home/user/tinyos-main/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x40623084" loc="51:/home/user/tinyos-main/tos/interfaces/State.nc">
        <documentation loc="47:/home/user/tinyos-main/tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x40615f10" loc="51:/home/user/tinyos-main/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x40649010" loc="106:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x4064ac24" loc="106:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x4064ae18" loc="106:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x4064a300" loc="93:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x4064bcac" loc="87:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x4064b8d4" loc="87:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x4064bb54" loc="87:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x4064e2c8" loc="55:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x4064e178" loc="55:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x4064a7d8" loc="98:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x4064da28" loc="72:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x4064d8d8" loc="72:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x4064ec04" loc="61:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x4064eab4" loc="61:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x40649a80" loc="117:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x4064b3f8" loc="78:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x4064b2a8" loc="78:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x406495f8" loc="112:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x4064d038" loc="66:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x405d4b5c"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x405cf010"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x4064d490" loc="71:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x4063fcd8" loc="54:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x4064e6ac" loc="60:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x4064de34" loc="77:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x4065ce0c" loc="55:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x404ec520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4065ccbc" loc="55:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40663478" loc="63:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x404ec520"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40663328" loc="63:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:/home/user/tinyos-main/tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:/home/user/tinyos-main/tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x406511bc" loc="48:/home/user/tinyos-main/tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:/home/user/tinyos-main/tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x405d4b5c"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x405cf010"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/user/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/user/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40651ce8" loc="56:/home/user/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40651ce8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40651e44" loc="56:/home/user/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40651e44"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x4065f010" loc="109:/home/user/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/user/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40651e44"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40662d40" loc="78:/home/user/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/user/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x406619a4" loc="103:/home/user/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/user/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40651e44"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40651e44"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x4066166c" loc="103:/home/user/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40651e44"/></type-var>
          </variable>
          <variable name="dt" ref="0x4066184c" loc="103:/home/user/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40651e44"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x40661194" loc="88:/home/user/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/user/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x4065f460" loc="116:/home/user/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/user/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40651e44"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40662470" loc="66:/home/user/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/user/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40651e44"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40662320" loc="66:/home/user/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40651e44"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40662918" loc="73:/home/user/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/user/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/user/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x4066ab20" loc="50:/home/user/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/user/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x40518c4c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x406693d8" loc="60:/home/user/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/user/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x40669010" loc="55:/home/user/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/user/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x40518a04"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x4066a668" loc="45:/home/user/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/user/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x40518a04"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40518c4c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x4066a31c" loc="45:/home/user/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x40518a04"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x4066a510" loc="45:/home/user/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40518c4c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x4067256c" loc="53:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x404ec520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x40667a28" loc="52:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x404ec520"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x4066722c" loc="52:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x406676d4" loc="52:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x406678c8" loc="52:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x4066680c" loc="63:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x404ec520"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x40666010" loc="63:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x406664b8" loc="63:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x406666ac" loc="63:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/home/user/tinyos-main/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x4066b440" loc="68:/home/user/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/home/user/tinyos-main/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x4066b018" loc="61:/home/user/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/home/user/tinyos-main/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x4065dc24" loc="54:/home/user/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x4065d6f8" loc="53:/home/user/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/home/user/tinyos-main/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="42:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x406cfda0" loc="58:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="57:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403ca2c8"/>
            <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x403ca4e4"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCapture" ref="0x406d0848" loc="50:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403bcb70"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x403bcd8c"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x406d06f8" loc="50:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403bcb70"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x403bcd8c"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x406cf348" loc="54:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="53:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403c4dec"/>
            <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x403c3044"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCompare" ref="0x406d1280" loc="45:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="44:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control registers: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403b8ac4"/>
            <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x403b8ce0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x406cf91c" loc="55:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403c4dec"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x403c3044"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x406cf7cc" loc="55:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403c4dec"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x403c3044"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x406e1398" loc="59:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403ca2c8"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x403ca4e4"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x406e1248" loc="59:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403ca2c8"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x403ca4e4"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlClock" ref="0x406d1c08" loc="47:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403c111c"/>
            <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x403c1338"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCapture" ref="0x406d176c" loc="46:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403bcb70"/>
            <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x403bcd8c"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCompare" ref="0x406d0238" loc="49:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403b8ac4"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x403b8ce0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x406d00e8" loc="49:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403b8ac4"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x403b8ce0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlClock" ref="0x406d0e30" loc="51:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403c111c"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x403c1338"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x406d0ce0" loc="51:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403c111c"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x403c1338"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x406d34a4" loc="40:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406d34a4"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x406ded6c" loc="88:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x406dec1c" loc="88:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x406de3f8" loc="76:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x406d3954" loc="47:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406d34a4"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x406df434" loc="60:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406d34a4"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x406df2e4" loc="60:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406d34a4"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x406df83c" loc="64:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x406de81c" loc="82:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x406d3e8c" loc="53:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406d34a4"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x406d3d3c" loc="53:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406d34a4"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x406dfc0c" loc="67:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x406de010" loc="70:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x406da120" loc="41:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406da120"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x406d9e7c" loc="74:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x406daf1c" loc="58:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x406da5d0" loc="48:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406da120"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x406d9300" loc="62:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x406eb2bc" loc="80:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x406dab18" loc="54:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406da120"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x406da9c8" loc="54:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406da120"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x406d96d0" loc="65:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x406d9a90" loc="68:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x406c7744" loc="55:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x406c7744"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x406d6cf8" loc="98:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x406d64d8" loc="87:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x406c7bf0" loc="61:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x406c7744"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x406d526c" loc="104:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x406d511c" loc="104:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x406d56c8" loc="110:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x406c4940" loc="75:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x406c4558" loc="70:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x406d6904" loc="93:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x406c4160" loc="67:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x406c7744"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x406c4010" loc="67:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x406c7744"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x406c4d10" loc="78:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x406d60ec" loc="81:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x406e3340" loc="45:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403b1010"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x403b122c"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x406e2808" loc="53:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403b4de0"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x403ba010"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x406e3dac" loc="49:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403b57a8"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x403b59c4"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x406e2390" loc="50:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403b57a8"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x403b59c4"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x406e2240" loc="50:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403b57a8"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x403b59c4"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x406e2dd0" loc="54:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403b4de0"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x403ba010"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x406e2c80" loc="54:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403b4de0"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x403ba010"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x406e3928" loc="46:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403b1010"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x403b122c"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x406e37d8" loc="46:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403b1010"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x403b122c"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x406f16e4" loc="38:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x406f1b7c" loc="44:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x406f12fc" loc="32:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x406ef018" loc="50:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x406f4894" loc="21:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403b6114"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x403b6330"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x406f4e40" loc="27:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403b6114"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x403b6330"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x406f4cf0" loc="27:/home/user/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403b6114"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x403b6330"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/user/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/user/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x407aff08" loc="57:/home/user/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x407aff08"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x407aa090" loc="57:/home/user/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x407aa090"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x407aa530" loc="64:/home/user/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/user/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x407aa090"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x407aaee0" loc="76:/home/user/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/user/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x407aaa18" loc="71:/home/user/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/user/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x407a92d8" loc="82:/home/user/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/user/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/home/user/tinyos-main/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x40800a2c" loc="54:/home/user/tinyos-main/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x407fd424" loc="66:/home/user/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/home/user/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x407fd010" loc="61:/home/user/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/home/user/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x40800e04" loc="61:/home/user/tinyos-main/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x40800558" loc="53:/home/user/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/home/user/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="41:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; </short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x40822d8c" loc="56:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="53:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x4081ec20" loc="75:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="72:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x408229c8" loc="51:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="48:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x4081e78c" loc="70:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="65:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x4081e63c" loc="70:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x408225f0" loc="46:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="43:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x4081e1bc" loc="63:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="58:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10; </short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="43:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="35:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x408273a8" loc="48:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="45:/home/user/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/home/user/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:/home/user/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x4086fa8c" loc="24:/home/user/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/home/user/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x4086c010" loc="31:/home/user/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/home/user/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x4086c4b8" loc="39:/home/user/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/home/user/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x40876e08" loc="62:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40876abc" loc="62:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40876cb0" loc="62:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x4087254c" loc="91:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40872010" loc="91:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40872204" loc="91:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x408723ec" loc="91:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40873768" loc="82:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x404ec520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4087341c" loc="82:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40873610" loc="82:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x40876280" loc="51:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x404ec520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40879ee0" loc="51:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40876128" loc="51:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x40874c0c" loc="71:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x408746d0" loc="71:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x408748c4" loc="71:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40874aac" loc="71:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/home/user/tinyos-main/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/home/user/tinyos-main/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x4087edbc" loc="70:/home/user/tinyos-main/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/home/user/tinyos-main/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x4087e878" loc="70:/home/user/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x4087ea7c" loc="70:/home/user/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4087ec5c" loc="70:/home/user/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40895550" loc="82:/home/user/tinyos-main/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/home/user/tinyos-main/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x40897d28" loc="82:/home/user/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x40895010" loc="82:/home/user/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x408951f0" loc="82:/home/user/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x408953e8" loc="83:/home/user/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/home/user/tinyos-main/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x4087fa90" loc="45:/home/user/tinyos-main/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/home/user/tinyos-main/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x4087f940" loc="45:/home/user/tinyos-main/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/home/user/tinyos-main/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/home/user/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x408d6a30" loc="62:/home/user/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/home/user/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x408d68e0" loc="62:/home/user/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x408d35cc" loc="74:/home/user/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/home/user/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x408d347c" loc="74:/home/user/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x408d6f08" loc="68:/home/user/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/home/user/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x408d3bd4" loc="81:/home/user/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/home/user/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x408d3a84" loc="81:/home/user/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x408e2010" loc="86:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x408f9420" loc="126:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x408e0678" loc="117:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x408f99c8" loc="128:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x408f9878" loc="128:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x408e3bac" loc="83:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x408fa560" loc="122:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x408fa410" loc="122:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x408e1930" loc="113:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x408e17e0" loc="113:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x408e282c" loc="97:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x408f69a0" loc="141:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x408f6850" loc="141:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x408e1d54" loc="114:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x408f8314" loc="131:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x408f81c4" loc="131:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x408f8b34" loc="136:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x408f9010" loc="125:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x408fae2c" loc="125:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x408f644c" loc="140:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x408e0bc8" loc="119:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x408e0a78" loc="119:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x408e2d84" loc="103:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x408e2c34" loc="103:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x408e0290" loc="116:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x408e0140" loc="116:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x408fa9dc" loc="123:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x408f9db8" loc="129:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x408f86f0" loc="132:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x408f6010" loc="138:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x408fa010" loc="120:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x408e2400" loc="89:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x408e1328" loc="109:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x408e11d8" loc="109:/home/user/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/user/tinyos-main/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/user/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x408f3634" loc="90:/home/user/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/user/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x408f3afc" loc="98:/home/user/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/user/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/user/tinyos-main/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/user/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x4091da9c" loc="95:/home/user/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/user/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40937010" loc="105:/home/user/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/user/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/user/tinyos-main/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/user/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x409480ec" loc="53:/home/user/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/user/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x40948690" loc="61:/home/user/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/user/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/user/tinyos-main/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/user/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x40964260" loc="65:/home/user/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/user/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x4094ad78" loc="59:/home/user/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/user/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/user/tinyos-main/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/user/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x4095e9cc" loc="79:/home/user/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/user/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40949480"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x4095e87c" loc="79:/home/user/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40949480"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x4096165c" loc="53:/home/user/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/user/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x40961ce0" loc="62:/home/user/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/user/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40949480"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40961b90" loc="62:/home/user/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40949480"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x4095e320" loc="70:/home/user/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/user/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x40949480"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/home/user/tinyos-main/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:/home/user/tinyos-main/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x40a0fb28" loc="43:/home/user/tinyos-main/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/home/user/tinyos-main/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x40a2ad38" loc="63:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x40a2a7e8" loc="63:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x40a2abe0" loc="63:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x40a2a384" loc="55:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x40a2df08" loc="49:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212494"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x40a2ddb8" loc="49:/home/user/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212494"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:/home/user/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x40a35468" loc="58:/home/user/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:/home/user/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a35318" loc="58:/home/user/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x40a16ba4" loc="50:/home/user/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:/home/user/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a16a54" loc="50:/home/user/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40a33578" loc="72:/home/user/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:/home/user/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a33428" loc="72:/home/user/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40a35cdc" loc="65:/home/user/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:/home/user/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a35b8c" loc="65:/home/user/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/user/tinyos-main/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/user/tinyos-main/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40aeceec" loc="53:/home/user/tinyos-main/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40aeceec"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40ae93ac" loc="61:/home/user/tinyos-main/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/user/tinyos-main/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212494"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/home/user/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/home/user/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x40d13964" loc="31:/home/user/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/home/user/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40d135e8" loc="31:/home/user/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x40d1380c" loc="31:/home/user/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x40d16748" loc="15:/home/user/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/home/user/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x40d13010" loc="23:/home/user/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/home/user/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40d16c6c" loc="23:/home/user/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4051ddc4"/>
                <typename><typedef-ref name="message_t" ref="0x4051cb08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x40d16e74" loc="23:/home/user/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/home/user/tinyos-main/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x40d311b0" loc="54:/home/user/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/home/user/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x40d09d88" loc="49:/home/user/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/home/user/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/home/user/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x40d0fb60" loc="56:/home/user/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/home/user/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x40d0875c" loc="72:/home/user/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/home/user/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x40d357ac" loc="94:/home/user/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/home/user/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40d3565c" loc="94:/home/user/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x40d08c50" loc="79:/home/user/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/home/user/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x40d08264" loc="65:/home/user/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/home/user/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40d08114" loc="65:/home/user/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x40d35c84" loc="100:/home/user/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/home/user/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x40d35194" loc="85:/home/user/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/home/user/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/home/user/tinyos-main/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x40d0ed88" loc="71:/home/user/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/home/user/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x40d0c454" loc="81:/home/user/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/home/user/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x40d0e7b4" loc="62:/home/user/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/home/user/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x40d0e664" loc="62:/home/user/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x40d0cb4c" loc="91:/home/user/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/home/user/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40d0c9fc" loc="91:/home/user/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/home/user/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/home/user/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x40d10c48" loc="62:/home/user/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/home/user/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x40d0a41c" loc="69:/home/user/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/home/user/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40d0a2cc" loc="69:/home/user/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x40d0aa7c" loc="80:/home/user/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/home/user/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x40d0a92c" loc="80:/home/user/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/home/user/tinyos-main/tos/interfaces/UartStream.nc">
      <documentation loc="32:/home/user/tinyos-main/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40dd7804" loc="48:/home/user/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="39:/home/user/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40dd74cc" loc="48:/home/user/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40dd76ac" loc="48:/home/user/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x40dd2a34" loc="79:/home/user/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="74:/home/user/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40dd28e4" loc="79:/home/user/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x40dd1218" loc="90:/home/user/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="81:/home/user/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40dd2eb4" loc="90:/home/user/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40dd10c0" loc="90:/home/user/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x40dd4ef8" loc="65:/home/user/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="59:/home/user/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x40dd0020" loc="99:/home/user/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="92:/home/user/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40dd1ae4" loc="99:/home/user/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40dd1cc4" loc="99:/home/user/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40dd1eac" loc="99:/home/user/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x40dd2464" loc="72:/home/user/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="67:/home/user/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40dd4604" loc="57:/home/user/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="50:/home/user/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40dd40dc" loc="57:/home/user/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40dd42bc" loc="57:/home/user/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40211e4c"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40dd44a4" loc="57:/home/user/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/home/user/tinyos-main/tos/interfaces/UartByte.nc">
      <documentation loc="32:/home/user/tinyos-main/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40df1a10" loc="46:/home/user/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="39:/home/user/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40df18c0" loc="46:/home/user/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x40dee288" loc="56:/home/user/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="48:/home/user/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40df1f08" loc="56:/home/user/tinyos-main/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x40dee130" loc="56:/home/user/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/home/user/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/home/user/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x40de24b4" loc="44:/home/user/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x40de5cc8" loc="42:/home/user/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x40de1984" loc="49:/home/user/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40de1834" loc="49:/home/user/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x40de10ec" loc="47:/home/user/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x40de54b8" loc="40:/home/user/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x40de58c4" loc="41:/home/user/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x40de20ec" loc="43:/home/user/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034f484"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x40de287c" loc="45:/home/user/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034576c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x40de2d4c" loc="46:/home/user/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40de2bfc" loc="46:/home/user/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x40de148c" loc="48:/home/user/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4021181c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
